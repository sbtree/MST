// ###############################################################################################################################
// 	Prüfschrittauflistung für alle DIS-2 48/10 und Lenze-Variante
// ###############################################################################################################################
// =============================================================
// -----------------------------------------------------------------------------
//     History           : 2012-04-19 /lzh/ Anpassung für das Programm PP_ATT_UNI
//                         folgende 9 Prüfschritt Liste sind zusammengefügt:
//                         DIS2_FB_ECAT_PSListe.TXT
//                         DIS2_4810_CAN_FB_PSListe.TXT
//                         DIS2_4810_FB_PSListe.TXT
//                         DIS2_4810_KU_PSListe.TXT
//                         DIS2_4810_KUR2_PSListe.TXT
//                         DIS2_4810_PSListe.txt
//                         DIS2_FBAFAG_PB_PSListe.TXT
//                         DIS2_FBAFAG_PSListe.TXT
//                         DIS2_FBFO_PSListe.TXT
// -----------------------------------------------------------------------------
//2015-07-20 /bsu/: In Absprach mit PME/LTE/MLU wurde der Faktor in PS160 und PS170 von 10 auf 10.23 gesetzt. 
//2016-01-22 /bsu/: In Absprach mit LTE/MRI wurde die Obergrenze in PS10.04 von 51V auf 52V gesetzt. 
//2016-03-07 /bsu/: BL/FW-Download wurde über RS232 umgestellt: PS65 wurde statt PS50 u. PS60 ingesetzt 
// =============================================================
VERSION=1.4.100000.1.1
RAZOR_REVISION=$Revision: 1.30 $
         
   //Nr.          Titel                                                                  Relais_on                              Funktion                     Masseinheit    Parameter                    Relais_off                                  Toleranzen
   //------------+-----------------------------------------------------------------------+-------------------------------------+----------------------------+--------------+----------------------------+------------------------------------------+----------------------------------------
  
// 10.Prüfplatzselbsttest - Überprüfung der Spannungen 
    (Nr:  10.00; T: 'Test Spannungen PP';                                                 R_on: '';                             Fkt: LabelFkt;               M: '';         Par: 'NIO-Loop:1';           R_off: '108';                              Tol: ( A: '';              Min: 0;      Max: 0      ); ),
    (Nr:  10.02; T: '  Messbus DMM_Klein ohne Spannung?';                                 R_on: '';                             Fkt: U_Mess_DC;              M: 'V';        Par: '';                     R_off:'';                                  Tol: ( A: '';              Min: -0.3;   Max: 0.3    ); ),
    (Nr:  10.04; T: '  Prüfplatz-Selbsttest 48V -(ZK-Versorgung)';                        R_on: '108,139,140';                  Fkt: U_Mess_DC;              M: 'V';        Par: '';                     R_off: '108';                              Tol: ( A: '';              Min: 46;     Max: 52     ); ),
    (Nr:  10.06; T: '  Warten(%s)';                                                       R_on: '';                             Fkt: Wait;                   M: '';         Par: '500';                  R_off: '';                                 Tol: ( A: '';              Min:  0;     Max: 0      ); ),
    (Nr:  10.10; T: '  Prüfplatz-Selbsttest 24V -(CT-Versorgung)';                        R_on: '107';                          Fkt: U_Mess_DC;              M: 'V';        Par: '';                     R_off: '107';                              Tol: ( A: '';              Min: 22;     Max: 26     ); ),
    (Nr:  10.14; T: '  Prüfplatz-Selbsttest 9V_Ref';                                      R_on: '138';                          Fkt: U_Mess_DC;              M: 'V';        Par: '';                     R_off: '138';                              Tol: ( A: '';              Min: 8.995;  Max: 9.006  ); ),
    (Nr:  10.16; T: '  DIS2-Aufnahme belegt';                                             R_on: '129';                          Fkt: U_Mess_DC;              M: 'V';        Par: '';                     R_off: '129';                              Tol: ( A: '';              Min: 22.000; Max: 26.000 ); ),
    (Nr:  10.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                    M: '';         Par: '';                     R_off: '107,108,129,138,139,140';          Tol: ( A: '';              Min: 0;      Max: 0      ); ),
                                                                                                                                                                                                                                                                               
// 20.Stromaufnahme CT                                                                                                                                                                                                                                                       
    (Nr:  20.00; T: 'Test Stromaufnahme CT - Init.';                                      R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '107,139,140,203';                  Tol: ( A: '';              Min: 0;      Max: 0      ); ),
    (Nr:  20.02; T: '  Spg.-Messung ohne Last';                                           R_on: '107,139,140';                  Fkt: U_Mess_DC;               M: 'V';       Par: '';                     R_off: '';                                 Tol: ( A: '';              Min: 22;     Max: 26     ); ),
    (Nr:  20.04; T: '  Spg.-Messung mit Last (CT)';                                       R_on: '203';                          Fkt: U_Mess_DC;               M: 'V';       Par: '';                     R_off: '107,139,140,203';                  Tol: ( A: '';              Min: 22;     Max: 26     ); ),
    (Nr:  20.06; T: '  CT-Stromaufnahme';                                                 R_on: '';                             Fkt: I_Berechnung;            M: 'mA';      Par: '10';                   R_off: '';                                 Tol: ( A: '';              Min: 5;      Max: 200    ); ),
    (Nr:  20.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '107,139,140,203';                  Tol: ( A: '';              Min: 0;      Max: 0      ); ),
                                                                                                                                                                                                                                                                               
// 30.Messung Prüfling - interne Spannungen   (bei DIS2- 12V_Trb entfällt)                                                                                                                                                                                                   
    (Nr:  30.00; T: 'Test Prüflings interne Spannungen - Init.';                          R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '104,105,139,140,203,235';          Tol: ( A: '';              Min: 0;      Max: 0      ); ),
    (Nr:  30.02; T: '  Test +12V_ana';                                                    R_on: '139,140,203,235';              Fkt: U_Mess_DC;               M: 'V';       Par: '';                     R_off:'235';                               Tol: ( A: '';              Min: 11.4;   Max: 12.6   ); ),
    (Nr:  30.04; T: '  Test +5V_ana';                                                     R_on: '104';                          Fkt: U_Mess_DC;               M: 'V';       Par: '';                     R_off:'104';                               Tol: ( A: '';              Min: 4.85;   Max: 5.15   ); ),
    (Nr:  30.06; T: '  Test +3,3V';                                                       R_on: '105';                          Fkt: U_Mess_DC;               M: 'V';       Par: '';                     R_off:'105';                               Tol: ( A: '';              Min: 3.2;    Max: 3.4    ); ),
    (Nr:  30.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off:'104,105,139,140,203,235';           Tol: ( A: '';              Min: 0;      Max: 0      ); ),
                                                                                                                                                                                                                                                                               
// 40.ZK Aufladen                                                                                                                                                                                                                                                            
    (Nr:  40.00; T: 'Test ZK  - Init.';                                                   R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '';                                 Tol: ( A: '';              Min: 0;      Max: 0      ); ),
    (Nr:  40.02; T: '  48V-Spg.-Messung ohne Last';                                       R_on: '108,139,140';                  Fkt: U_Mess_DC;               M: 'V';       Par: '';                     R_off: '';                                 Tol: ( A: '';              Min: 46;     Max: 56     ); ),
    (Nr:  40.04; T: '  ZK aufladen und %sms warten';                                      R_on: '202,203';                      Fkt: Wait;                    M: '';        Par: '100';                  R_off: '';                                 Tol: ( A: '';              Min: 0;      Max: 0      ); ),
    (Nr:  40.06; T: '  48V-Spg.-Messung mit Last (ZK)';                                   R_on: '';                             Fkt: U_Mess_DC;               M: 'V';       Par: '';                     R_off:'108,139,140,202';                   Tol: ( A: '';              Min: 44;     Max: 56     ); ),
    (Nr:  40.08; T: '  ZK-Stromaufnahme';                                                 R_on: '';                             Fkt: I_Berechnung2;           M: 'mA';      Par: '47';                   R_off:'';                                  Tol: ( A: '';              Min: 0.1;    Max: 200    ); ),
    (Nr:  40.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off:'108,139,140,202';                   Tol: ( A: '';              Min: 0;      Max: 0      ); ),
         
//65.BL/FW-Download über RS232                                                                                                                                                                                         
    (Nr:  65.00; T: 'Prüfplatz einschalten für BL/FW-Download';                           R_on: '224';                          Fkt: Nil;                     M: '';        Par: '';                     R_off: '';                                 Tol: ( A: ''; Min: 0; Max: 0 ); ),
    (Nr:  65.01; T:'  BL/FW-Download über RS232 falls keine FW vorhanden ist';            R_on: '203';                          Fkt: TryUpdate;               M: '';        Par: 'BOOTLOADER_0001 FIRMWARE_0001'; R_off: '';                        Tol: ( A: ''; Min: 0; Max: 0 ); ),
    (Nr:  65.10; T:'  Bootloader-Version abfragen (%s)';                                  R_on: '';                             Fkt: COM;                     M: '2000 ms'; Par: 'OR:0019';              R_off: '';                                 Tol: ( A: '0019:????????'; Min:  0;    Max:  0      ); ),
    (Nr:  65.11; T:'  BL-Versionsstring zu bilden';                                       R_on: '';                             Fkt: BuildVersionStr;         M: '';        Par: '@LastInt[1]';          R_off: '';                                 Tol: ( A: ''; Min:  0;    Max:  0      ); ),
    (Nr:  65.12; T:'  BL-Update falls die Version nicht erwartet ist';                    R_on: '';                             Fkt: TestVersionBL;           M: '';        Par: '@LastStr[1] BOOTLOADER_0001 FIRMWARE_0001';  R_off: '';           Tol: ( A: ''; Min:  0;    Max:  0      ); ),
    (Nr:  65.15; T:'  Bootloader-Version abfragen (%s)';                                  R_on: '';                             Fkt: COM;                     M: '2000 ms'; Par: 'OR:0019';              R_off: '';                                 Tol: ( A: '0019:@BLVerMain[1]'; Min:  0;    Max:  0      ); ),
    (Nr:  65.20; T:'  FW-Version abfragen (%s)';                                          R_on: '';                             Fkt: COM;                     M: '2000 ms'; Par: 'OR:0026';              R_off: '';                                 Tol: ( A: '0026:????????';Min:  0;    Max:  0      ); ),
    (Nr:  65.21; T:'  FW-App abfragen (%s)';                                              R_on: '';                             Fkt: COM;                     M: '2000 ms'; Par: 'OR:0018';              R_off: '';                                 Tol: ( A: '0018:????????'; Min:  0;    Max:  0      ); ),
    (Nr:  65.22; T:'  FW-KM abfragen (%s)';                                               R_on: '';                             Fkt: COM;                     M: '2000 ms'; Par: 'OR:0017';              R_off: '';                                 Tol: ( A: '0017:????????'; Min:  0;    Max:  0      ); ),
    (Nr:  65.23; T:'  FW-Versionsstring zu bilden';                                       R_on: '';                             Fkt: BuildVersionStr;         M: '';        Par: '@LastInt[3] @LastInt[2] @LastInt[1]';  R_off: '';                 Tol: ( A: ''; Min:  0;    Max:  0      ); ),
    (Nr:  65.24; T:'  FW-Download falls die Version nicht erwartet ist';                  R_on: '';                             Fkt: TestVersionFW;           M: '';        Par: '@LastStr[1] FIRMWARE_0001';  R_off: '';                           Tol: ( A: ''; Min:  0;    Max:  0      ); ),
    (Nr:  65.25; T:'  FW-Version abfragen (%s)';                                          R_on: '';                             Fkt: COM;                     M: '2000 ms'; Par: 'OR:0026';              R_off: '';                                 Tol: ( A: '0026:@FWVerMain[1]';Min:  0;    Max:  0      ); ),
    (Nr:  65.26; T:'  FW-App abfragen (%s)';                                              R_on: '';                             Fkt: COM;                     M: '2000 ms'; Par: 'OR:0018';              R_off: '';                                 Tol: ( A: '0018:@FWVerApp[1]'; Min:  0;    Max:  0      ); ),
    (Nr:  65.27; T:'  FW-KM abfragen (%s)';                                               R_on: '';                             Fkt: COM;                     M: '2000 ms'; Par: 'OR:0017';              R_off: '';                                 Tol: ( A: '0017:@FWVerKM'; Min:  0;    Max:  0      ); ),
    (Nr:  65.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '203';                              Tol: ( A: '';              Min: 0;     Max: 0       ); ),
        
//70.Stromaufnahme-CT  (mit Firmware)                                                                                                                                                                                         
    (Nr:  70.00; T: 'Test Stromaufnahme CT (mit Firmware) - Init.';                       R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '';                                 Tol: ( A: '';              Min: 0;     Max: 0       ); ),
    (Nr:  70.02; T: '  Spg.-Messung ohne Last';                                           R_on: '107,139,140';                  Fkt: U_Mess_DC;               M: 'V';       Par: '';                     R_off: '';                                 Tol: ( A: '';              Min: 22;    Max: 26      ); ),
    (Nr:  70.04; T: '  Spg.-Messung mit Last (CT)';                                       R_on: '203';                          Fkt: U_Mess_DC;               M: 'V';       Par: '';                     R_off: '107,139,140,203';                  Tol: ( A: '';              Min: 22;    Max: 26      ); ),
    (Nr:  70.06; T: '  CT-Stromaufnahme (mit Firmware)';                                  R_on: '';                             Fkt: I_Berechnung;            M: 'mA';      Par: '10';                   R_off: '';                                 Tol: ( A: '';              Min: 50;    Max: 200     ); ),
    (Nr:  70.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '107,139,140,203';                  Tol: ( A: '';              Min: 0;     Max: 0       ); ),
         
    //=========================================================================
    //Resolver_Träger_neu [SIP:3F20:000A!] setzen  für:  
    // DIS2_4810_CAN_FB
    // DIS2_FB (Profibus-Variante)
    // DIS2_FB_ECAT
    // DIS2_FBFO
    // Lenze_931KCK42
    // Lenze_931KPK42 
    // Lenze_931KEK42 
    // =========================================================================
    //Resolver_Träger_neu [SIP:3F20:0002!] setzen  für:
    // DIS2_4810
    // DIS2_4810_KU   
    //==========================================================================
    //Resolver_Träger_neu [SIP:3F20:000E!] setzen für:
    // DIS2_FBAFAG
    // DIS2_FBAFAG_PB
    // DIS2_FBAFAG_EC
    //==========================================================================
    //STO-MTX Varianten [SIP:3F20:000A!] setzen für:
    //DIS2_48/10_STO_FB_CAN 
    //DIS2_48/10_STO_FB_PB   
    //DIS2_48/10_STO_FB_ECAT   
    //==========================================================================
    //Lenze-STO Varianten [SIP:3F20:002A!] setzen für:
    //Lenze_931KCK44
    //Lenze_931KPK44 
    //Lenze_931KEK44 
    //Lenze_931KCK46
    //==========================================================================
    
    (Nr:  75.00; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10           PS_85'; R_off: '';                           Tol: ( A: '';              Min: 0;     Max: 0       );),
    (Nr:  75.02; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_KU        PS_85'; R_off: '';                           Tol: ( A: '';              Min: 0;     Max: 0       );),
    (Nr:  75.04; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_FBAFAG    PS_90'; R_off: '';                           Tol: ( A: '';              Min: 0;     Max: 0       );),
    (Nr:  75.06; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_FBAFAG_PB PS_90'; R_off: '';                           Tol: ( A: '';              Min: 0;     Max: 0       );),
    (Nr:  75.08; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_FBAFAG_EC PS_90'; R_off: '';                           Tol: ( A: '';              Min: 0;     Max: 0       );),

// 75. Lenze-Varianten mit STO                                                                                                                           
    (Nr:  75.42; T:' JUMP_PS_DEVICE(%s)';                                                 R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'Lenze_931KCK44   PS_83';   R_off:'';      Tol: ( A:'';           Min: 0;    Max: 0 );),
    (Nr:  75.44; T:' JUMP_PS_DEVICE(%s)';                                                 R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'Lenze_931KPK44   PS_83';   R_off:'';      Tol: ( A:'';           Min: 0;    Max: 0 );),
    (Nr:  75.46; T:' JUMP_PS_DEVICE(%s)';                                                 R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'Lenze_931KEK44   PS_83';   R_off:'';      Tol: ( A:'';           Min: 0;    Max: 0 );),
    (Nr:  75.48; T:' JUMP_PS_DEVICE(%s)';                                                 R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'Lenze_931KCK46   PS_83';   R_off:'';      Tol: ( A:'';           Min: 0;    Max: 0 );),
                                                                                                                               
// 80.COM-Interface testen und Kennung für Resolver_Träger_neu setzen [SIP:3F20:000A!]                                                                                                                                                                                                                                                                                                                                                            
    (Nr:  80.00; T: 'COM-Test, Resolver- und FB-Kennung setzen';                          R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '';                                 Tol: ( A: '';                   Min: 0;    Max: 0    ); ),
    (Nr:  80.02; T: '  COM-Test Befehl senden [%s]';                                      R_on: '202,203,211,212,230';          Fkt: COM;                     M: '30';      Par: 'OR:0026';              R_off: '';                                 Tol: ( A: '0026:????????';      Min: 0;    Max: 0    ); ),
    (Nr:  80.04; T: '  Resolver-Träger-Kennung-Alt auslesen [%s]';                        R_on: '';                             Fkt: COM;                     M: '10';      Par: 'RIP:3F20';             R_off: '';                                 Tol: ( A: '';                   Min: 0;    Max: 0    ); ),
    (Nr:  80.06; T: '  Servicemodus aktivieren [%s]';                                     R_on: '';                             Fkt: COM;                     M: '10';      Par: 'SIP:012:0001!';        R_off: '';                                 Tol: ( A: '????:CIP:0012:0001'; Min: 0;    Max: 0    ); ),
    (Nr:  80.08; T: '  Kennung setzen FB- und Res_Träger_ [%s]';                          R_on: '';                             Fkt: COM;                     M: '10';      Par: 'SIP:3F20:000A!';       R_off: '';                                 Tol: ( A: '????:CIP:3F20:000A'; Min: 0;    Max: 0    ); ),
    (Nr:  80.10; T: '  Servicemodus deaktivieren [%s]';                                   R_on: '';                             Fkt: COM;                     M: '10';      Par: 'SIP:012:0000!';        R_off: '';                                 Tol: ( A: '????:CIP:0012:0000'; Min: 0;    Max: 0    ); ),
    (Nr:  80.12; T: '  Resolver-Träger-Kennung-Neu auslesen [%s]';                        R_on: '';                             Fkt: COM;                     M: '10';      Par: 'RIP:3F20';             R_off: '';                                 Tol: ( A: '????:CIP:3F20:000A'; Min: 0;    Max: 0    ); ),
    (Nr:  80.14; T: '  Reset ausführen - RESET!';                                         R_on: '';                             Fkt: COM;                     M: '';        Par: 'RESET!';               R_off: '';                                 Tol: ( A: '';                   Min: 0;    Max: 0    ); ),
    (Nr:  80.16; T: '  Bootvorgang abwarten [%s]';                                        R_on: '';                             Fkt: COM;                     M: '20';      Par: 'BOOT?';                R_off: '';                                 Tol: ( A: 'APPLICATION';        Min: 0;    Max: 0    ); ),
    (Nr:  80.18; T: '  Staus Mot.Temp.Auswert. abfragen [%s]';                            R_on: '';                             Fkt: COM;                     M: '30';      Par: 'OR:0094';              R_off: '';                                 Tol: ( A: '0094:????????';      Min: 0;    Max: 0    ); ),
    (Nr:  80.20; T: '  Mot.Temp.Auswert. deaktivieren [%s]';                              R_on: '';                             Fkt: COM;                     M: '30';      Par: 'OW:0094:00000000';     R_off: '';                                 Tol: ( A: 'OK!';                Min: 0;    Max: 0    ); ),
    (Nr:  80.22; T: '  Save ausführen [%s]';                                              R_on: '';                             Fkt: COM;                     M: '-30';     Par: 'SAVE!';                R_off: '';                                 Tol: ( A: 'DONE';               Min: 0;    Max: 0    ); ),
    (Nr:  80.24; T: '  Staus Mot.Temp.Auswert. abfragen [%s]';                            R_on: '';                             Fkt: COM;                     M: '30';      Par: 'OR:0094';              R_off: '';                                 Tol: ( A: '0094:????????';      Min: 0;    Max: 0    ); ),
    (Nr:  80.26; T: '  Fehler quittieren [%s]';                                           R_on: '';                             Fkt: COM;                     M: '30';      Par: 'OW:0061:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                Min: 0;    Max: 0    ); ),
    (Nr:  80.28; T: '  Abgleich (Res_Off) starten [%s]';                                  R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:001A:00000008';     R_off: '';                                 Tol: ( A: 'OK!';                Min: 0;    Max: 0    ); ),
    (Nr:  80.30; T: '  Abgleichende abfragen [%s]';                                       R_on: '';                             Fkt: COM;                     M: '8000 ms'; Par: 'OR:001A';              R_off: '';                                 Tol: ( A: '001A:00000000';      Min: 0;    Max: 0    ); ),
    (Nr:  80.32; T: '  Resolver Sin Offset-Wert abfragen [%s]';                           R_on: '';                             Fkt: COM;                     M: '10';      Par: 'RIP:123';              R_off: '';                                 Tol: ( A: '????:CIP:0123:????'; Min: 0;    Max: 0    ); ),
    (Nr:  80.34; T: '  Resolver Sin Offset-Wert Toleranzuntersuchung';                    R_on: '';                             Fkt: Konvert2Dez;             M: '';        Par: '';                     R_off: '';                                 Tol: ( A: '';                   Min: 16000;Max: 16768); ),
    (Nr:  80.36; T: '  Resolver Cos Offset-Wert abfragen [%s]';                           R_on: '';                             Fkt: COM;                     M: '10';      Par: 'RIP:124';              R_off: '';                                 Tol: ( A: '????:CIP:0124:????'; Min: 0;    Max: 0    ); ),
    (Nr:  80.38; T: '  Resolver Cos Offset-Wert Toleranzuntersuchung';                    R_on: '';                             Fkt: Konvert2Dez;             M: '';        Par: '';                     R_off: '';                                 Tol: ( A: '';                   Min: 16000;Max: 16768); ),
    (Nr:  80.40; T: '  Resolver Phasen-Wert abfragen [%s]';                               R_on: '';                             Fkt: COM;                     M: '10';      Par: 'RIP:122';              R_off: '';                                 Tol: ( A: '????:CIP:0122:????'; Min: 0;    Max: 0    ); ),
    (Nr:  80.42; T: '  Resolver Phasen-Wert Toleranzuntersuchung';                        R_on: '';                             Fkt: Konvert2Dez;             M: '';        Par: '';                     R_off: '';                                 Tol: ( A: '';                   Min: 768;  Max: 1536 ); ),
    (Nr:  80.44; T: '  Reset ausführen - RESET!';                                         R_on: '';                             Fkt: COM;                     M: '';        Par: 'RESET!';               R_off: '';                                 Tol: ( A: '';                   Min: 0;    Max: 0    ); ),
    (Nr:  80.46; T: '  Bootvorgang abwarten [%s]';                                        R_on: '';                             Fkt: COM;                     M: '20';      Par: 'BOOT?';                R_off: '';                                 Tol: ( A: 'APPLICATION';        Min: 0;    Max: 0    ); ),
    (Nr:  80.48; T: '  Fehler abfragen [%s]';                                             R_on: '';                             Fkt: COM;                     M: '10';      Par: 'OR:0070';              R_off: '';                                 Tol: ( A: '0070:????????';      Min: 0;    Max: 0    ); ),
    (Nr:  80.50; T: '  Fehler abfragen [%s]';                                             R_on: '';                             Fkt: COM;                     M: '10';      Par: 'OR:0071';              R_off: '';                                 Tol: ( A: '0071:????????';      Min: 0;    Max: 0    ); ),
    (Nr:  80.52; T: '  Bereitschaft abfragen [%s]';                                       R_on: '';                             Fkt: COM;                     M: '50';      Par: 'RIP:054';              R_off: '';                                 Tol: ( A: '????:CIP:0054:2000'; Min: 0;    Max: 0    ); ),
    (Nr:  80.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '202,211,212,230';                  Tol: ( A: '';                   Min: 0;    Max: 0    ); ),
   
    (Nr:  82.00; T:'JUMP_PS(%s)';                                                         R_on: '';                             Fkt: jump_ps;                 M: '';        Par: 'PS_95';                R_off: '';                                 Tol: ( A: '';                   Min: 0;    Max: 0    ); ),
    
// 83. STO-Lenze-Kennung schreiben  [SIP:3F20:002A!]                                                                                                                                                                                                                                                                                                                                                           
    (Nr:  83.00; T: 'COM-Test, Resolver- und Gerätekennung STO-Lenze schreiben';          R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '';                                 Tol: ( A: '';                   Min: 0;    Max: 0    ); ),
    (Nr:  83.02; T: '  COM-Test Befehl senden [%s]';                                      R_on: '202,203,211,212,230';          Fkt: COM;                     M: '30';      Par: 'OR:0026';              R_off: '';                                 Tol: ( A: '0026:????????';      Min: 0;    Max: 0    ); ),
    (Nr:  83.04; T: '  Resolver-Träger-Kennung-Alt auslesen [%s]';                        R_on: '';                             Fkt: COM;                     M: '10';      Par: 'RIP:3F20';             R_off: '';                                 Tol: ( A: '';                   Min: 0;    Max: 0    ); ),
    (Nr:  83.06; T: '  Servicemodus aktivieren [%s]';                                     R_on: '';                             Fkt: COM;                     M: '10';      Par: 'SIP:012:0001!';        R_off: '';                                 Tol: ( A: '????:CIP:0012:0001'; Min: 0;    Max: 0    ); ),
    (Nr:  83.08; T: '  Kennung setzen Lenze und Res_Träger_ [%s]';                        R_on: '';                             Fkt: COM;                     M: '10';      Par: 'SIP:3F20:002A!';       R_off: '';                                 Tol: ( A: '????:CIP:3F20:002A'; Min: 0;    Max: 0    ); ),
    (Nr:  83.10; T: '  Servicemodus deaktivieren [%s]';                                   R_on: '';                             Fkt: COM;                     M: '10';      Par: 'SIP:012:0000!';        R_off: '';                                 Tol: ( A: '????:CIP:0012:0000'; Min: 0;    Max: 0    ); ),
    (Nr:  83.12; T: '  Resolver-Träger-Kennung-Neu auslesen [%s]';                        R_on: '';                             Fkt: COM;                     M: '10';      Par: 'RIP:3F20';             R_off: '';                                 Tol: ( A: '????:CIP:3F20:002A'; Min: 0;    Max: 0    ); ),
    (Nr:  83.14; T: '  Reset ausführen - RESET!';                                         R_on: '';                             Fkt: COM;                     M: '';        Par: 'RESET!';               R_off: '';                                 Tol: ( A: '';                   Min: 0;    Max: 0    ); ),
    (Nr:  83.16; T: '  Bootvorgang abwarten [%s]';                                        R_on: '';                             Fkt: COM;                     M: '20';      Par: 'BOOT?';                R_off: '';                                 Tol: ( A: 'APPLICATION';        Min: 0;    Max: 0    ); ),
    (Nr:  83.18; T: '  Staus Mot.Temp.Auswert. abfragen [%s]';                            R_on: '';                             Fkt: COM;                     M: '30';      Par: 'OR:0094';              R_off: '';                                 Tol: ( A: '0094:????????';      Min: 0;    Max: 0    ); ),
    (Nr:  83.20; T: '  Mot.Temp.Auswert. deaktivieren [%s]';                              R_on: '';                             Fkt: COM;                     M: '30';      Par: 'OW:0094:00000000';     R_off: '';                                 Tol: ( A: 'OK!';                Min: 0;    Max: 0    ); ),
    (Nr:  83.22; T: '  Save ausführen [%s]';                                              R_on: '';                             Fkt: COM;                     M: '-30';     Par: 'SAVE!';                R_off: '';                                 Tol: ( A: 'DONE';               Min: 0;    Max: 0    ); ),
    (Nr:  83.24; T: '  Staus Mot.Temp.Auswert. abfragen [%s]';                            R_on: '';                             Fkt: COM;                     M: '30';      Par: 'OR:0094';              R_off: '';                                 Tol: ( A: '0094:????????';      Min: 0;    Max: 0    ); ),
    (Nr:  83.26; T: '  Fehler quittieren [%s]';                                           R_on: '';                             Fkt: COM;                     M: '30';      Par: 'OW:0061:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                Min: 0;    Max: 0    ); ),
    (Nr:  83.28; T: '  Abgleich (Res_Off) starten [%s]';                                  R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:001A:00000008';     R_off: '';                                 Tol: ( A: 'OK!';                Min: 0;    Max: 0    ); ),
    (Nr:  83.30; T: '  Abgleichende abfragen [%s]';                                       R_on: '';                             Fkt: COM;                     M: '8000 ms'; Par: 'OR:001A';              R_off: '';                                 Tol: ( A: '001A:00000000';      Min: 0;    Max: 0    ); ),
    (Nr:  83.32; T: '  Resolver Sin Offset-Wert abfragen [%s]';                           R_on: '';                             Fkt: COM;                     M: '10';      Par: 'RIP:123';              R_off: '';                                 Tol: ( A: '????:CIP:0123:????'; Min: 0;    Max: 0    ); ),
    (Nr:  83.34; T: '  Resolver Sin Offset-Wert Toleranzuntersuchung';                    R_on: '';                             Fkt: Konvert2Dez;             M: '';        Par: '';                     R_off: '';                                 Tol: ( A: '';                   Min: 16000;Max: 16768); ),
    (Nr:  83.36; T: '  Resolver Cos Offset-Wert abfragen [%s]';                           R_on: '';                             Fkt: COM;                     M: '10';      Par: 'RIP:124';              R_off: '';                                 Tol: ( A: '????:CIP:0124:????'; Min: 0;    Max: 0    ); ),
    (Nr:  83.38; T: '  Resolver Cos Offset-Wert Toleranzuntersuchung';                    R_on: '';                             Fkt: Konvert2Dez;             M: '';        Par: '';                     R_off: '';                                 Tol: ( A: '';                   Min: 16000;Max: 16768); ),
    (Nr:  83.40; T: '  Resolver Phasen-Wert abfragen [%s]';                               R_on: '';                             Fkt: COM;                     M: '10';      Par: 'RIP:122';              R_off: '';                                 Tol: ( A: '????:CIP:0122:????'; Min: 0;    Max: 0    ); ),
    (Nr:  83.42; T: '  Resolver Phasen-Wert Toleranzuntersuchung';                        R_on: '';                             Fkt: Konvert2Dez;             M: '';        Par: '';                     R_off: '';                                 Tol: ( A: '';                   Min: 768;  Max: 1536 ); ),
    (Nr:  83.44; T: '  Reset ausführen - RESET!';                                         R_on: '';                             Fkt: COM;                     M: '';        Par: 'RESET!';               R_off: '';                                 Tol: ( A: '';                   Min: 0;    Max: 0    ); ),
    (Nr:  83.46; T: '  Bootvorgang abwarten [%s]';                                        R_on: '';                             Fkt: COM;                     M: '20';      Par: 'BOOT?';                R_off: '';                                 Tol: ( A: 'APPLICATION';        Min: 0;    Max: 0    ); ),
    (Nr:  83.48; T: '  Fehler abfragen [%s]';                                             R_on: '';                             Fkt: COM;                     M: '10';      Par: 'OR:0070';              R_off: '';                                 Tol: ( A: '0070:????????';      Min: 0;    Max: 0    ); ),
    (Nr:  83.50; T: '  Fehler abfragen [%s]';                                             R_on: '';                             Fkt: COM;                     M: '10';      Par: 'OR:0071';              R_off: '';                                 Tol: ( A: '0071:????????';      Min: 0;    Max: 0    ); ),
    (Nr:  83.52; T: '  Bereitschaft abfragen [%s]';                                       R_on: '';                             Fkt: COM;                     M: '50';      Par: 'RIP:054';              R_off: '';                                 Tol: ( A: '????:CIP:0054:2000'; Min: 0;    Max: 0    ); ),
    (Nr:  83.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '202,211,212,230';                  Tol: ( A: '';                   Min: 0;    Max: 0    ); ),

    (Nr:  84.00; T:'JUMP_PS(%s)';                                                         R_on: '';                             Fkt: jump_ps;                 M: '';        Par: 'PS_95';                R_off: '';                                 Tol: ( A: '';                   Min: 0;    Max: 0    ); ),

// 85. FB - COM-Interface testen und Kennung für Resolver_Träger_neu setzen [SIP:3F20:0002!] 
    (Nr:  85.00; T: 'COM-Test[OR:0026]und Set-Kennung Res_TR und FB ';                    R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '';                                 Tol: ( A: '';                   Min: 0;    Max: 0    ); ),
    (Nr:  85.02; T: '  COM-Test[OR:0026]und Set-Kennung Res_TR und FB ';                  R_on: '202,203,211,212,230';          Fkt: COM;                     M: '15';      Par: 'OR:0026';              R_off: '';                                 Tol: ( A: '0026:????????';      Min: 0;    Max: 0    ); ),
    (Nr:  85.08; T: '  Fehler quittieren [%s]';                                           R_on: '';                             Fkt: COM;                     M: '30';      Par: 'OW:0061:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                Min: 0;    Max: 0    ); ),
    (Nr:  85.10; T: '  Abgleich (Res_Off) starten [%s]';                                  R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:001A:00000008';     R_off: '';                                 Tol: ( A: 'OK!';                Min: 0;    Max: 0    ); ),
    (Nr:  85.12; T: '  Abgleichende abfragen [%s]';                                       R_on: '';                             Fkt: COM;                     M: '8000 ms'; Par: 'OR:001A';              R_off: '';                                 Tol: ( A: '001A:00000000';      Min: 0;    Max: 0    ); ),
    (Nr:  85.14; T: '  Resolver Sin Offset-Wert abfragen [%s]';                           R_on: '';                             Fkt: COM;                     M: '';        Par: 'RIP:123';              R_off: '';                                 Tol: ( A: '????:CIP:0123:????'; Min: 0;    Max: 0    ); ),
    (Nr:  85.16; T: '  Resolver Sin Offset-Wert Toleranzuntersuchung';                    R_on: '';                             Fkt: Konvert2Dez;             M: '';        Par: '';                     R_off: '';                                 Tol: ( A: '';                   Min: 16000;Max: 16768); ),
    (Nr:  85.18; T: '  Resolver Cos Offset-Wert abfragen [%s]';                           R_on: '';                             Fkt: COM;                     M: '';        Par: 'RIP:124';              R_off: '';                                 Tol: ( A: '????:CIP:0124:????'; Min: 0;    Max: 0    ); ),
    (Nr:  85.20; T: '  Resolver Cos Offset-Wert Toleranzuntersuchung';                    R_on: '';                             Fkt: Konvert2Dez;             M: '';        Par: '';                     R_off: '';                                 Tol: ( A: '';                   Min: 16000;Max: 16768); ),
    (Nr:  85.22; T: '  Resolver Phasen-Wert abfragen [%s]';                               R_on: '';                             Fkt: COM;                     M: '';        Par: 'RIP:122';              R_off: '';                                 Tol: ( A: '????:CIP:0122:????'; Min: 0;    Max: 0    ); ),
    (Nr:  85.24; T: '  Resolver Phasen-Wert Toleranzuntersuchung';                        R_on: '';                             Fkt: Konvert2Dez;             M: '';        Par: '';                     R_off: '';                                 Tol: ( A: '';                   Min: 768;  Max: 1536 ); ),
    (Nr:  85.26; T: '  Reset ausführen - RESET!';                                         R_on: '';                             Fkt: COM;                     M: '';        Par: 'RESET!';               R_off: '';                                 Tol: ( A: '';                   Min: 0;    Max: 0    ); ),
    (Nr:  85.28; T: '  Bootvorgang abwarten [%s]';                                        R_on: '';                             Fkt: COM;                     M: '20';      Par: 'BOOT?';                R_off: '';                                 Tol: ( A: 'APPLICATION';        Min: 0;    Max: 0    ); ),
    (Nr:  85.34; T: '  Resolver-Träger-Kennung-Alt auslesen [%s]';                        R_on: '';                             Fkt: COM;                     M: '';        Par: 'RIP:3F20';             R_off: '';                                 Tol: ( A: '';                   Min: 0;    Max: 0    ); ),
    (Nr:  85.36; T: '  Servicemodus aktivieren [%s]';                                     R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:012:0001!';        R_off: '';                                 Tol: ( A: '????:CIP:0012:0001'; Min: 0;    Max: 0    ); ),
    (Nr:  85.38; T: '  Kennung setzen FB- und Res_Träger_ [%s]';                          R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:3F20:0002!';       R_off: '';                                 Tol: ( A: '????:CIP:3F20:0002'; Min: 0;    Max: 0    ); ),
    (Nr:  85.40; T: '  Servicemodus deaktivieren [S%s]';                                  R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:012:0000!';        R_off: '';                                 Tol: ( A: '????:CIP:0012:0000'; Min: 0;    Max: 0    ); ),
    (Nr:  85.42; T: '  Resolver-Träger-Kennung-Neu auslesen [%s]';                        R_on: '';                             Fkt: COM;                     M: '';        Par: 'RIP:3F20';             R_off: '';                                 Tol: ( A: '????:CIP:3F20:0002'; Min: 0;    Max: 0    ); ),
    (Nr:  85.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '202,203,211,212,230';              Tol: ( A: '';                   Min: 0;    Max: 0    ); ),
                                                                                                                                                                                                                                                         
    (Nr:  87.00; T:'JUMP_PS(%s)';                                                         R_on: '';                             Fkt: jump_ps;                 M: '';        Par: 'PS_95';                R_off: '';                                 Tol: ( A: '';                   Min: 0;    Max: 0    ); ),
                                                                                                                                                                                                                                                    
// 90. FB - COM-Interface testen und Kennung für Resolver_Träger_neu setzen [SIP:3F20:000E!]
    (Nr:  90.00; T: 'COM-Test, Resolver- und FB-Kennung setzen';                          R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '';                                 Tol: ( A: '';                   Min: 0;    Max: 0    ); ),
    (Nr:  90.02; T: '  COM-Test[OR:0026]und Set-Kennung Res_TR und FB ';                  R_on: '202,203,211,212,230';          Fkt: COM;                     M: '15';      Par: 'OR:0026';              R_off: '';                                 Tol: ( A: '0026:????????';      Min: 0;    Max: 0    ); ),
    (Nr:  90.04; T: '  Resolver-Träger-Kennung-Alt auslesen [%s]';                        R_on: '';                             Fkt: COM;                     M: '';        Par: 'RIP:3F20';             R_off: '';                                 Tol: ( A: '';                   Min: 0;    Max: 0    ); ),
    (Nr:  90.06; T: '  Servicemodus aktivieren [%s]';                                     R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:012:0001!';        R_off: '';                                 Tol: ( A: '????:CIP:0012:0001'; Min: 0;    Max: 0    ); ),
    (Nr:  90.08; T: '  Kennung setzen FB- und Res_Träger_ [%s]';                          R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:3F20:000E!';       R_off: '';                                 Tol: ( A: '????:CIP:3F20:000E'; Min: 0;    Max: 0    ); ),
    (Nr:  90.10; T: '  Servicemodus deaktivieren [%s]';                                   R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:012:0000!';        R_off: '';                                 Tol: ( A: '????:CIP:0012:0000'; Min: 0;    Max: 0    ); ),
    (Nr:  90.12; T: '  Resolver-Träger-Kennung-Neu auslesen [%s]';                        R_on: '';                             Fkt: COM;                     M: '';        Par: 'RIP:3F20';             R_off: '';                                 Tol: ( A: '????:CIP:3F20:000E'; Min: 0;    Max: 0    ); ),
    (Nr:  90.14; T: '  Reset ausführen - RESET!';                                         R_on: '';                             Fkt: COM;                     M: '';        Par: 'RESET!';               R_off: '';                                 Tol: ( A: '';                   Min: 0;    Max: 0    ); ),
    (Nr:  90.16; T: '  Bootvorgang abwarten [%s]';                                        R_on: '';                             Fkt: COM;                     M: '20';      Par: 'BOOT?';                R_off: '';                                 Tol: ( A: 'APPLICATION';        Min: 0;    Max: 0    ); ),
    (Nr:  90.18; T: '  Staus Mot.Temp.Auswert. abfragen [%s]';                            R_on: '';                             Fkt: COM;                     M: '30';      Par: 'OR:0094';              R_off: '';                                 Tol: ( A: '0094:????????';      Min: 0;    Max: 0    ); ),
    (Nr:  90.20; T: '  Mot.Temp.Auswert. deaktivieren [%s]';                              R_on: '';                             Fkt: COM;                     M: '30';      Par: 'OW:0094:00000000';     R_off: '';                                 Tol: ( A: 'OK!';                Min: 0;    Max: 0    ); ),
    (Nr:  90.24; T: '  Save ausführen [%s]';                                              R_on: '';                             Fkt: COM;                     M: '-30';     Par: 'SAVE!';                R_off: '';                                 Tol: ( A: 'DONE';               Min: 0;    Max: 0    ); ),
    (Nr:  90.26; T: '  Staus Mot.Temp.Auswert. abfragen [%s]';                            R_on: '';                             Fkt: COM;                     M: '30';      Par: 'OR:0094';              R_off: '';                                 Tol: ( A: '0094:????????';      Min: 0;    Max: 0    ); ),
    (Nr:  90.28; T: '  Fehler quittieren [%s]';                                           R_on: '';                             Fkt: COM;                     M: '30';      Par: 'OW:0061:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                Min: 0;    Max: 0    ); ),
    (Nr:  90.30; T: '  Abgleich (Res_Off) starten [%s]';                                  R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:001A:00000008';     R_off: '';                                 Tol: ( A: 'OK!';                Min: 0;    Max: 0    ); ),
    (Nr:  90.32; T: '  Abgleichende abfragen [%s]';                                       R_on: '';                             Fkt: COM;                     M: '10000 ms'; Par: 'OR:001A';              R_off: '';                                 Tol: ( A: '001A:00000000';      Min: 0;    Max: 0    ); ),
    (Nr:  90.34; T: '  Resolver Sin Offset-Wert abfragen [%s]';                           R_on: '';                             Fkt: COM;                     M: '';        Par: 'RIP:123';              R_off: '';                                 Tol: ( A: '????:CIP:0123:????'; Min: 0;    Max: 0    ); ),
    (Nr:  90.36; T: '  Resolver Sin Offset-Wert Toleranzuntersuchung';                    R_on: '';                             Fkt: Konvert2Dez;             M: '';        Par: '';                     R_off: '';                                 Tol: ( A: '';                   Min: 16000;Max: 16768); ),
    (Nr:  90.38; T: '  Resolver Cos Offset-Wert abfragen [%s]';                           R_on: '';                             Fkt: COM;                     M: '';        Par: 'RIP:124';              R_off: '';                                 Tol: ( A: '????:CIP:0124:????'; Min: 0;    Max: 0    ); ),
    (Nr:  90.40; T: '  Resolver Cos Offset-Wert Toleranzuntersuchung';                    R_on: '';                             Fkt: Konvert2Dez;             M: '';        Par: '';                     R_off: '';                                 Tol: ( A: '';                   Min: 16000;Max: 16768); ),
    (Nr:  90.42; T: '  Resolver Phasen-Wert abfragen [%s]';                               R_on: '';                             Fkt: COM;                     M: '';        Par: 'RIP:122';              R_off: '';                                 Tol: ( A: '????:CIP:0122:????'; Min: 0;    Max: 0    ); ),
    (Nr:  90.44; T: '  Resolver Phasen-Wert Toleranzuntersuchung';                        R_on: '';                             Fkt: Konvert2Dez;             M: '';        Par: '';                     R_off: '';                                 Tol: ( A: '';                   Min: 768;  Max: 1536 ); ),
    (Nr:  90.46; T: '  Reset ausführen - RESET!';                                         R_on: '';                             Fkt: COM;                     M: '';        Par: 'RESET!';               R_off: '';                                 Tol: ( A: '';                   Min: 0;    Max: 0    ); ),
    (Nr:  90.48; T: '  Bootvorgang abwarten [%s]';                                        R_on: '';                             Fkt: COM;                     M: '20';      Par: 'BOOT?';                R_off: '';                                 Tol: ( A: 'APPLICATION';        Min: 0;    Max: 0    ); ),
    (Nr:  90.50; T: '  Fehler abfragen [%s]';                                             R_on: '';                             Fkt: COM;                     M: '';        Par: 'OR:0070';              R_off: '';                                 Tol: ( A: '0070:????????';      Min: 0;    Max: 0    ); ),
    (Nr:  90.52; T: '  Bereitschaft abfragen [%s]';                                       R_on: '';                             Fkt: COM;                     M: '30';      Par: 'RIP:054';              R_off: '';                                 Tol: ( A: '????:CIP:0054:2000'; Min: 0;    Max: 0    ); ),
    (Nr:  90.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '202,211,212,230';                  Tol: ( A: '';                   Min: 0;    Max: 0    ); ),

    // alle nicht-STO-Varianten (Prüfschritt "Test Funtionalität STO-Schnittstelle" werden übersprungen)
    (Nr:  95.00; T:'JUMP_PS_DEVICE';                                                      R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10           PS_97'; R_off: '';                           Tol: ( A: '';              Min: 0;     Max: 0       );),
    (Nr:  95.02; T:'JUMP_PS_DEVICE';                                                      R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_KU        PS_97'; R_off: '';                           Tol: ( A: '';              Min: 0;     Max: 0       );),
    (Nr:  95.04; T:'JUMP_PS_DEVICE';                                                      R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_FB_CAN    PS_97'; R_off: '';                           Tol: ( A: '';              Min: 0;     Max: 0       );),
    (Nr:  95.06; T:'JUMP_PS_DEVICE';                                                      R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_FBFO_CAN  PS_97'; R_off: '';                           Tol: ( A: '';              Min: 0;     Max: 0       );),
    (Nr:  95.08; T:'JUMP_PS_DEVICE';                                                      R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_FB_PB     PS_97'; R_off: '';                           Tol: ( A: '';              Min: 0;     Max: 0       );),
    (Nr:  95.10; T:'JUMP_PS_DEVICE';                                                      R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_FB_ECAT   PS_97'; R_off: '';                           Tol: ( A: '';              Min: 0;     Max: 0       );),
    (Nr:  95.12; T:'JUMP_PS_DEVICE';                                                      R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_FBAFAG    PS_97'; R_off: '';                           Tol: ( A: '';              Min: 0;     Max: 0       );),
    (Nr:  95.14; T:'JUMP_PS_DEVICE';                                                      R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_FBAFAG_PB PS_97'; R_off: '';                           Tol: ( A: '';              Min: 0;     Max: 0       );),
    (Nr:  95.15; T:'JUMP_PS_DEVICE';                                                      R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_FBAFAG_EC PS_97'; R_off: '';                           Tol: ( A: '';              Min: 0;     Max: 0       );),
    (Nr:  95.16; T:'JUMP_PS_DEVICE';                                                      R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'Lenze_931KCK42       PS_97'; R_off: '';                           Tol: ( A: '';              Min: 0;     Max: 0       );),
    (Nr:  95.18; T:'JUMP_PS_DEVICE';                                                      R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'Lenze_931KPK42       PS_97'; R_off: '';                           Tol: ( A: '';              Min: 0;     Max: 0       );),
    (Nr:  95.20; T:'JUMP_PS_DEVICE';                                                      R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'Lenze_931KEK42       PS_97'; R_off: '';                           Tol: ( A: '';              Min: 0;     Max: 0       );),
  
// 2014-04-03 /lzh/ Nur für STO-Variante:  Wegen unbekannter Ursache in der FW könnte der Prüfschriitblock
// "Inkrementalgebereingaenge (DIN4; DIN5; DIN6)" nicht hinter dem Prüfschritt 142 "Test Funtionalität STO-Schnittstelle"
// durchgelaufen werden. Und dann wird vor dem "Download Parametersatz" verschoben.
//Für Standard-Variante: wird diesen Prüfschritt übersprung
    (Nr:  96.00; T:'Test Inkrementalgebereingaenge DIN4, DIN5, DIN6  ';                   R_on: '';                             Fkt: nil;                     M: '';        Par: ''; 		               R_off: '208,209,210';                Tol: ( A:'';                    Min:  0;    Max:   0   ); ),
    (Nr:  96.02; T: '  Versorgung einschalten';                                           R_on: '203,230';                      Fkt: Wait;                    M: '';        Par: '500';                        R_off: '';                           Tol: ( A:'';                    Min:  0;    Max:   0   ); ),
    (Nr:  96.03; T: '  Bootvorgang abwarten [%s]';                                        R_on: '';                             Fkt: COM;                     M: '20';      Par: 'BOOT?';                      R_off: '';                           Tol: ( A:'APPLICATION';         Min:  0;    Max:   0   ); ),
    // Kann entfernt werden nach der FW-Änderung
    (Nr:  96.11; T: '  Default-Parametersatz laden';                                      R_on: '';                             Fkt: nil;                     M: '';        Par: '';                           R_off: '';                           Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    //(Nr:  96.12; T: '  Versorgung einschalten und Boot? Abfrage';                         R_on: '203,230';                      Fkt: COM;                     M: '50';      Par: 'BOOT?';                      R_off: '';                           Tol: ( A: 'APPLICATION';         Min: 0;     Max: 0    ); ),
    (Nr:  96.14; T: '  Default-Parameter Laden [%s]';                                     R_on: '';                             Fkt: COM;                     M: '';        Par: 'INIT!';                      R_off: '';                           Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr:  96.15; T: '  Nach INIT! auf den Restart warten [%s]ms';                         R_on: '';                             Fkt: WAIT;                    M: '';        Par: '500';                        R_off: '';                           Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr:  96.16; T: '  Bootvorgang abwarten [%s]';                                        R_on: '';                             Fkt: COM;                     M: '40';      Par: 'BOOT?';                      R_off: '';                           Tol: ( A: 'APPLICATION';         Min: 0;     Max: 0    ); ),
    (Nr:  96.24; T:'   Inkrementalgebereingang aktivieren (%s)';                          R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:00A2:00000080';           R_off: '';                           Tol: ( A:'OK!';                 Min:  0;    Max:   0   ); ),
    (Nr:  96.26; T:'   Inkrementalgebereingang aktivieren (%s)';                          R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:00A2:00000000';           R_off: '';                           Tol: ( A:'OK!';                 Min:  0;    Max:   0   ); ),
    //(Nr:  96.27; T:'   Inkrementalgebereingang abfragen (%s)';                            R_on: '';                             Fkt: COM;                     M: '20';      Par: 'OR:00A2';                    R_off: '';                           Tol: ( A:'00A2:00000000';       Min:  0;    Max:   0   ); ),
    (Nr:  96.28; T:'   Kompatibilitätskommando.(%s)';                                     R_on: '';                             Fkt: COM;                     M: '5000 ms'; Par: 'SIPL:113E:00000000';         R_off: '';                           Tol: ( A:'????:CIPL:113E:00000000';Min:  0;    Max:  0    ); ),
    (Nr:  96.29; T:'   DIN4; DIN5; DIN6 auf Low (K208,209,210 aus)-Abfrage(%s)';          R_on: '';                             Fkt: COM;                     M: '10';      Par: 'RIP:125D';                   R_off: '';                           Tol: ( A:'????:CIP:125D:0011';  Min:  0;    Max:   0   ); ),
    (Nr:  96.31; T:'   DIN4; DIN5; DIN6 auf High(K208,209,210 ein)-Abfrage(%s)';          R_on: '208,209,210';                  Fkt: COM;                     M: '10';      Par: 'RIP:125D';                   R_off: '208,209,210';                Tol: ( A:'????:CIP:125D:00FF';  Min:  0;    Max:   0   ); ),
    (Nr:  96.33; T:'   Gerade DINs auf High (K208,210 ein)-Abfrage (%s)';                 R_on: '208,210';                      Fkt: COM;                     M: '10';      Par: 'RIP:125D';                   R_off: '208,210';                    Tol: ( A:'????:CIP:125D:00BB';  Min:  0;    Max:   0   ); ),
    (Nr:  96.41; T:'   Ungerade DINs auf High(K209 ein)-Abfrage (%s)';                    R_on: '209';                          Fkt: COM;                     M: '60';      Par: 'RIP:125D';                   R_off: '209';                        Tol: ( A:'????:CIP:125D:0055';  Min:  0;    Max:   0   ); ),
    (Nr:  96.51; T:'   DIN4,5,6 auf Low setzen (K208,209,210 aus)-Warten 0,5s';           R_on: '';                             Fkt: Wait;                    M: '';        Par: '500';                        R_off: '208,209,210';                Tol: ( A:'';                    Min:  0;    Max:   0   ); ),
    (Nr:  96.56; T:'   RS232-Abfrage bei DIN4,5,6 auf Low(%s)';                           R_on: '';                             Fkt: COM;                     M: '10';      Par: 'RIP:125D';                   R_off: '';                           Tol: ( A:'????:CIP:125D:0011';  Min:  0;    Max:   0   ); ),
    (Nr:  96.58; T:'   AIN 0(#0) und AIN 1(#1) aktivieren(%s)';                           R_on: '';                             Fkt: COM;                     M: '10';      Par: 'OW:0095:00000000';           R_off: '';                           Tol: ( A:'OK!';                 Min:  0;    Max:   0   ); ),
    (Nr:  96.99; T:' Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                           R_off: '208,209,210';                Tol: ( A: '';                   Min:  0;    Max:   0   ); ),

// 97. Download Parametersatz                                                                               
    (Nr:  97.00; T: 'PARAMETERSATZ-Download - Init.';                                     R_on: '202,203,210,211,212,213,230';  Fkt: COM;                     M: '15';      Par: 'BOOT?';                R_off: '';                                 Tol: ( A: 'APPLICATION';   Min: 0;     Max: 0       ); ),
    (Nr:  97.01; T: '  Default-Parametersatz laden';                                      R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    //(Nr:  97.02; T: '  Versorgung einschalten und Boot? Abfrage';                         R_on: '203,230';                      Fkt: COM;                     M: '50';      Par: 'BOOT?';                R_off: '';                                 Tol: ( A: 'APPLICATION';         Min: 0;     Max: 0    ); ),
    (Nr:  97.04; T: '  Default-Parameter Laden [%s]';                                     R_on: '';                             Fkt: COM;                     M: '';        Par: 'INIT!';                R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr:  97.05; T: '  Nach INIT! auf den Restart warten [%s]ms';                         R_on: '';                             Fkt: WAIT;                    M: '';        Par: '1000';                 R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr:  97.06; T: '  Bootvorgang abwarten [%s]';                                        R_on: '';                             Fkt: COM;                     M: '40';      Par: 'BOOT?';                R_off: '';                                 Tol: ( A: 'APPLICATION';         Min: 0;     Max: 0    ); ),
    (Nr:  97.12; T: '  Test-ParameterDatei Laden ';                                       R_on: '';                             Fkt: PS_Load;                 M: '';        Par: '';                     R_off: '';                                 Tol: ( A: '';              Min: 0;     Max: 0       ); ),
    (Nr:  97.14; T: '  Save ausführen [%s]';                                              R_on: '';                             Fkt: COM;                     M: '-30';     Par: 'SAVE!';                R_off: '';                                 Tol: ( A: 'DONE';          Min: 0;     Max: 0       ); ),
    (Nr:  97.16; T: '  Fehler abfragen [%s]';                                             R_on: '';                             Fkt: COM;                     M: '';        Par: 'OR:0070';              R_off: '';                                 Tol: ( A: '0070:????????'; Min: 0;     Max: 0       ); ),
    (Nr:  97.18; T: '  Fehler abfragen [%s]';                                             R_on: '';                             Fkt: COM;                     M: '';        Par: 'OR:0071';              R_off: '';                                 Tol: ( A: '0071:????????'; Min: 0;     Max: 0       ); ),
    (Nr:  97.20; T: '  Bereitschaft abfragen [%s]';                                       R_on: '';                             Fkt: COM;                     M: '100';     Par: 'RIP:054';              R_off: '';                                 Tol: ( A: '????:CIP:0054:2000';Min: 0; Max: 0       ); ),
    (Nr:  97.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '202,203,210,211,212,213,230';      Tol: ( A: '';              Min: 0;     Max: 0       ); ),
 
    (Nr:  98.00; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_FB_PB     PS_110';  R_off: '';                         Tol: ( A: '';                   Min: 0;     Max: 0   );),
    (Nr:  98.02; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_STO_FB_PB PS_110';  R_off: '';                         Tol: ( A: '';                   Min: 0;     Max: 0   );),
    (Nr:  98.04; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_FBAFAG_PB PS_110';  R_off: '';                         Tol: ( A: '';                   Min: 0;     Max: 0   );),
    (Nr:  98.06; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'Lenze_931KPK42       PS_110';  R_off: '';                         Tol: ( A: '';                   Min: 0;     Max: 0   );),
    (Nr:  98.08; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'Lenze_931KPK44       PS_110';  R_off: '';                         Tol: ( A: '';                   Min: 0;     Max: 0   );),
    (Nr:  98.10; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_FB_ECAT   PS_120';  R_off: '';                         Tol: ( A: '';                   Min: 0;     Max: 0   );),
    (Nr:  98.12; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_STO_FB_ECAT PS_120';  R_off: '';                         Tol: ( A: '';                   Min: 0;     Max: 0   );),
    (Nr:  98.14; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'Lenze_931KEK42       PS_120';  R_off: '';                         Tol: ( A: '';                   Min: 0;     Max: 0   );),
    (Nr:  98.16; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'Lenze_931KEK44       PS_120';  R_off: '';                         Tol: ( A: '';                   Min: 0;     Max: 0   );),
    (Nr:  98.18; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_FBAFAG_EC PS_120'; R_off: '';                           Tol: ( A: '';              Min: 0;     Max: 0       );),
                                                                                                                                                                                                                                         
// 100. CAN-Bus Kommunikation  (bei DIS2 - zusätzlich K227 ansteuern ->CAN-Umschaltung). 
// Für alle nicht PROFIBUS und ECAT Variante  
    (Nr: 100.00; T: 'Test CAN-Kommunikation - Initialisierung';                           R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 100.02; T: '  Versorgung einschalten';                                           R_on: '203,227,230';                  Fkt: nil;                     M: '';        Par: '';                     R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 100.04; T: '  CAN initialisieren (Can init); ';                                  R_on:'';                              Fkt: Can_Init;                M: '';        Par: '';                     R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 100.06; T: '  CAN-Puffer löschen (Can clear)';                                   R_on:'';                              Fkt: Can_Clear;               M: '';        Par: '';                     R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 100.08; T: '  CAN-Kommunikation aktivieren [%s]';                                R_on: '';                             Fkt: COM;                     M: '50';      Par: 'OW:0144:00000001';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 100.10; T: '  CAN-Test [%s]';                                                    R_on: '';                             Fkt: CAN;                     M: '50';      Par: '601:40001000';         R_off: '';                                 Tol: ( A: '581:????????????????';Min: 0;     Max: 0    ); ),
    (Nr: 100.12; T: '  CAN-Kommunikation deaktivieren [%s ]';                             R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0144:00000000';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 100.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '203,227,230';                      Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
                                                                                                                                                                                                                                                                                                 
    (Nr: 105.00; T:'JUMP_PS(%s)';                                                         R_on: '';                             Fkt: jump_ps;                 M: '';        Par: 'PS_120';               R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    );),
                                                                                                                                                                                                                                                                                                 
// 110. FB - Abfrage nach PROFIBUS  - (bei DIS2 - zusätzlich K227 ansteuern -> CAN-Umschaltung)                                                                                                                                                                                              
// Für FB PROFIBUS Variante                                                                                                                                                                                                                                                                  
    (Nr: 110.00; T: 'Test Profibus - Initialisierung';                                    R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 110.02; T: '  Versorgung einschalten';                                           R_on: '203,227,230';                  Fkt: nil;                     M: '';        Par: '';                     R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 110.04; T: '  Bootvorgang abwarten [%s]';                                        R_on: '';                             Fkt: COM;                     M: '20';      Par: 'BOOT?';                R_off: '';                                 Tol: ( A: 'APPLICATION';         Min: 0;     Max: 0    ); ),
    (Nr: 110.06; T: '  Profibus Adresse 3 [%s]';                                          R_on: '';                             Fkt: COM;                     M: '50';      Par: 'OW:2142:00000003';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 110.08; T: '  Profibus aktivieren [%s]';                                         R_on: '';                             Fkt: COM;                     M: '50';      Par: 'OW:2144:00000001';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 110.10; T: '  Save ausführen [%s]';                                              R_on: '';                             Fkt: COM;                     M: '';        Par: 'SAVE!';                R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 110.12; T: '  Warten (%s)';                                                      R_on: '';                             Fkt: Wait;                    M: '';        Par: '6000';                 R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 110.14; T: '  Reset ausführen [%s]';                                             R_on: '';                             Fkt: COM;                     M: '';        Par: 'Reset!';               R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 110.16; T: '  Warten 1s';                                                        R_on: '';                             Fkt: Wait;                    M: '';        Par: '1000';                 R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 110.18; T: '  Bootvorgang abwarten [%s]';                                        R_on: '';                             Fkt: COM;                     M: '20';      Par: 'BOOT?';                R_off: '';                                 Tol: ( A: 'APPLICATION';         Min: 0;     Max: 0    ); ),
    (Nr: 110.20; T: '  Funktion Profibus abfragen [%s]';                                  R_on: '';                             Fkt: COM;                     M: '50';      Par: 'OR:2152';              R_off: '';                                 Tol: ( A: '2152:00000001';       Min: 0;     Max: 0    ); ),
    (Nr: 110.22; T: '  Funktion Profibus [%s]';                                           R_on: '';                             Fkt: Frage_JaNein;            M: 'x';       Par: 'Profibustest - Data Exchange LED auf dem Profibus muss leuchten.';R_off:'';    Tol:(A:'';          Min: 0;     Max: 0    ); ),                 
    (Nr: 110.24; T: '  Profibus deaktivieren [%s]';                                       R_on: '';                             Fkt: COM;                     M: '10';      Par: 'OW:2144:00000000';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 110.26; T: '  P.Bus-Rampen deaktivieren [%s]';                                   R_on: '';                             Fkt: COM;                     M: '10';      Par: 'OW:00EB:00000007';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 110.28; T: '  Save ausführen [%s]';                                              R_on: '';                             Fkt: COM;                     M: '';        Par: 'SAVE!';                R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 110.30; T: '  Warten (%s)';                                                      R_on: '';                             Fkt: Wait;                    M: '';        Par: '6000';                 R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 110.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '203,227,230';                      Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
         
//115. FB - EtherCAT Kommunikation via EtherCAT-Piggy (Offene Baustelle - der Prüfschritt muss noch implementiert werden.)
(*     
    (Nr: 115.00; T: 'Test Profibus - Initialisierung';                                    R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 115.02; T: '   Versorgung einschalten';                                          R_on: '203';                          Fkt: nil;                     M: '';        Par: '';                     R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 115.04; T: '   Bootvorgang abwarten [%s]';                                       R_on: '';                             Fkt: COM;                     M: '20';      Par: 'BOOT?';                R_off: '';                                 Tol: ( A: 'APPLICATION';         Min: 0;     Max: 0    ); ),
    (Nr: 115.06; T: '   Geraetetype [%s]';                                                R_on: '';                             Fkt: Com;                     M: '';        Par: 'OR:0010';              R_off: '';                                 Tol: ( A: '0010:00001133';       Min: 0;     Max: 0    ); ),
    (Nr: 115.08; T: '   Devicetype [%s]';                                                 R_on: '';                             Fkt: Com;                     M: '';        Par: '?100000';              R_off: '';                                 Tol: ( A: '=100000:00020192';    Min: 0;     Max: 0    ); ),
    (Nr: 115.10; T: '   Piggy gesteckt [%s]';                                             R_on: '';                             Fkt: Com;                     M: '';        Par: 'OR:0032';              R_off: '';                                 Tol: ( A: '0032:2???????';       Min: 0;     Max: 0    ); ),
    (Nr: 115.12; T: '   ECAT-Piggy identifiziert [%s]';                                   R_on: '';                             Fkt: Com;                     M: '';        Par: 'OR:01F5';              R_off: '';                                 Tol: ( A: '01F5:00000241';       Min: 0;     Max: 0    ); ),
    (Nr: 115.14; T: '   CoE/CANopen aktivieren [%s]';                                     R_on: '';                             Fkt: Com;                     M: '';        Par: 'OW:0144:00000001';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 115.16; T: '   Save ausführen [%s]';                                             R_on: '';                             Fkt: COM;                     M: '-30';     Par: 'SAVE!';                R_off: '203';                              Tol: ( A: 'DONE';                Min: 0;     Max: 0    ); ),
    (Nr: 115.18; T: '   Bootvorgang abwarten [%s]';                                       R_on: '203';                          Fkt: COM;                     M: '20';      Par: 'BOOT?';                R_off: '';                                 Tol: ( A: 'APPLICATION';         Min: 0;     Max: 0    ); ),
    (Nr: 115.20; T: '   Warte (%s)';                                                      R_on: '';                             Fkt: Wait;                    M: '';        Par: '3000';                 R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 115.22; T: '   ECAT-Piggy konfigurieren und EeProm laden';                       R_on: '';                             Fkt: ECATConfig;              M: 'x';       Par: '1133';                 R_off: '';                                 Tol: ( A: 'DONE';                Min: 0;     Max: 0    ); ),
    (Nr: 115.24; T: '   FPGA-Zugriff Type [%s]';                                          R_on: '';                             Fkt: Com;                     M: '';        Par: 'RIP:4000';             R_off: '';                                 Tol: ( A: '????:CIP:4000:0102';  Min: 0;     Max: 0    ); ),
    (Nr: 115.26; T: '   CoE/CAN deaktivieren [%s]';                                       R_on: '';                             Fkt: COM;                     M: '2';       Par: 'OW:0144:00000000';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 115.28; T: '   EtherCAT - Testende';                                             R_on: '';                             Fkt: nil;                     M: '';        Par: ' ';                    R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 115.30; T: '   Save ausführen [%s]';                                             R_on: '';                             Fkt: COM;                     M: '-30';     Par: 'SAVE!';                R_off: '';                                 Tol: ( A: 'DONE';                Min: 0;     Max: 0    ); ),
    (Nr: 115.32; T: '   Bootvorgang abwarten [%s]';                                       R_on: '';                             Fkt: COM;                     M: '20';      Par: 'BOOT?';                R_off: '';                                 Tol: ( A: 'APPLICATION';         Min: 0;     Max: 0    ); ),
    (Nr: 115.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '203';                              Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
  *)     
         
// 120. Gerätekodierung-Test
    (Nr: 120.00; T: 'Test Gerätekodierung';                                               R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 120.02; T: '  Gerätekodierung auslesen[%s]';                                     R_on: '203,230';                      Fkt: COM;                     M: '30';      Par: 'OR:0010';              R_off: '';                                 Tol: ( A: '0010:0000????';       Min: 0;     Max: 0    ); ),
    (Nr: 120.04; T: '  Kodierung mit Vorgabe überprüfen';                                 R_on: '';                             Fkt: Code_Check;              M: '';        Par: '';                     R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 120.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '203,230';                          Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
         
// 130. Digitaleingänge-Test1 (gerade auf High)                                                                                                                                                       
    (Nr: 130.00; T: 'Test1-Digitaleingänge';                                              R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 130.02; T: '  Dig.Eingänge konfig.[%s],Muster x155 anlegen';                     R_on: '203,204,206,208,210,212,230';  Fkt: COM;                     M: '50';      Par: 'OW:0095:0000000F';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 130.06; T: '  Auf Positionierung Parametrieren [%s]';                            R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0030:00000010';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 130.08; T: '  DIN abfragen [%s]';                                                R_on: '';                             Fkt: COM;                     M: '5000 ms'; Par: 'OR:0085';              R_off: '204,206,208,210,212';              Tol: ( A: '0085:????FD55';       Min: 0;     Max: 0    ); ),
    (Nr: 130.10; T: '  Auf Drehzahlregelung Parametrieren [%s]';                          R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0030:00000008';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 130.12; T: '  DIN auf AIN zurücksetzen [%s]';                                    R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0095:00000000';     R_off: '230';                              Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 130.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '204,206,208,210,212,230';          Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
         
// 140. Digitaleingänge-Test2 (ungerade auf High)                                                                                                                   
    (Nr: 140.00; T: 'Test2-Digitaleingänge';                                              R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 140.02; T: '  Dig.Eingänge konfig.[%s],Muster x0AA anlegen';                     R_on: '203,205,207,209,211,213,230';  Fkt: COM;                     M: '50';      Par: 'OW:0095:0000000F';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 140.06; T: '  Auf Positionierung Parametrieren [%s]';                            R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0030:00000010';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 140.08; T: '  DIN abfragen [%s]';                                                R_on: '';                             Fkt: COM;                     M: '50';      Par: 'OR:0085';              R_off: '205,207,209,211,213';              Tol: ( A: '0085:????FEAA';       Min: 0;     Max: 0    ); ),
    (Nr: 140.10; T: '  Auf Drehzahlregelung Parametrieren [%s]';                          R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0030:00000008';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 140.12; T: '  DIN auf AIN zurücksetzen [%s]';                                    R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0095:00000000';     R_off: '203,230';                          Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 140.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '203,205,207,209,211,213,230';      Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
  
    // alle nicht-STO-Varianten (Prüfschritt "Test Funtionalität STO-Schnittstelle" werden übersprungen)
    (Nr: 141.00; T:'JUMP_PS_DEVICE';                                                      R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10           PS_150'; R_off: '';                           Tol: ( A: '';              Min: 0;     Max: 0       );),
    (Nr: 141.02; T:'JUMP_PS_DEVICE';                                                      R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_KU        PS_150'; R_off: '';                           Tol: ( A: '';              Min: 0;     Max: 0       );),
    (Nr: 141.04; T:'JUMP_PS_DEVICE';                                                      R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_FB_CAN    PS_150'; R_off: '';                           Tol: ( A: '';              Min: 0;     Max: 0       );),
    (Nr: 141.06; T:'JUMP_PS_DEVICE';                                                      R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_FBFO_CAN  PS_150'; R_off: '';                           Tol: ( A: '';              Min: 0;     Max: 0       );),
    (Nr: 141.08; T:'JUMP_PS_DEVICE';                                                      R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_FB_PB     PS_150'; R_off: '';                           Tol: ( A: '';              Min: 0;     Max: 0       );),
    (Nr: 141.10; T:'JUMP_PS_DEVICE';                                                      R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_FB_ECAT   PS_150'; R_off: '';                           Tol: ( A: '';              Min: 0;     Max: 0       );),
    (Nr: 141.12; T:'JUMP_PS_DEVICE';                                                      R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_FBAFAG    PS_150'; R_off: '';                           Tol: ( A: '';              Min: 0;     Max: 0       );),
    (Nr: 141.14; T:'JUMP_PS_DEVICE';                                                      R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_FBAFAG_PB PS_150'; R_off: '';                           Tol: ( A: '';              Min: 0;     Max: 0       );),
    (Nr: 141.15; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_FBAFAG_EC PS_150'; R_off: '';                           Tol: ( A: '';              Min: 0;     Max: 0       );),
    (Nr: 141.16; T:'JUMP_PS_DEVICE';                                                      R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'Lenze_931KCK42       PS_150'; R_off: '';                           Tol: ( A: '';              Min: 0;     Max: 0       );),
    (Nr: 141.18; T:'JUMP_PS_DEVICE';                                                      R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'Lenze_931KPK42       PS_150'; R_off: '';                           Tol: ( A: '';              Min: 0;     Max: 0       );),
    (Nr: 141.20; T:'JUMP_PS_DEVICE';                                                      R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'Lenze_931KEK42       PS_150'; R_off: '';                           Tol: ( A: '';              Min: 0;     Max: 0       );),

// 142. Test Funtionalität STO-Schnittstelle
    (Nr: 142.00; T:'Test Funtionalität STO-Schnittstelle  ';                              R_on: '';                             Fkt: LabelFkt;         M: '';       Par: 'NIO-Loop:1'; 	 R_off: '1025,1026,1027';    Tol: ( A:'';                    Min:  0;    Max:   0   ); ),
    (Nr: 142.01; T:'  CT einschalten(K101)- Bootabfrage  (%s) ';                          R_on: '203,230';                      Fkt: COM;              M: '5000 ms';Par: 'BOOT?';  R_off: '';                        Tol: ( A:'APPLICATION';         Min:  0;    Max:   0   ); ),
    (Nr: 142.10; T:'  Abfrage KO 0x003A bei STO-A und STO-B gesetzt (Muster 0000)';       R_on: '';                             Fkt: COM;              M: '10';     Par: 'OR:003A';R_off: '';                        Tol: ( A:'003A:????????';       Min:  0;    Max:   0   ); ),
     // Test Bit 24, 25, 26, 27 - Testmuster 0000 (00000000 hex)                                                                
    (Nr: 142.11; T:'  Bit 24, 25, 26 und 27 maskieren, Kontrolle(0000)';                  R_on:'';                              Fkt: Arithmetik;       M:'';        Par:'@LastInt AND $00000000';     R_off:'';      Tol: ( A:'';                    Min:  0;   Max: 0 ); ),
    // ####  Hilfsschritte 12 bis 19 - diese Hilfsschritte können nach der Testphase entfertn werden
    // Test Bit 24
    (Nr: 142.12; T:'  Test Eingang STO B(2) Abfrage KO 0x003A';                           R_on: '';           Fkt: COM;              M: '10';     Par: 'OR:003A';                   R_off: '';                       Tol: ( A:'003A:????????';       Min:  0;    Max:   0   ); ),
    (Nr: 142.13; T:'  Bit 24  maskieren, Kontrolle';                                      R_on:'';            Fkt: Arithmetik;       M:'';    Par:'@LastInt AND $01000000';     R_off:'';                        Tol: ( A:'';                    Min:  0;    Max:   0   ); ),
    // Test Bit 25                                                                       
    (Nr: 142.14; T:'  Test Eingang STO A(1) Abfrage KO 0x003A';                           R_on: '';           Fkt: COM;              M: '10';     Par: 'OR:003A';                   R_off: '';                       Tol: ( A:'003A:????????';       Min:  0;    Max:   0   ); ),
    (Nr: 142.15; T:'  Bit 25  maskieren, Kontrolle';                                      R_on:'';            Fkt: Arithmetik;       M:'';    Par:'@LastInt AND $02000000';     R_off:'';                        Tol: ( A:'';                    Min:  0;    Max:   0   ); ),
    // Test Bit 26                                                                       
    (Nr: 142.16; T:'  Test RM STO 2 (Treiberversorgung); Abfrage KO 0x003A';              R_on: '';           Fkt: COM;              M: '10';     Par: 'OR:003A';                   R_off: '';                       Tol: ( A:'003A:????????';       Min:  0;    Max:   0   ); ),
    (Nr: 142.17; T:'  Bit 26  maskieren, Kontrolle';                                      R_on:'';            Fkt: Arithmetik;       M:'';    Par:'@LastInt AND $04000000';     R_off:'';                        Tol: ( A:'';                    Min:  0;    Max:   0   ); ),
    // Test Bit 27                                                                       
    (Nr: 142.18; T:'  Test RM STO 1 (PWM); Abfrage KO 0x003A';                            R_on: '';           Fkt: COM;              M: '10';     Par: 'OR:003A';                   R_off: '';                       Tol: ( A:'003A:????????';       Min:  0;    Max:   0   ); ),
    (Nr: 142.19; T:'  Bit 27  maskieren, Kontrolle';                                      R_on:'';            Fkt: Arithmetik;       M:'';    Par:'@LastInt AND $08000000';     R_off:'';                        Tol: ( A:'';                    Min:  0;    Max:   0   ); ),
    // Test Rückmeldesignal an RE600 (gemessen über den Schliesser RE600)
    (Nr: 142.20; T:'  Rückmeldesignal an RE600 an X40.6   (K1027)';                       R_on: '1027';       Fkt: U_Mess_DC;        M: 'V';      Par: '';                          R_off: '';                       Tol: ( A:'';                    Min: -1;    Max: 1    ); ),
    (Nr: 142.29; T:'  Muster (0101)einstellen: STO-A  gesetzt und STO-B nicht gesetzt';   R_on: '1026';       Fkt: Wait;             M: '';      Par: '200';                        R_off: '';                       Tol: ( A:'';                    Min:  0;    Max:   0   ); ),
    (Nr: 142.30; T:'  Abfrage bei STO-A  gesetzt und STO-B nicht gesetzt (Muster 0101)';  R_on: '';           Fkt: COM;              M: '10';     Par: 'OR:003A';                   R_off: '';                       Tol: ( A:'003A:????????';       Min:  0;    Max:   0   ); ),
     // Test Bit 24, 25, 26, 27 - Testmuster 0101 (05000000 hex)
    (Nr: 142.31; T:'  Bit 24, 25, 26 und 27 maskieren, Kontrolle(0101)';                  R_on:'';            Fkt: Arithmetik;       M:'';    Par:'@LastInt AND $05000000';     R_off:'';                        Tol: ( A:'';                    Min: 83886080; Max: 83886080 ); ),
    // ####  Hilfsschritte 32 bis 39 - diese Hilfsschritte können nach der Testphase entfertn werden
    // Test Bit 24
    (Nr: 142.32; T:'  Test Eingang STO B(2) Abfrage KO 0x003A';                           R_on: '';           Fkt: COM;              M: '10';     Par: 'OR:003A';                   R_off: '';                       Tol: ( A:'003A:????????';       Min:  0;    Max:   0   ); ),
    (Nr: 142.33; T:'  Bit 24  maskieren, Kontrolle';                                      R_on:'';            Fkt: Arithmetik;       M:'';    Par:'@LastInt AND $01000000';     R_off:'';                        Tol: ( A:'';                    Min: 16777216; Max: 16777216 ); ),
    // Test Bit 25                                                                        
    (Nr: 142.34; T:'  Test Eingang STO A(1) Abfrage KO 0x003A';                           R_on: '';           Fkt: COM;              M: '10';     Par: 'OR:003A';                   R_off: '';                       Tol: ( A:'003A:????????';       Min:  0;    Max:   0   ); ),
    (Nr: 142.35; T:'  Bit 25  maskieren, Kontrolle';                                      R_on:'';            Fkt: Arithmetik;       M:'';    Par:'@LastInt AND $02000000';     R_off:'';                        Tol: ( A:'';                    Min:  0;    Max:   0 ); ),
    // Test Bit 26                                                                        
    (Nr: 142.36; T:'  Test RM STO 2 (Treiberversorgung); Abfrage KO 0x003A';              R_on: '';           Fkt: COM;              M: '10';     Par: 'OR:003A';                   R_off: '';                       Tol: ( A:'003A:????????';       Min:  0;    Max:   0   ); ),
    (Nr: 142.37; T:'  Bit 26  maskieren, Kontrolle';                                      R_on:'';            Fkt: Arithmetik;       M:'';    Par:'@LastInt AND $04000000';     R_off:'';                        Tol: ( A:'';                    Min: 67108864; Max: 67108864 ); ),
    // Test Bit 27                                                                        
    (Nr: 142.38; T:'  Test RM STO 1 (PWM); Abfrage KO 0x003A';                            R_on: '';           Fkt: COM;              M: '10';     Par: 'OR:003A';                   R_off: '';                       Tol: ( A:'003A:????????';       Min:  0;    Max:   0   ); ),
    (Nr: 142.39; T:'  Bit 27  maskieren, Kontrolle';                                      R_on:'';            Fkt: Arithmetik;       M:'';    Par:'@LastInt AND $08000000';     R_off:'';                        Tol: ( A:'';                    Min:  0;    Max:   0 ); ),
    // Test Rückmeldesignal an RE600 (gemessen über den Schliesser RE600)                 
    (Nr: 142.40; T:'  Rückmeldesignal an RE600 an X40.6   (K1027)';                       R_on: '1027';       Fkt: U_Mess_DC;        M: 'V';      Par: '';                          R_off: '1026';                   Tol: ( A:'';                     Min: -1;    Max: 1    ); ),
    (Nr: 142.49; T:'   Muster (1010) einstellen: STO-A nicht gesetzt und STO-B gesetzt';  R_on: '1025';       Fkt: Wait;             M: '';       Par: '200';                       R_off: '';                       Tol: ( A:'';                    Min:  0;    Max:   0   ); ),
    (Nr: 142.50; T:'   Abfrage bei STO-A nicht gesetzt und STO-B gesetzt (Muster 1010)';  R_on: '';           Fkt: COM;              M: '10';     Par: 'OR:003A';                   R_off: '';                       Tol: ( A:'003A:????????';       Min:  0;    Max:   0   ); ),
     // Test Bit 24, 25, 26, 27 - Testmuster 1010  (0A000000 hex)                         
    (Nr: 142.51; T:'   Bit 24, 25, 26 und 27 maskieren, Kontrolle (1010)';                R_on:'';            Fkt: Arithmetik;       M:'';    Par:'@LastInt AND $0A000000';     R_off:'';                        Tol: ( A:'';                    Min: 167772160; Max: 167772160 ); ),
    // ####  Hilfsschritte 52 bis 59 - diese Hilfsschritte können nach der Testphase entfertn werden
    // Test Bit 24
    (Nr: 142.52; T:'   Test Eingang STO B(2) Abfrage KO 0x003A';                R_on: '';           Fkt: COM;              M: '10';     Par: 'OR:003A';                   R_off: '';                       Tol: ( A:'003A:????????';       Min:  0;    Max:   0   ); ),
    (Nr: 142.53; T:'   Bit 24  maskieren, Kontrolle';                           R_on:'';            Fkt: Arithmetik;       M:'';        Par:'@LastInt AND $01000000';     R_off:'';                        Tol: ( A:'';                    Min:  0;    Max:   0 ); ),
    // Test Bit 25
    (Nr: 142.54; T:'   Test Eingang STO A(1) Abfrage KO 0x003A';                R_on: '';           Fkt: COM;              M: '10';     Par: 'OR:003A';                   R_off: '';                       Tol: ( A:'003A:????????';       Min:  0;    Max:   0   ); ),
    (Nr: 142.55; T:'   Bit 25  maskieren, Kontrolle';                           R_on:'';            Fkt: Arithmetik;       M:'';        Par:'@LastInt AND $02000000';     R_off:'';                        Tol: ( A:'';                    Min: 33554432; Max: 33554432 ); ),
    // Test Bit 26
    (Nr: 142.56; T:'   Test RM STO 2 (Treiberversorgung); Abfrage KO 0x003A';   R_on: '';           Fkt: COM;              M: '10';     Par: 'OR:003A';                   R_off: '';                       Tol: ( A:'003A:????????';       Min:  0;    Max:   0   ); ),
    (Nr: 142.57; T:'   Bit 26  maskieren, Kontrolle';                           R_on:'';            Fkt: Arithmetik;       M:'';        Par:'@LastInt AND $04000000';     R_off:'';                        Tol: ( A:'';                    Min:  0;    Max:   0   ); ),
    // Test Bit 27
    (Nr: 142.58; T:'   Test RM STO 1 (PWM); Abfrage KO 0x0039';                 R_on: '';           Fkt: COM;              M: '10';     Par: 'OR:003A';                   R_off: '';                       Tol: ( A:'003A:????????';       Min:  0;    Max:   0   ); ),
    (Nr: 142.59; T:'   Bit 27  maskieren, Kontrolle';                           R_on:'';            Fkt: Arithmetik;       M:'';        Par:'@LastInt AND $08000000';     R_off:'';                        Tol: ( A:'';                    Min: 134217728; Max: 134217728 ); ),
    // Test Rückmeldesignal an RE600 (gemessen über den Schliesser RE600)
    (Nr: 142.60; T:'   Rückmeldesignal an RE600 an X40.6   (K1027)';            R_on: '1027';       Fkt: U_Mess_DC;        M: 'V';      Par: '';                          R_off: '1025';                   Tol: ( A:'';                    Min: -1;    Max: 1    ); ),
    (Nr: 142.69; T:'   Muster (1111) einstellen: STO-A und STO-B nicht gesetzt';R_on: '1025,1026';  Fkt: Wait;             M: '';       Par: '200';                       R_off: '';                       Tol: ( A:'';                    Min:  0;    Max:   0   ); ),
    (Nr: 142.70; T:'   Abfrage bei STO-A und STO-B nicht gesetzt (Muster 1111)';R_on: '';           Fkt: COM;              M: '10';     Par: 'OR:003A';                   R_off: '';                       Tol: ( A:'003A:????????';       Min:  0;    Max:   0   ); ),
     // Test Bit 24, 25, 26, 27 - Testmuster 1111 (03000000 hex)
    (Nr: 142.71; T:'   Bit 24, 25, 26 und 27 maskieren, Kontrolle (1111)';      R_on:'';            Fkt: Arithmetik;       M:'';        Par:'@LastInt AND $0F000000';     R_off:'';                        Tol: ( A:'';                    Min: 251658240; Max: 251658240 ); ),
    // #####  Hilfsschritte 72 bis 79 - diese Hilfsschritte können nach der Testphase entfertn werden
     // Test Bit 24
    (Nr: 142.72; T:'   Test Eingang STO B(2) Abfrage KO 0x003A';                R_on: '';           Fkt: COM;              M: '10';     Par: 'OR:003A';                   R_off: '';                       Tol: ( A:'003A:????????';       Min:  0;    Max:   0   ); ),
    (Nr: 142.73; T:'   Bit 24  maskieren, Kontrolle';                           R_on:'';            Fkt: Arithmetik;       M:'';        Par:'@LastInt AND $01000000';     R_off:'';                        Tol: ( A:'';                    Min: 16777216;    Max: 16777216 ); ),
    // Test Bit 25
    (Nr: 142.74; T:'   Test Eingang STO A(1) Abfrage KO 0x003A';                R_on: '';           Fkt: COM;              M: '10';     Par: 'OR:003A';                   R_off: '';                       Tol: ( A:'003A:????????';       Min:  0;    Max:   0   ); ),
    (Nr: 142.75; T:'   Bit 25  maskieren, Kontrolle';                           R_on:'';            Fkt: Arithmetik;       M:'';        Par:'@LastInt AND $02000000';     R_off:'';                        Tol: ( A:'';                    Min: 33554432;    Max:  33554432 ); ),
    // Test Bit 26
    (Nr: 142.76; T:'   Test RM STO 2 (Treiberversorgung); Abfrage KO 0x003A';   R_on: '';           Fkt: COM;              M: '10';     Par: 'OR:003A';                   R_off: '';                       Tol: ( A:'003A:????????';       Min:  0;    Max:   0   ); ),
    (Nr: 142.77; T:'   Bit 26  maskieren, Kontrolle';                           R_on:'';            Fkt: Arithmetik;       M:'';        Par:'@LastInt AND $04000000';     R_off:'';                        Tol: ( A:'';                    Min: 67108864; Max: 67108864 ); ),
    // Test Bit 27
    (Nr: 142.78; T:'   Test RM STO 1 (PWM); Abfrage KO 0x003A';                 R_on: '';           Fkt: COM;              M: '10';     Par: 'OR:003A';                   R_off: '';                       Tol: ( A:'003A:????????';       Min:  0;    Max:   0   ); ),
    (Nr: 142.79; T:'   Bit 27  maskieren, Kontrolle';                           R_on:'';            Fkt: Arithmetik;       M:'';        Par:'@LastInt AND $08000000';     R_off:'';                        Tol: ( A:'';                    Min: 134217728; Max: 134217728 ); ),
    // Test Rückmeldesignal an RE600 (gemessen über den Schliesser RE600)
    (Nr: 142.80; T:'   Rückmeldesignal an RE600 an X40.6   (K1027)';            R_on: '1027';       Fkt: U_Mess_DC;        M: 'V';      Par: '';                          R_off: '1025,1026';              Tol: ( A:'';                    Min: 22;    Max: 25    ); ),
    (Nr: 142.99; T:' Fertig';                                                   R_on: '';           Fkt: nil;              M: '';       Par: '';                          R_off: '203,230,1025,1026,1027'; Tol: ( A: '';                   Min:  0;    Max:   0   ); ),

// 145. [DIS2-48] Test Inkrementalgebereingaenge (DIN4; DIN5; DIN6), nur für STO-Varianten (Verschoben zum Prüfschritt 96)
(*
    (Nr: 145.00; T:'Test Inkrementalgebereingaenge DIN4, DIN5, DIN6  ';         R_on: '';           Fkt: nil;              M: '';       Par: ''; 		          R_off: '208,209,210';            Tol: ( A:'';                    Min:  0;    Max:   0   ); ),
    (Nr: 145.02; T: '  Versorgung einschalten';                                 R_on: '203,230';    Fkt: Wait;             M: '';       Par: '500';                       R_off: '';                       Tol: ( A:'';                    Min:  0;    Max:   0   ); ),
    (Nr: 145.03; T: '  Bootvorgang abwarten [%s]';                              R_on: '';           Fkt: COM;              M: '20';     Par: 'BOOT?';                     R_off: '';                       Tol: ( A:'APPLICATION';         Min:  0;    Max:   0   ); ),
    (Nr: 145.04; T:'   Inkrementalgebereingang aktivieren (%s)';                R_on: '';           Fkt: COM;              M: '';       Par: 'OW:00A2:00000080';          R_off: '';                       Tol: ( A:'OK!';                 Min:  0;    Max:   0   ); ),
    (Nr: 145.06; T:'   Inkrementalgebereingang aktivieren (%s)';                R_on: '';           Fkt: COM;              M: '';       Par: 'OW:00A2:00000000';          R_off: '';                       Tol: ( A:'OK!';                 Min:  0;    Max:   0   ); ),
    //(Nr: 145.07; T:'   Inkrementalgebereingang abfragen (%s)';                  R_on: '';           Fkt: COM;              M: '20';     Par: 'OR:00A2';                   R_off: '';                       Tol: ( A:'00A2:00000000';       Min:  0;    Max:   0   ); ),
    (Nr: 145.08; T:'   Kompatibilitätskommando.(%s)';                           R_on: '';           Fkt: COM;              M: '5000 ms';Par: 'SIPL:113E:00000000';        R_off: '';                       Tol: ( A:'????:CIPL:113E:00000000';Min:  0;    Max:  0    ); ),
    (Nr: 145.09; T:'   DIN4; DIN5; DIN6 auf Low (K208,209,210 aus)-Abfrage(%s)';R_on: '';           Fkt: COM;              M: '10';     Par: 'RIP:125D';                  R_off: '';                       Tol: ( A:'????:CIP:125D:0011';  Min:  0;    Max:   0   ); ),
    //(Nr: 145.10; T:'   [Ja/Nein Abfrage]';                                      R_on: '';           Fkt: Frage_JaNein;     M: 'x';      Par: 'Weiter JA/NEIN ?';          R_off: '';                       Tol: ( A:'';                    Min:  0;    Max:  0    ); ),
    (Nr: 145.11; T:'   DIN4; DIN5; DIN6 auf High(K208,209,210 ein)-Abfrage(%s)';R_on: '208,209,210';Fkt: COM;              M: '10';     Par: 'RIP:125D';                  R_off: '208,209,210';            Tol: ( A:'????:CIP:125D:00FF';  Min:  0;    Max:   0   ); ),
    //(Nr: 145.12; T:'   [Ja/Nein Abfrage]';                                      R_on: '';           Fkt: Frage_JaNein;     M: 'x';      Par: 'Weiter JA/NEIN ?';          R_off: '';                       Tol: ( A:'';                    Min:  0;    Max:  0    ); ),
    (Nr: 145.21; T:'   Gerade DINs auf High (K208,210 ein)-Abfrage (%s)';       R_on: '208,210';    Fkt: COM;              M: '10';     Par: 'RIP:125D';                  R_off: '208,210';                Tol: ( A:'????:CIP:125D:00BB';  Min:  0;    Max:   0   ); ),
    //(Nr: 145.22; T:'   [Ja/Nein Abfrage]';                                      R_on: '';           Fkt: Frage_JaNein;     M: 'x';      Par: 'Weiter JA/NEIN ?';          R_off: '';                       Tol: ( A:'';                    Min:  0;    Max:  0    ); ),
    (Nr: 145.31; T:'   Ungerade DINs auf High(K209 ein)-Abfrage (%s)';          R_on: '209';        Fkt: COM;              M: '60';     Par: 'RIP:125D';                  R_off: '209';                    Tol: ( A:'????:CIP:125D:0055';  Min:  0;    Max:   0   ); ),
    //(Nr: 145.33; T:'   [Ja/Nein Abfrage]';                                      R_on: '';           Fkt: Frage_JaNein;     M: 'x';      Par: 'Weiter JA/NEIN ?';          R_off: '';                       Tol: ( A:'';                    Min:  0;    Max:  0    ); ),
    (Nr: 145.41; T:'   DIN4,5,6 auf Low setzen (K208,209,210 aus)-Warten 0,5s'; R_on: '';           Fkt: Wait;             M: '';       Par: '500';                       R_off: '208,209,210';            Tol: ( A:'';                    Min:  0;    Max:   0   ); ),
    //(Nr: 145.44; T:'   [Ja/Nein Abfrage]';                                      R_on: '';           Fkt: Frage_JaNein;     M: 'x';      Par: 'Weiter JA/NEIN ?';          R_off: '';                       Tol: ( A:'';                    Min:  0;    Max:  0    ); ),
    (Nr: 145.46; T:'   RS232-Abfrage bei DIN4,5,6 auf Low(%s)';                 R_on: '';           Fkt: COM;              M: '10';     Par: 'RIP:125D';                  R_off: '';                       Tol: ( A:'????:CIP:125D:0011';  Min:  0;    Max:   0   ); ),
    (Nr: 145.48; T:'   AIN 0(#0) und AIN 1(#1) aktivieren(%s)';                 R_on: '';           Fkt: COM;              M: '10';     Par: 'OW:0095:00000000';          R_off: '';                       Tol: ( A:'OK!';                 Min:  0;    Max:   0   ); ),
    (Nr: 145.99; T:' Fertig';                                                   R_on: '';           Fkt: nil;              M: '';       Par: '';                          R_off: '208,209,210';            Tol: ( A: '';                   Min:  0;    Max:   0   ); ),
*)
         
// 150. Test Digitalausgänge (zuerst DOUT1 low und DOUT2 high dann DOUT1 high und DOUT2 low)                                                                                                          
    (Nr: 150.00; T: 'Test Digitalausgänge DOUT1 und DOUT2 -Init.';                        R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 150.02; T: '  Versorgung einschalten';                                           R_on: '203,228,230';                  Fkt: Wait;                    M: '';        Par: '1000';                 R_off: '201,202';                          Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 150.04; T: '  DOUT2 auf High setzen [%s]';                                       R_on: '';                             Fkt: COM;                     M: '25';      Par: 'OW:0089:0000000C';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 150.06; T: '  Warten (%s)';                                                      R_on: '109,139,140';                  Fkt: Wait;                    M: '';        Par: '1500';                 R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 150.08; T: '  Spg.-Messung DOUT0 (Bereitschafts-LED)';                           R_on: '';                             Fkt: U_Mess_DC;               M: 'V';       Par: '';                     R_off: '109';                              Tol: ( A: '';                    Min: -0.5;  Max: 0.8  ); ),
    (Nr: 150.10; T: '  Spg.-Messung DOUT1 (LOW)';                                         R_on: '110';                          Fkt: U_Mess_DC;               M: 'V';       Par: '';                     R_off: '110';                              Tol: ( A: '';                    Min: -0.5;  Max: 0.8  ); ),
    (Nr: 150.12; T: '  Spg.-Messung DOUT2 (HIGH)';                                        R_on: '111';                          Fkt: U_Mess_DC;               M: 'V';       Par: '';                     R_off: '111';                              Tol: ( A: '';                    Min: 20.0;  Max: 24.0 ); ),
    (Nr: 150.14; T: '  Spg.-Messung DOUT3 (Haltebremse)';                                 R_on: '112';                          Fkt: U_Mess_DC;               M: 'V';       Par: '';                     R_off: '112,139,140';                      Tol: ( A: '';                    Min: -0.5;  Max: 0.8  ); ),
    (Nr: 150.16; T: '  DOUT 1 und 2 auf Low setzen [%s]';                                 R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0089:00000000';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 150.18; T: '  DOUT1 auf High setzen [%s]';                                       R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0089:00000C00';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 150.20; T: '  Spg.-Messung DOUT0 (Bereitschafts-LED)';                           R_on: '139,140,109';                  Fkt: U_Mess_DC;               M: 'V';       Par: '';                     R_off: '109';                              Tol: ( A: '';                    Min: -0.5;  Max: 0.8  ); ),
    (Nr: 150.22; T: '  Spg.-Messung DOUT1 (HIGH)';                                        R_on: '110';                          Fkt: U_Mess_DC;               M: 'V';       Par: '';                     R_off: '110';                              Tol: ( A: '';                    Min: 20.0;  Max: 24.0 ); ),
    (Nr: 150.24; T: '  Spg.-Messung DOUT2 (LOW)';                                         R_on: '111';                          Fkt: U_Mess_DC;               M: 'V';       Par: '';                     R_off: '111';                              Tol: ( A: '';                    Min: -0.5;  Max: 0.8  ); ),
    (Nr: 150.26; T: '  Spg.-Messung DOUT3 (Haltebremse)';                                 R_on: '112';                          Fkt: U_Mess_DC;               M: 'V';       Par: '';                     R_off: '139,140,112';                      Tol: ( A: '';                    Min: -0.5;  Max: 0.8  ); ),
    (Nr: 150.28; T: '  DOUT 1 und 2 auf Low setzen [%s]';                                 R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0089:00000000';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 150.30; T: '  Untersp.Auswertung an [%s]';                                       R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0072:FFFFFFFF';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 150.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '109,110,111,112,139,140,203,228,230'; Tol: ( A: '';                 Min: 0;     Max: 0    ); ),
         
// 160.Analog-Sollwerteingang AIN0(Offset und Gain)                                                                                            
    (Nr: 160.00; T: 'AIN0 Test Offset und Pos.Gain  -  Init';                             R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 160.02; T: '  Versorgung einschalten';                                           R_on: '203,214,228,230';              Fkt: Wait;                    M: '';        Par: '1000';                 R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 160.04; T: '  AIN aktivieren - [%s]';                                            R_on: '';                             Fkt: COM;                     M: '50';      Par: 'OW:0095:00000000';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 160.06; T: '  AIN0 abfragen bei 0V (Offset) [%s]';                               R_on: '';                             Fkt: COM;                     M: '50';      Par: 'RIP:0E2';              R_off: '';                                 Tol: ( A: '????:CIP:00E2:????';  Min: 0;     Max: 0    ); ),
    (Nr: 160.08; T: '  Spannungswert umrechnen ';                                         R_on: '';                             Fkt: sU_Hex2Dez;              M: 'V';       Par: '10.23';                R_off: '';                                 Tol: ( A: '';                    Min: -0.4;  Max: 0.4  ); ),
    (Nr: 160.09; T: '  Selbsttest 9V_Ref Spannung/DMM-Messung';                           R_on: '139,140,138,204';              Fkt: U_Mess_DC;               M: 'V';       Par: '';                     R_off: '139,140,138';                      Tol: ( A: '';                    Min: 8.995;  Max: 9.006  ); ),
    (Nr: 160.10; T: '  AIN0 abfragen bei 9V (Pos. Gain)[%s]';                             R_on: '204';                          Fkt: COM;                     M: '';        Par: 'RIP:0E2';              R_off: '204';                              Tol: ( A: '????:CIP:00E2:????';  Min: 0;     Max: 0    ); ),
    (Nr: 160.12; T: '  Spannungswert umrechnen ';                                         R_on: '';                             Fkt: sU_Hex2Dez;              M: 'V';       Par: '10.23';                R_off: '';                                 Tol: ( A: '';                    Min: 8.6;   Max: 9.4  ); ),
    (Nr: 160.14; T: '  AIN0# abfragen bei 9V (Neg. Gain) [%s]';                           R_on: '205';                          Fkt: COM;                     M: '';        Par: 'RIP:0E2';              R_off: '205,228';                          Tol: ( A: '????:CIP:00E2:????';  Min: 0;     Max: 0    ); ),
    (Nr: 160.16; T: '  Spannungswert umrechnen ';                                         R_on: '';                             Fkt: sU_Hex2Dez;              M: 'V';       Par: '10.23';                R_off: '';                                 Tol: ( A: '';                    Min: -9.4;  Max: -8.6 ); ),
    (Nr: 160.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '138,204,205,214,228,230';          Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
         
// 170.Analog-Sollwerteingänge AIN1 (Offset und Gain)                                                                                                                                                                                
    (Nr: 170.00; T: 'AIN1 Test Offset und Pos.Gain  - Init';                              R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 170.02; T: '  Versorgung einschalten';                                           R_on: '203,214,230';                  Fkt: nil;                     M: '';        Par: '';                     R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 170.04; T: '  AIN aktivieren [%s]';                                              R_on: '';                             Fkt: COM;                     M: '50';      Par: 'OW:0095:00000000';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 170.06; T: '  AIN1 abfragen bei 0V (Offset) [%s]';                               R_on: '';                             Fkt: COM;                     M: '50';      Par: 'RIP:0E3';              R_off: '';                                 Tol: ( A: '????:CIP:00E3:????';  Min: 0;     Max: 0    ); ),
    (Nr: 170.08; T: '  Spannungswert umrechnen ';                                         R_on: '';                             Fkt: sU_Hex2Dez;              M: 'V';       Par: '10.23';                   R_off: '';                                 Tol: ( A: '';                    Min: -0.4;  Max: 0.4  ); ),
    (Nr: 170.09; T: '  Selbsttest 9V_Ref Spannung/DMM-Messung';                           R_on: '139,140,138,206';              Fkt: U_Mess_DC;              M: 'V';        Par: '';                     R_off: '139,140,138';                              Tol: ( A: '';                    Min: 8.995;  Max: 9.006  ); ),
    (Nr: 170.10; T: '  AIN1 abfragen bei 9V (Pos. Gain) [%s]';                            R_on: '206';                          Fkt: COM;                     M: '';        Par: 'RIP:0E3';              R_off: '206';                              Tol: ( A: '????:CIP:00E3:????';  Min: 0;     Max: 0    ); ),
    (Nr: 170.12; T: '  Spannungswert umrechnen ';                                         R_on: '';                             Fkt: sU_Hex2Dez;              M: 'V';       Par: '10.23';                   R_off: '';                                 Tol: ( A: '';                    Min: 8.6;   Max: 9.4  ); ),
    (Nr: 170.14; T: '  AIN1# abfragen bei 9V (Neg. Gain) [%s]';                           R_on: '207';                          Fkt: COM;                     M: '';        Par: 'RIP:0E3';              R_off: '207,214';                          Tol: ( A: '????:CIP:00E3:????';  Min: 0;     Max: 0    ); ),
    (Nr: 170.16; T: '  Spannungswert umrechnen ';                                         R_on: '';                             Fkt: sU_Hex2Dez;              M: 'V';       Par: '10.23';                   R_off: '203,230';                          Tol: ( A: '';                    Min: -9.4;  Max: -8.6 ); ),
    (Nr: 170.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '139,203,206,207,214,230';              Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
         
// 180. Auswertung der Leistungsteiltemperatur                                                                                                                                                                                         
    (Nr: 180.00; T: 'Auswertung der Leistungsteiltemperatur';                             R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 180.02; T: '  Leistungsteiltemperatur abfragen [%s]';                            R_on: '203,230';                      Fkt: COM;                     M: '20';      Par: 'OR:0084';              R_off: '230';                              Tol: ( A: '0084:????????';       Min: 0;     Max: 0    ); ),
    (Nr: 180.04; T: '  LT-Temperatur ermitteln';                                          R_on: '';                             Fkt: HexToDez;                M: '°C';      Par: '16';                   R_off: '';                                 Tol: ( A: '';                    Min: 18;    Max: 45   ); ),
    (Nr: 180.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '203,230';                          Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
                                                                                                                                                                                                                                                                         
// 190.Auswertung der Motortemperatur                                                                                                                                                                                              
    (Nr: 190.00; T: 'Auswertung der Motortemperatur';                                     R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 190.02; T: '  MOT-Temperatur abfragen [%s]';                                     R_on: '203,221,230';                  Fkt: COM;                     M: '20';      Par: 'OR:0083';              R_off: '221,230';                          Tol: ( A: '0083:????????';       Min: 0;     Max: 0    ); ),
    (Nr: 190.04; T: '  MOT-Temperatur ermitteln';                                         R_on: '';                             Fkt: HexToDez;                M: '°C';      Par: '16';                   R_off: '';                                 Tol: ( A: '';                    Min: 18;    Max: 35   ); ),
    (Nr: 190.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '221,230';                          Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
                                                                                                                                                                        
// 200. MTemp-Fehleremulation                                                                                                         
    (Nr: 200.00; T: 'Motortemperatur-Fehleremulation';                                    R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 200.02; T: '  Versorgung einschalten';                                           R_on: '202,203,211,212,221,230';      Fkt: nil;                     M: '';        Par: '';                     R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 200.04; T: '  MTemp-Auswertung aktivieren [%s]';                                 R_on: '211,212';                      Fkt: COM;                     M: '20';      Par: 'OW:0094:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 200.06; T: '  Fehler quttieren [%s]';                                            R_on: '';                             Fkt: COM;                     M: '25';      Par: 'OW:0061:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 200.08; T: '  MTemp-Fehler abfragen [%s]';                                       R_on: '';                             Fkt: COM;                     M: '5';       Par: 'OR:0070';              R_off: '';                                 Tol: ( A: '0070:???????0';       Min: 0;     Max: 0    ); ),
    (Nr: 200.10; T: '  MTemp-Übertemp. simulieren';                                       R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '221';                              Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 200.12; T: '  MTemp-Fehler abfragen [%s]';                                       R_on: '';                             Fkt: COM;                     M: '5';       Par: 'OR:0070';              R_off: '';                                 Tol: ( A: '0070:???????4';       Min: 0;     Max: 0    ); ),
    (Nr: 200.14; T: '  Simulation der MTemp-Übertemp. ausschalten';                       R_on: '221';                          Fkt: nil;                     M: '';        Par: '';                     R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 200.16; T: '  Fehler quttieren [%s]';                                            R_on: '';                             Fkt: COM;                     M: '25';      Par: 'OW:0061:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 200.18; T: '  MTemp-Fehler abfragen [%s]';                                       R_on: '';                             Fkt: COM;                     M: '5';       Par: 'OR:0070';              R_off: '';                                 Tol: ( A: '0070:???????0';       Min: 0;     Max: 0    ); ),
    (Nr: 200.20; T: '  Fehler quttieren [%s]';                                            R_on: '';                             Fkt: COM;                     M: '25';      Par: 'OW:0061:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 200.22; T: '  Bereitschaft abfragen [%s]';                                       R_on: '';                             Fkt: COM;                     M: '25';      Par: 'RIP:054';              R_off: '';                                 Tol: ( A: '????:CIP:0054:2000';  Min: 0;     Max: 0    ); ),
    (Nr: 200.24; T: '  MTemp-Auswert. deaktivieren [%s]';                                 R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0094:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 200.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '202,211,212,221,230';              Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
         
// 210. Test - Test Messeingänge (xxx_sich)                                                                                                                                          
    (Nr: 210.00; T: 'Test Messeingänge (xxx_sich)  - Init';                               R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 210.02; T: '  Versorgung einschalten';                                           R_on: '202,203,230';                  Fkt: Wait;                    M: '';        Par: '1500';                 R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 210.04; T: '  48V-Spg.-Messung mit Last (ZK)';                                   R_on: '139,140,108';                  Fkt: U_Mess_DC;               M: 'V';       Par: '';                     R_off: '108';                              Tol: ( A: '';                    Min: 46;    Max: 56   ); ),
    (Nr: 210.06; T: '  pos. Toleranz für 48V_sich ermitteln [+8%%]';                      R_on: '';                             Fkt: pToleranz;               M: 'V';       Par: '8';                    R_off: '';                                 Tol: ( A: '';                    Min: 42.0;  Max: 56   ); ),
    (Nr: 210.08; T: '  neg. Toleranz für 48V_sich ermitteln [-8%%]';                      R_on: '';                             Fkt: nToleranz;               M: 'V';       Par: '8';                    R_off: '';                                 Tol: ( A: '';                    Min: 42.0;  Max: 56   ); ),
    (Nr: 210.10; T: '  Abfrage nach 48V_sich senden [RIP:0E8]';                           R_on: '';                             Fkt: COM;                     M: '20';      Par: 'RIP:0E8';              R_off: '';                                 Tol: ( A: '????:CIP:00E8:????';  Min: 0;     Max: 0    ); ),
    (Nr: 210.12; T: '  Wert von 48V_sich ermitteln und verif. (U_Hex2Dez)';               R_on: '';                             Fkt: U_dynHex2Dez;            M: 'V';       Par: '103';                  R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 210.14; T: '  Spg.-Messung 24V mit Last (CT)';                                   R_on: '107';                          Fkt: U_Mess_DC;               M: 'V';       Par: '';                     R_off: '107';                              Tol: ( A: '';                    Min: 22;    Max: 24   ); ),
    (Nr: 210.16; T: '  pos. Toleranz für 24V_sich ermitteln [+8%%]';                      R_on: '';                             Fkt: pToleranz;               M: 'V';       Par: '8';                    R_off: '';                                 Tol: ( A: '';                    Min: 20.2;  Max: 28.1 ); ),
    (Nr: 210.18; T: '  neg. Toleranz für 24V_sich ermitteln [-8%%]';                      R_on: '';                             Fkt: nToleranz;               M: 'V';       Par: '8';                    R_off: '';                                 Tol: ( A: '';                    Min: 20.2;  Max: 28.1 ); ),
    (Nr: 210.20; T: '  Abfrage nach +24V_sich senden [RIP:0EB]';                          R_on: '';                             Fkt: COM;                     M: '';        Par: 'RIP:0EB';              R_off: '';                                 Tol: ( A: '????:CIP:00EB:????';  Min: 0;     Max: 0    ); ),
    (Nr: 210.22; T: '  Wert von +24V_sich ermitteln und verif. (U_Hex2Dez)';              R_on: '';                             Fkt: U_dynHex2Dez;            M: 'V';       Par: '33';                   R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 210.24; T: '  Messung +12V_ana';                                                 R_on: '235';                          Fkt: U_Mess_DC;               M: 'V';       Par: '';                     R_off: '235';                              Tol: ( A: '';                    Min: 11.4;  Max: 12.6 ); ),
    (Nr: 210.26; T: '  pos. Toleranz für 12V_ana ermitteln [+8%%]';                       R_on: '';                             Fkt: pToleranz;               M: 'V';       Par: '8';                    R_off: '';                                 Tol: ( A: '';                    Min: 10.4;  Max: 13.7 ); ),
    (Nr: 210.28; T: '  neg. Toleranz für 12V_ana ermitteln [-8%%]';                       R_on: '';                             Fkt: nToleranz;               M: 'V';       Par: '8';                    R_off: '';                                 Tol: ( A: '';                    Min: 10.4;  Max: 13.7 ); ),
    (Nr: 210.30; T: '  Abfrage nach +12V_sich senden [RIP:0EC]';                          R_on: '';                             Fkt: COM;                     M: '';        Par: 'RIP:0EC';              R_off: '';                                 Tol: ( A: '????:CIP:00EC:????';  Min: 0;     Max: 0    ); ),
    (Nr: 210.32; T: '  Wert von +12V_sich ermitteln mit verif. (U_dynHex2Dez)';           R_on: '';                             Fkt: U_dynHex2Dez;            M: 'V';       Par: '33';                   R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 210.34; T: '  Messung +5V_ana';                                                  R_on:'104';                           Fkt: U_Mess_DC;               M: 'V';       Par: '';                     R_off: '104,139,140';                      Tol: ( A: '';                    Min: 4.85;  Max: 5.15 ); ),
    (Nr: 210.36; T: '  pos. Toleranz für 5V_sich ermitteln [+8%%]';                       R_on: '';                             Fkt: pToleranz;               M: 'V';       Par: '8';                    R_off: '';                                 Tol: ( A: '';                    Min: 4.46;  Max: 5.57 ); ),
    (Nr: 210.38; T: '  neg. Toleranz für 5V_sich ermitteln [-8%%]';                       R_on: '';                             Fkt: nToleranz;               M: 'V';       Par: '8';                    R_off: '';                                 Tol: ( A: '';                    Min: 4.46;  Max: 5.57 ); ),
    (Nr: 210.40; T: '  Abfrage nach +5V_sich senden [RIP:0EE]';                           R_on: '';                             Fkt: COM;                     M: '';        Par: 'RIP:0EE';              R_off: '';                                 Tol: ( A: '????:CIP:00EE:????';  Min: 0;     Max: 0    ); ),
    (Nr: 210.42; T: '  Wert von +5V_sich ermitteln und verif. (U_Hex2Dez)';               R_on: '';                             Fkt: U_dynHex2Dez;            M: 'V';       Par: '33';                   R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 210.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '104,107,108,139,140,202,230,235';  Tol: ( A: '';                 Min: 0;     Max: 0    ); ),
         
// 220. Test Resolver-Trägersignal (Achtung bei DIS2 muss Resolver zugeschaltet (K230 an) und aktiviert [OW:00A1:00000003] sein)                                     
    (Nr: 220.00; T: 'Test Resolver Trägersignal';                                         R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 220.02; T: '  Versorgung einschalten';                                           R_on: '203,230';                      Fkt: OsziKonfig;              M: '';        Par: '24';                   R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 220.04; T: '  Messung Trägesignal(DSO-CH1) [Ja/Nein Abfrage]';                   R_on: '115,236';                      Fkt: OsziBild;                M: '';        Par: 'RES_DIS3.bmp';         R_off: '115,203,236';                      Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 220.06; T: '  Oszilloskop deaktivieren';                                         R_on: '';                             Fkt: OsziKonfig;              M: '';        Par: '0';                    R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 220.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '115,203,230,236';                  Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
                                                                                          
// 230. Offset und Phasen-Abgleich mit Resolver                                                                                                                         
    (Nr: 230.00; T: 'Resolver Ofset- und Phasenabgleich';                                 R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 230.02; T: '  Versorgung einschalten';                                           R_on: '202,203,211,212,230';          Fkt: nil;                     M: '';        Par: '';                     R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 230.04; T: '  Fehler quittieren [%s]';                                           R_on: '';                             Fkt: COM;                     M: '50';      Par: 'OW:0061:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 230.06; T: '  Offset-Ph-Abgleich starten [%s]';                                  R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:001A:00000008';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 230.08; T: '  Abgleichende abfragen [%s]';                                       R_on: '';                             Fkt: COM;                     M: '8000 ms'; Par: 'OR:001A';              R_off: '';                                 Tol: ( A: '001A:00000000';       Min: 0;     Max: 0    ); ),
    (Nr: 230.10; T: '  Resolver Sin Offset-Wert abfragen [%s]';                           R_on: '';                             Fkt: COM;                     M: '10';      Par: 'RIP:123';              R_off: '';                                 Tol: ( A: '????:CIP:0123:????';  Min: 0;     Max: 0    ); ),
    (Nr: 230.12; T: '  Resolver Sin Offset-Wert Toleranzuntersuchung';                    R_on: '';                             Fkt: Konvert2Dez;             M: '';        Par: '';                     R_off: '';                                 Tol: ( A: '';                    Min: 16000; Max: 16768); ),
    (Nr: 230.14; T: '  Resolver Cos Offset-Wert abfragen [%s]';                           R_on: '';                             Fkt: COM;                     M: '10';      Par: 'RIP:124';              R_off: '';                                 Tol: ( A: '????:CIP:0124:????';  Min: 0;     Max: 0    ); ),
    (Nr: 230.16; T: '  Resolver Cos Offset-Wert Toleranzuntersuchung';                    R_on: '';                             Fkt: Konvert2DEz;             M: '';        Par: '';                     R_off: '';                                 Tol: ( A: '';                    Min: 16000; Max: 16768); ),
    (Nr: 230.18; T: '  Resolver Phasen-Wert abfragen [%s]';                               R_on: '';                             Fkt: COM;                     M: '10';      Par: 'RIP:122';              R_off: '';                                 Tol: ( A: '????:CIP:0122:????';  Min: 0;     Max: 0    ); ),
    (Nr: 230.20; T: '  Resolver Phasen-Wert Toleranzuntersuchung';                        R_on: '';                             Fkt: Konvert2Dez;             M: 'x';       Par: '';                     R_off: '';                                 Tol: ( A: '';                    Min: 768;   Max: 1536 ); ),
    (Nr: 230.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '202,203,211,212,230';              Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
                                                                       
// 240. Resolver Gainabgleich (mit Abgleich-Trafo)                                                                                                                                   
    (Nr: 240.00; T: 'Resolver Gain-Abgleich';                                             R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 240.02; T: '  Versorgung einschalten';                                           R_on: '202,203,211,212,230';          Fkt: wait;                    M: '';        Par: '2000';                 R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 240.04; T: '  Bereitschaft abfragen [%s]';                                       R_on: '';                             Fkt: COM;                     M: '9000 ms'; Par: 'RIP:054';              R_off: '';                                 Tol: ( A: '????:CIP:0054:2000';  Min: 0;     Max: 0    ); ),
    (Nr: 240.06; T: '  Fehler quittieren [%s]';                                           R_on: '';                             Fkt: COM;                     M: '20';      Par: 'OW:0061:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 240.08; T: '  Abgleich-Trafo zuschalten';                                        R_on: '215,216,235';                  Fkt: Wait;                    M: '';        Par: '200';                  R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 240.10; T: '  Fehler abfragen [%s]';                                             R_on: '';                             Fkt: COM;                     M: '';        Par: 'OR:0070';              R_off: '';                                 Tol: ( A: '0070:????????';       Min: 0;     Max: 0    ); ),
    (Nr: 240.12; T: '  Fehler abfragen [O%s]';                                            R_on: '';                             Fkt: COM;                     M: '';        Par: 'OR:0071';              R_off: '';                                 Tol: ( A: '0071:????????';       Min: 0;     Max: 0    ); ),
    (Nr: 240.14; T: '  Bereitschaft abfragen [%s]';                                       R_on: '';                             Fkt: COM;                     M: '20';      Par: 'RIP:054';              R_off: '';                                 Tol: ( A: '????:CIP:0054:8000';  Min: 0;     Max: 0    ); ),
    (Nr: 240.16; T: '  Istwert abfragen [%s]';                                            R_on: '';                             Fkt: COM;                     M: '';        Par: 'RIP:0E4';              R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 240.18; T: '  Istwert abfragen [%s]';                                            R_on: '';                             Fkt: COM;                     M: '';        Par: 'RIP:0E5';              R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 240.20; T: '  GAIN-Abgleich starten [%s]';                                       R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:001A:00000010';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 240.22; T: '  Warten 2s und Resolver zuschalten';                                R_on: '';                             Fkt: Wait;                    M: '';        Par: '2200';                 R_off: '215,216,235';                      Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 240.24; T: '  Fehler abfragen [%s]';                                             R_on: '';                             Fkt: COM;                     M: '';        Par: 'OR:0070';              R_off: '';                                 Tol: ( A: '0070:????????';       Min: 0;     Max: 0    ); ),
    (Nr: 240.26; T: '  Fehler abfragen [%s]';                                             R_on: '';                             Fkt: COM;                     M: '';        Par: 'OR:0071';              R_off: '';                                 Tol: ( A: '0071:????????';       Min: 0;     Max: 0    ); ),
    (Nr: 240.28; T: '  Resolver Sin Gain-Wert abfragen [%s]';                             R_on: '';                             Fkt: COM;                     M: '';        Par: 'RIP:125';              R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 240.30; T: '  Resolver Cos Gain-Wert abfragen [%s]';                             R_on: '';                             Fkt: COM;                     M: '';        Par: 'RIP:126';              R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 240.32; T: '  Faktoren bewerten [-GainCompare-]';                                R_on: '';                             Fkt: GainCompare;             M: 'x';       Par: '7D00';                 R_off: '';                                 Tol: ( A: '7D00 bis 7FFF';       Min: 0;     Max: 0    ); ),
    (Nr: 240.34; T: '  Fehler quittieren [%s]';                                           R_on: '';                             Fkt: COM;                     M: '20';      Par: 'OW:0061:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 240.36; T: '  Bereitschaft abfragen [%s]';                                       R_on: '';                             Fkt: COM;                     M: '50';      Par: 'RIP:054';              R_off: '';                                 Tol: ( A: '????:CIP:0054:2000';  Min: 0;     Max: 0    ); ),
    (Nr: 240.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '202,211,212,215,216,230,235';      Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
                
// 250. Endstufenfunktion - Offsetstrommessung Ph-U                                                                                            
    (Nr: 250.00; T: 'Endstufenfunktion Offsetstrommessung Ph-U ';                         R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 250.02; T: '  Versorgung einschalten';                                           R_on: '118,202,203,230';              Fkt: nil;                     M: '';        Par: '';                     R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 250.04; T: '  Fehler quittieren [OW:0061:00000040]';                             R_on: '211,212';                      Fkt: COM;                     M: '20';      Par: 'OW:0061:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 250.06; T: '  Bereitschaft abfragen [RIP:054]';                                  R_on: '';                             Fkt: COM;                     M: '20';      Par: 'RIP:054';              R_off: '';                                 Tol: ( A: '????:CIP:0054:2000';  Min: 0;     Max: 0    ); ),
    (Nr: 250.08; T: '  Strom in der Ph-U abfragen [OR:0080]';                             R_on: '';                             Fkt: COM;                     M: '';        Par: 'OR:0080';              R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 250.10; T: '  Spg.-Messung am REF-LEM';                                          R_on: '120';                          Fkt: U_Mess_DC;               M: 'V';       Par: '';                     R_off: '';                                 Tol: ( A: '';                    Min: 2.49;  Max: 2.515); ),
    (Nr: 250.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '118,120,202,211,212,230';          Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
                                      
// 260.Endstufenfunktion - Offsetstrommessung Ph-V                                                                                                                                                                               
    (Nr: 260.00; T: 'Endstufenfunktion Offsetstrommessung Ph-V';                          R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 260.02; T: '  Versorgung einschalten';                                           R_on: '119,202,203,230';              Fkt: nil;                     M: '';        Par: '';                     R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 260.04; T: '  Fehler quittieren [%s]';                                           R_on: '211,212';                      Fkt: COM;                     M: '50';      Par: 'OW:0061:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 260.06; T: '  Bereitschaft abfragen [%s]';                                       R_on: '';                             Fkt: COM;                     M: '50';      Par: 'RIP:054';              R_off: '';                                 Tol: ( A: '????:CIP:0054:2000';  Min: 0;     Max: 0    ); ),
    (Nr: 260.08; T: '  Strom in der Ph-U abfragen [%s]';                                  R_on: '';                             Fkt: COM;                     M: '';        Par: 'OR:0081';              R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 260.10; T: '  Spg.-Messung am REF-LEM';                                          R_on: '120';                          Fkt: U_Mess_DC;               M: 'V';       Par: '';                     R_off: '';                                 Tol: ( A: '';                    Min: 2.49;  Max: 2.515); ),
    (Nr: 260.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '119,120,202,211,212,230';          Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
  
// 270. Endstufenfunktion - Gatesignale bei U_ZK = 0V --LZH                                                                                                                             
    (Nr: 270.00; T: 'Endstufenfunktion - Gatesignale bei U_ZK = 0V';                      R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 270.02; T: '  Versorgung einschalten';                                           R_on: '203,210,211,212,213,230';      Fkt: OsziKonfig;              M: '';        Par: '25';                   R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 270.04; T: '  ZK-Untersp.Auswertung aus [OW:0074:FFFFBFFF]';                     R_on: '';                             Fkt: COM;                     M: '20';      Par: 'OW:0074:FFFFBFFF';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 270.06; T: '  ZK-Untersp.Auswertung aus [OW:0072:FFFFBFFF]';                     R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0072:FFFFBFFF';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 270.08; T: '  Auf Drehmomentregelung setzen [OW:0030:00000004]';                 R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0030:00000004';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 270.10; T: '  Verstärkung auf 0,10  [OW:00D0:00001A00]';                         R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:00D0:00001A00';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 270.12; T: '  Zeitkonstante auf 100 [OW:00D1:000F4240]';                         R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:00D1:000F4240';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 270.14; T: '  Fehler quttieren [OW:0061:00000040]';                              R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0061:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 270.16; T: '  Frg. über die RS232 [OW:0036:00000001]';                           R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0036:00000001';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 270.18; T: '  Freigabe erteilen [OW:0061:00000001]';                             R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0061:00000001';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 270.20; T: '  Messung GATE_T1_T2 [Vergleich mit DSO-Aufnahme]';                  R_on: '121,122';                      Fkt: OsziBild;                M: '';        Par: 'Steig_Fl.bmp';         R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 270.22; T: '  Oszilloskop auf fallende Flanke umparametrieren';                  R_on: '';                             Fkt: OsziKonfig;              M: '';        Par: '29';                   R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 270.24; T: '  Messung GATE_T1_T2 [Vergleich mit DSO-Aufnahme]';                  R_on: '';                             Fkt: OsziBild;                M: '';        Par: 'Fal_Fl.bmp';           R_off: '121,122';                          Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 270.26; T: '  Oszilloskop auf steigende Flanke umparametrieren';                 R_on: '';                             Fkt: OsziKonfig;              M: '';        Par: '30';                   R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 270.28; T: '  Messung GATE_T3_T4 [Vergleich mit DSO-Aufnahme]';                  R_on: '123,124';                      Fkt: OsziBild;                M: '';        Par: 'Steig_Fl.bmp';         R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 270.30; T: '  Oszilloskop auf fallende Flanke umparametrieren';                  R_on: '';                             Fkt: OsziKonfig;              M: '';        Par: '29';                   R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 270.32; T: '  Messung GATE_T3_T4 [Vergleich mit DSO-Aufnahme]';                  R_on: '';                             Fkt: OsziBild;                M: '';        Par: 'Fal_Fl.bmp';           R_off: '123,124';                          Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 270.34; T: '  Oszilloskop auf steigende Flanke umparametrieren';                 R_on: '';                             Fkt: OsziKonfig;              M: '';        Par: '30';                   R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 270.36; T: '  Messung GATE_T5_T6 [Vergleich mit DSO-Aufnahme]';                  R_on: '125,126';                      Fkt: OsziBild;                M: '';        Par: 'Steig_Fl.bmp';         R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 270.38; T: '  Oszilloskop auf fallende Flanke umparametrieren';                  R_on: '';                             Fkt: OsziKonfig;              M: '';        Par: '29';                   R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 270.40; T: '  Messung GATE_T5_T6 [Vergleich mit DSO-Aufnahme]';                  R_on: '';                             Fkt: OsziBild;                M: '';        Par: 'Fal_Fl.bmp';           R_off: '125,126,210,211,212,213';          Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 270.42; T: '  Auf Drehzahlregelung setzen [OW:0030:00000008]';                   R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0030:00000008';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 270.44; T: '  Oszilloskop deaktivieren';                                         R_on: '';                             Fkt: OsziKonfig;              M: '';        Par: '0';                    R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 270.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '121,122,123,124,125,126,210,211,212,213';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
 
// 09-09-02 (CKL und PME) Anpassung wegen Lenze-FW (Sonderfirmware)  -  im nachfolgenden PS wurde DIN6 (Kanal K210) auf High gesetzt                                                  
  
// 280.Test DOUT0 und DOUT3 (Haltebremse)                                                                                               
    (Nr: 280.00; T: 'Test DOUT0 (Bereitschafts-LED)und DOUT3(Haltebremse)';               R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 280.02; T: '  Versorgung einschalten';                                           R_on: '203,212,213,230';              Fkt: COM;                     M: '50';      Par: 'Boot?';                R_off: '';                                 Tol: ( A: 'APPLICATION';         Min: 0;     Max: 0    ); ),
    (Nr: 280.04; T: '  ZK-Untersp.Auswertung aus [%s]';                                   R_on: '210';                          Fkt: COM;                     M: '50';      Par: 'OW:0074:FFFFBFFF';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 280.06; T: '  ZK-Untersp.Auswertung aus [%s]';                                   R_on: '';                             Fkt: COM;                     M: '50';      Par: 'OW:0072:FFFFBFFF';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    //(Nr: 280.08; T: '  Auf Drehzahlregelung setzen [%s]';                                 R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0030:00000008';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 280.10; T: '  Fehler quittieren [%s]';                                           R_on: '';                             Fkt: COM;                     M: '50';      Par: 'OW:0061:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 280.12; T: '  Auf Frg.über RS232 parametr. [%s]';                                R_on: '';                             Fkt: COM;                     M: '50';      Par: 'OW:0036:00000001';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 280.14; T: '  Freigabe erteilen [%s]';                                           R_on: '';                             Fkt: COM;                     M: '50';      Par: 'OW:0061:00000001';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 280.16; T: '  Spg.-Messung DOUT0 (Bereitschafts-LED)';                           R_on: '139,140,109';                  Fkt: U_Mess_DC;               M: 'V';       Par: '';                     R_off: '109';                              Tol: ( A: '';                    Min: 20;    Max: 24   ); ),
    (Nr: 280.18; T: '  Spg.-Messung DOUT3 (Haltebremse)';                                 R_on: '139,140,112';                  Fkt: U_Mess_DC;               M: 'V';       Par: '';                     R_off: '112';                              Tol: ( A: '';                    Min: 20;    Max: 24   ); ),
    (Nr: 280.20; T: '  ZK-Untersp.Auswertung einschalten [%s]';                           R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0074:FFFFFFFF';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 280.22; T: '  ZK-Untersp.Auswertung einschalten [%s]';                           R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0072:FFFFFFFF';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 280.24; T: '  Spg.-Messung DOUT0  (Bereitschafts-LED)';                          R_on: '139,140,109';                  Fkt: U_Mess_DC;               M: 'V';       Par: '';                     R_off: '139,140,109';                      Tol: ( A: '';                    Min: -0.5;  Max: 0.8  ); ),
    (Nr: 280.26; T: '  Spg.-Messung DOUT3 (Haltebremse)';                                 R_on: '139,140,112';                  Fkt: U_Mess_DC;               M: 'V';       Par: '';                     R_off: '139,140,112,203,212,210,213';      Tol: ( A: '';                    Min: -0.5;  Max: 0.8  ); ),
    (Nr: 280.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '109,112,139,140,212,213,230';      Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
  
// 290.Motorlauf mit Resolver bei 48V_Wid                                                                                                                                       
    (Nr: 290.00; T: 'Motorlauf bei Resolver bei 48V_Wid';                                 R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 290.02; T: '  Versorgung einschalten';                                           R_on: '202,203,210,211,212,213,230';  Fkt: COM;                     M:'15';       Par: 'BOOT?';                R_off: '';                                 Tol: ( A: 'APPLICATION';         Min: 0;     Max: 0    ); ),
    (Nr: 290.04; T: '  Fehler quittieren [%s]';                                           R_on: '210';                          Fkt: COM;                     M:'30';       Par: 'OW:0061:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 290.06; T: '  ZK-Untersp.Auswertung aus [%s]';                                   R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0074:FFFFBFFF';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 290.08; T: '  ZK-Untersp.Auswertung aus [%s]';                                   R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0072:FFFFBFFF';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 290.10; T: '  Selektor Drehzahlregler für Drehzahlwert [%s]';                    R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:00EE:00005535';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 290.12; T: '  Setzen auf Drehzahlregelung [%s]';                                 R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0030:00000008';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 290.14; T: '  Auf Solldrehzahl von 300U/min parametrieren [%s]';                 R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:00E3:0012C000';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 290.16; T: '  Freigebe erteilen [%s]';                                           R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0061:00000001';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 290.18; T: '  Warten (%s)';                                                      R_on: '';                             Fkt: Wait;                    M: '';        Par: '500';                  R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 290.20; T: '  UZK-Messung (UZK-Versorgung) über 47R in der Reihe';               R_on: '108,139,140';                  Fkt: U_Mess_DC;               M:'V';        Par: '';                     R_off: '108,139,140';                      Tol: ( A: '';                    Min: 35;    Max: 45   ); ),
    (Nr: 290.22; T: '  Freigabe wegnehmen [%s]';                                          R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0061:00000002';     R_off: '210,213';                          Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 290.24; T: '  Fehler quittieren [%s]';                                           R_on: '';                             Fkt: COM;                     M:'30';       Par: 'OW:0061:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 290.26; T: '  Fehler quittieren [%s]';                                           R_on: '';                             Fkt: COM;                     M:'30';       Par: 'OW:0061:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 290.28; T: '  Bereitschaft abfragen [%s]';                                       R_on: '';                             Fkt: COM;                     M:'10';       Par: 'RIP:054';              R_off: '202,211,212';                      Tol: ( A: '????:CIP:0054:2000';  Min: 0;     Max: 0    ); ),
    (Nr: 290.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '108,139,140,202,210,211,212,213,230'; Tol: ( A: '';             Min: 0;     Max: 0    ); ),
    
// 295.Bei nachfolgenden Varianten kein BCH-Test
    (Nr: 295.00; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10        PS_310';   R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    );),
    (Nr: 295.02; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_FB_CAN PS_310';   R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    );),
    (Nr: 295.04; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_KU     PS_310';   R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    );),
    (Nr: 295.06; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'Lenze_931KCK42    PS_310';   R_off: '';                                 Tol: ( A: '';                   Min: 0;     Max: 0   );),
    
// 300. Bremschoppertest 
    (Nr: 300.00; T: 'Bremschoppertest';                                                   R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 300.02; T: '  Versorgung einschalten';                                           R_on: '202,203,211,212,230';          Fkt: nil;                     M: '';        Par: '';                     R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 300.04; T: '  Testmodus einschalten [%s]';                                       R_on: '210';                          Fkt: COM;                     M: '20';      Par: 'SIP:012:0001!';        R_off: '';                                 Tol: ( A: '????:CIP:0012:0001';  Min: 0;     Max: 0    ); ),
    (Nr: 300.06; T: '  Bremschopper einschalten [%s]';                                    R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:011:0004!';        R_off: '';                                 Tol: ( A: '????:CIP:0011:0004';  Min: 0;     Max: 0    ); ),
    (Nr: 300.08; T: '  U_ZK.-Messung beim aktiven Bremschopper';                          R_on: '108,139,140';                  Fkt: U_Mess_DC;               M: 'V';       Par: '';                     R_off: '108,139,140';                      Tol: ( A: '';                    Min: 14.0;  Max: 22.0 ); ),
    (Nr: 300.10; T: '  Bremschopper aus [%s]';                                            R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:012:0000!';        R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 300.12; T: '  Fehler quittieren [%s]';                                           R_on: '';                             Fkt: COM;                     M: '20';      Par: 'OW:0061:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 300.16; T: '  Bereitschaft abfragen [%s]';                                       R_on: '';                             Fkt: COM;                     M: '200';     Par: 'RIP:054';              R_off: '';                                 Tol: ( A: '????:CIP:0054:2000';  Min: 0;     Max: 0    ); ),
    (Nr: 300.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '108,139,140,202,210,211,212,230';  Tol: ( A: '';                  Min: 0;     Max: 0    ); ),

// 310. Kurzschlusstest Phase U an ZK+                                                                                                               
    (Nr: 310.00; T: 'Kurzschlusstest Phase U an ZK+';                                     R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 310.02; T: '  Versorgung einschalten';                                           R_on: '202,203,210,211,212,213,230';  Fkt: Wait;                    M: '';        Par: '1500';                 R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 310.04; T: '  Fehler quittieren [%s]';                                           R_on: '';                             Fkt: COM;                     M: '30';      Par: 'OW:0061:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 310.06; T: '  Selektor Drehzahlregler für Drehzahlwert [%s]';                    R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:00EE:00005535';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 310.08; T: '  Setzen auf Drehzahlregelung [%s]';                                 R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0030:00000008';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 310.10; T: '  Auf Solldrehzahl von 300U/min parametrieren [%s]';                 R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:00E3:0012C000';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 310.12; T: '  Freigebe (über RS232) [%s]';                                       R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0061:00000001';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 310.14; T: '  Motorlauf mit 300U/min 1s';                                        R_on: '';                             Fkt: Wait;                    M: '';        Par: '50';                   R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 310.16; T: '  Kurzschluss Ph-U an ZK+ auslösen';                                 R_on: '239';                          Fkt: Wait;                    M: '';        Par: '20';                   R_off: '239';                              Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 310.18; T: '  Abfrage nach "Überstromsignal" [%s]';                              R_on: '';                             Fkt: COM;                     M: '20';      Par: 'OR:0070';              R_off: '';                                 Tol: ( A: '0070:00002000';       Min: 0;     Max: 0    ); ),
    (Nr: 310.20; T: '  Freigabe Aus über RS232 [%s]';                                     R_on: '';                             Fkt: COM;                     M: '20';      Par: 'OW:0061:00000002';     R_off: '210,213';                          Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 310.22; T: '  Fehler quittieren [%s]';                                           R_on: '';                             Fkt: COM;                     M: '40';      Par: 'OW:0061:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 310.26; T: '  Bereitschaft abfragen [%s]';                                       R_on: '';                             Fkt: COM;                     M: '40';      Par: 'RIP:054';              R_off: '';                                 Tol: ( A: '????:CIP:0054:2000';  Min: 0;     Max: 0    ); ),
    (Nr: 310.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '202,210,211,212,213,230,239';      Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
                                                                                                                                                                                                                       
// 320.Kurzschlusstest Phase V an ZK+                                                                                                                                              
    (Nr: 320.00; T: 'Kurzschlusstest Phase V an ZK+';                                     R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 320.02; T: '  Versorgung einschalten';                                           R_on: '202,203,210,211,212,213,230';  Fkt: Wait;                    M: '';        Par: '1500';                 R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 320.04; T: '  Fehler quittieren [%s]';                                           R_on: '210';                          Fkt: COM;                     M: '30';      Par: 'OW:0061:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 320.06; T: '  Selektor Drehzahlregler für Drehzahlwert [%s]';                    R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:00EE:00005535';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 320.08; T: '  Auf Drehzahlregelung setzen [%s]';                                 R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0030:00000008';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 320.10; T: '  Auf Solldrehzahl von 300U/min parametrieren [%s]';                 R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:00E3:0012C000';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 320.12; T: '  Freigebe (über RS232) [%s]';                                       R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0061:00000001';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 320.14; T: '  Motorlauf mit 300U/min 1s';                                        R_on: '';                             Fkt: Wait;                    M: '';        Par: '50';                   R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 320.16; T: '  Kurzschluss Ph-V an ZK+ auslösen';                                 R_on: '238';                          Fkt: Wait;                    M: '';        Par: '20';                   R_off: '238';                              Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 320.18; T: '  Abfrage nach "Überstromsignal" [%s]';                              R_on: '';                             Fkt: COM;                     M: '20';      Par: 'OR:0070';              R_off: '';                                 Tol: ( A: '0070:00002000';       Min: 0;     Max: 0    ); ),
    (Nr: 320.20; T: '  Freigabe aus  [%s]';                                               R_on: '';                             Fkt: COM;                     M: '20';      Par: 'OW:0061:00000002';     R_off: '210,213';                          Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 320.22; T: '  Fehler quittieren [%s]';                                           R_on: '';                             Fkt: COM;                     M: '40';      Par: 'OW:0061:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 320.26; T: '  Bereitschaft abfragen [%s]';                                       R_on: '';                             Fkt: COM;                     M: '40';      Par: 'RIP:054';              R_off: '';                                 Tol: ( A: '????:CIP:0054:2000';  Min: 0;     Max: 0    ); ),
    (Nr: 320.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '202,210,211,212,213,230,238';      Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
                                                                                                                                                                                                                                                                     
// 330.Kurzschlusstest Phase W an ZK+                                                                                                                                                                                             
    (Nr: 330.00; T: 'Kurzschlusstest Phase W an ZK+';                                     R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 330.02; T: 'Versorgung einschalten';                                             R_on: '202,203,210,211,212,213,230';  Fkt: Wait;                    M: '';        Par: '1500';                 R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 330.04; T: '  Fehler quittieren [%s]';                                           R_on: '210';                          Fkt: COM;                     M: '40';      Par: 'OW:0061:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 330.06; T: '  Selektor Drehzahlregler für Drehzahlwert [%s]';                    R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:00EE:00005535';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 330.08; T: '  Setzen auf Drehzahlregelung [%s]';                                 R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0030:00000008';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 330.10; T: '  Auf Solldrehzahl von 300U/min parametrieren [%s]';                 R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:00E3:0012C000';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 330.12; T: '  Freigebe (über RS232) [%s]';                                       R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0061:00000001';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 330.14; T: '  Motorlauf mit 300U/min';                                           R_on: '';                             Fkt: Wait;                    M: '';        Par: '50';                   R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 330.16; T: '  Kurzschluss Ph-W an ZK+ auslösen';                                 R_on: '237';                          Fkt: Wait;                    M: '';        Par: '20';                   R_off: '237';                              Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 330.18; T: '  Abfrage nach "Überstromsignal" [%s]';                              R_on: '';                             Fkt: COM;                     M: '20';      Par: 'OR:0070';              R_off: '';                                 Tol: ( A: '0070:00002000';       Min: 0;     Max: 0    ); ),
    (Nr: 330.20; T: '  Freigabe aus  [%s]';                                               R_on: '';                             Fkt: COM;                     M: '20';      Par: 'OW:0061:00000002';     R_off: '210,213';                          Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 330.22; T: '  Fehler quittieren [%s]';                                           R_on: '';                             Fkt: COM;                     M: '40';      Par: 'OW:0061:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 330.26; T: '  Bereitschaft abfragen [%s]';                                       R_on: '';                             Fkt: COM;                     M: '40';      Par: 'RIP:054';              R_off: '';                                 Tol: ( A: '????:CIP:0054:2000';  Min: 0;     Max: 0    ); ),
    (Nr: 330.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '202,210,211,212,213,230,237';      Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
 
//340. Strommessung Phase U - Gainabgleich                
    (Nr: 340.00; T: 'Strommessung Phase U - Gainabgleich';                                R_on: '118,202,203,230';              Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:2';           R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 340.02; T: '  Fehler quittieren [%s]';                                           R_on: '201,210,211,212,213';          Fkt: COM;                     M: '50';      Par: 'OW:0061:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 340.04; T: '  Bereitschaft abfragen [%s]';                                       R_on: '210';                          Fkt: COM;                     M: '50';      Par: 'RIP:054';              R_off: '';                                 Tol: ( A: '????:CIP:0054:2000';  Min: 0;     Max: 0    ); ),
    (Nr: -340.05;T: '  Messungsfunkion zubereiten';                                       R_on: '';                             Fkt: U_Mess_DC;               M: 'V';       Par: '';                     R_off: '';                                 Tol: ( A: '';                    Min: -24.0; Max: 24.0 ); ),
    (Nr: 340.06; T: '  Auf Drehmoment-Reg. umstellen. [%s]';                              R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0030:00000004';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 340.08; T: '  Auf Stromsollwert über RS232 setzen [%s]';                         R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:00D4:00005553';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 340.10; T: '  Wirkstrom auf 0A setzen [%s]';                                     R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:00C7:00000000';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 340.12; T: '  Testmodus einschalten [%s]';                                       R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:012:0001!';        R_off: '';                                 Tol: ( A: '????:CIP:0012:0001';  Min: 0;     Max: 0    ); ),
    (Nr: 340.14; T: '  Resolverwinkel auf Phase U stellen [%s]';                          R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:011:0008!';        R_off: '';                                 Tol: ( A: '????:CIP:0011:0008';  Min: 0;     Max: 0    ); ),
    (Nr: 340.16; T: '  Freigabe erteilen [%s]';                                           R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0061:00000001';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 340.18; T: '  Warten (%s)';                                                      R_on: '';                             Fkt: Wait;                    M: '';        Par: '100';                  R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 340.20; T: '  Zeitbegrenzung für die folgenden Schritte ( %sms )';               R_on: '';                             Fkt: Timer_Start;             M: '';        Par: '3000';                 R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 340.22; T: '  Blindstrom auf 1A setzen  [%s]';                                   R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:143:0064!';        R_off: '';                                 Tol: ( A: '????:CIP:0143:0064';  Min: 0;     Max: 0    ); ),
    (Nr: 340.24; T: '  Blindstrom auf 5A setzen  [%s]';                                   R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:143:01F4!';        R_off: '';                                 Tol: ( A: '????:CIP:0143:????';  Min: 0;     Max: 0    ); ),
    (Nr: 340.26; T: '  Blindstrom auf 10A setzen [%s]';                                   R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:143:03E8!';        R_off: '';                                 Tol: ( A: '????:CIP:0143:????';  Min: 0;     Max: 0    ); ),
    (Nr: 340.28; T: '  Blindstrom auf 15A setzen [%s]';                                   R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:143:05DC!';        R_off: '';                                 Tol: ( A: '????:CIP:0143:????';  Min: 0;     Max: 0    ); ),
    (Nr: 340.30; T: '  Blindstrom auf 20A setzen [%s]';                                   R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:143:07D0!';        R_off: '';                                 Tol: ( A: '????:CIP:0143:????';  Min: 0;     Max: 0    ); ),
    (Nr: 340.32; T: '  Blindstrom auf 25A setzen [%s]';                                   R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:143:09C4!';        R_off: '';                                 Tol: ( A: '????:CIP:0143:????';  Min: 0;     Max: 0    ); ),
    (Nr: 340.34; T: '  Blindstrom auf 30A setzen [%s]';                                   R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:143:0BB8!';        R_off: '';                                 Tol: ( A: '????:CIP:0143:????';  Min: 0;     Max: 0    ); ),
    (Nr: 340.36; T: '  Spannung am LEM-Modul erfassen (bei 30A)';                         R_on: '120';                          Fkt: U_Mess_DC;               M: 'V';       Par: '';                     R_off: '';                                 Tol: ( A: '';                    Min: 0.001; Max: 5.5  ); ),
    (Nr: 340.38; T: '  Strom in der Ph-U abfragen [%s]';                                  R_on: '';                             Fkt: COM;                     M: '=12';     Par: 'OR:0080';              R_off: '';                                 Tol: ( A: '0080:????????';       Min: 0;     Max: 0    ); ),
    (Nr: 340.40; T: '  Blindstrom auf 0A setzen [%s]';                                    R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:143:0000!';        R_off: '';                                 Tol: ( A: '????:CIP:0143:0000';  Min: 0;     Max: 0    ); ),
    (Nr: 340.42; T: '  Freigabe aus [%s]';                                                R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0061:00000002';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 340.44; T: '  Zeitbegrenzung beenden';                                           R_on: '';                             Fkt: Timer_Stop;              M: '';        Par: '';                     R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 340.46; T: '  Offset-Spannung des U_LEM messen (bei 0A)';                        R_on: '';                             Fkt: U_Mess_DC;               M: 'V';       Par: '';                     R_off: '120';                              Tol: ( A: '';                    Min: 2.2;   Max: 2.6  ); ),
    (Nr: 340.48; T: '  Korrekturfaktor für Phase U abfragen [%s]';                        R_on: '';                             Fkt: COM;                     M: '';        Par: 'RIP:3F13';             R_off: '';                                 Tol: ( A: '????:CIP:3F13:????';  Min: 0;     Max: 0    ); ),
    (Nr: 340.50; T: '  Strom(Ph-U) aus U_LEM ermitteln [Arithmetik]';                     R_on: '';                             Fkt: Arithmetik;              M: 'A';       Par: '(@LastReal[7]-@LastReal[2])/0.025';     R_off: '';                Tol: ( A: '';                    Min: 27;    Max: 36   ); ),
    (Nr: 340.52; T: '  Korrekturfaktor ermitteln';                                        R_on: '';                             Fkt: Arithmetik;              M: '';        Par: '(@LastInt[2]*@Lastreal)/(@LastInt[7]/$10000)';      R_off: '';    Tol: ( A: '';                    Min: 23760; Max: 29040); ),
    (Nr: 340.54; T: '  Korrekturfaktor für Ph-U schreiben [SIP:3F13:I_KorrFaktor!]';      R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:3F13:@I_KorrFaktor!';R_off: '211,212';                        Tol: ( A: '????:CIP:3F13:@I_KorrFaktor'; Min: 0; Max: 0); ),
    (Nr: 340.56; T: '  Testmodus aus [%s]';                                               R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:012:0000!';        R_off: '118,201';                          Tol: ( A: '????:CIP:0012:0000';  Min: 0;     Max: 0    ); ),
    (Nr: 340.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '118,120,201,202,210,211,212,213,230'; Tol: ( A: '';             Min: 0;     Max: 0    ); ),
                              
// 350. Strommessung Phase V - Gainabgleich                                                                                                                                                                                           
    (Nr: 350.00; T: 'Strommessung Phase V - Gainabgleich';                                R_on: '202,203,119,230';              Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:2';           R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 350.02; T: '  Fehler quittieren [%s]';                                           R_on: '201,210,211,212,213';          Fkt: COM;                     M: '50';      Par: 'OW:0061:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 350.04; T: '  Bereitschaft abfragen [%s]';                                       R_on: '';                             Fkt: COM;                     M: '50';      Par: 'RIP:054';              R_off: '';                                 Tol: ( A: '????:CIP:0054:2000';  Min: 0;     Max: 0    ); ),
    (Nr: -350.05;T: '  Messungsfunkion zubereiten';                                       R_on: '';                             Fkt: U_Mess_DC;               M: 'V';       Par: '';                     R_off: '';                                 Tol: ( A: '';                    Min: -24.0; Max: 24.0 ); ),
    (Nr: 350.06; T: '  Auf Drehmoment-Reg. umstellen. [%s]';                              R_on: '';                             Fkt: COM;                     M: '20';      Par: 'OW:0030:00000004';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 350.08; T: '  Strom-Sollwert über RS232 einstellen [%s]';                        R_on: '';                             Fkt: COM;                     M: '20';      Par: 'OW:00D4:00005553';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 350.10; T: '  Wirkstrom auf 0A setzen [%s]';                                     R_on: '';                             Fkt: COM;                     M: '20';      Par: 'OW:00C7:00000000';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 350.12; T: '  Testmodus einschalten [%s]';                                       R_on: '';                             Fkt: COM;                     M: '20';      Par: 'SIP:012:0001!';        R_off: '';                                 Tol: ( A: '????:CIP:0012:0001';  Min: 0;     Max: 0    ); ),
    (Nr: 350.14; T: '  Resolverwinkel auf Phase V stellen [%s]';                          R_on: '';                             Fkt: COM;                     M: '20';      Par: 'SIP:011:0010!';        R_off: '';                                 Tol: ( A: '????:CIP:0011:0010';  Min: 0;     Max: 0    ); ),
    (Nr: 350.16; T: '  Freigabe erteilen [%s]';                                           R_on: '';                             Fkt: COM;                     M: '20';      Par: 'OW:0061:00000001';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 350.18; T: '  Warten';                                                           R_on: '';                             Fkt: Wait;                    M: '';        Par: '100';                  R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 350.20; T: '  Zeitbegrenzung für die folgenden Schritte (%sms)';                 R_on: '';                             Fkt: Timer_Start;             M: '';        Par: '2600';                 R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 350.22; T: '  Blindstrom auf 1A setzen  [%s]';                                   R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:143:0064!';        R_off: '';                                 Tol: ( A: '????:CIP:0143:0064';  Min: 0;     Max: 0    ); ),
    (Nr: 350.24; T: '  Blindstrom auf 5A setzen  [%s]';                                   R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:143:01F4!';        R_off: '';                                 Tol: ( A: '????:CIP:0143:01F4';  Min: 0;     Max: 0    ); ),
    (Nr: 350.26; T: '  Blindstrom auf 10A setzen [%s]';                                   R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:143:03E8!';        R_off: '';                                 Tol: ( A: '????:CIP:0143:03E8';  Min: 0;     Max: 0    ); ),
    (Nr: 350.28; T: '  Blindstrom auf 15A setzen [%s]';                                   R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:143:05DC!';        R_off: '';                                 Tol: ( A: '????:CIP:0143:05DC';  Min: 0;     Max: 0    ); ),
    (Nr: 350.30; T: '  Blindstrom auf 20A setzen [%s]';                                   R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:143:07D0!';        R_off: '';                                 Tol: ( A: '????:CIP:0143:07D0';  Min: 0;     Max: 0    ); ),
    (Nr: 350.32; T: '  Blindstrom auf 25A setzen [%s]';                                   R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:143:09C4!';        R_off: '';                                 Tol: ( A: '????:CIP:0143:09C4';  Min: 0;     Max: 0    ); ),
    (Nr: 350.34; T: '  Blindstrom auf 30A setzen [%s]';                                   R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:143:0BB8!';        R_off: '';                                 Tol: ( A: '????:CIP:0143:0BB8';  Min: 0;     Max: 0    ); ),
    (Nr: 350.36; T: '  Spannung am LEM-Modul erfassen (bei 30A)';                         R_on: '120';                          Fkt: U_Mess_DC;               M: 'V';       Par: '';                     R_off: '';  {'120';}                       Tol: ( A: '';                    Min: 0.001; Max: 5.5  ); ),
    (Nr: 350.38; T: '  Strom in der Ph-V abfragen [%s]';                                  R_on: '';                             Fkt: COM;                     M: '=12';     Par: 'OR:0081';              R_off: '';                                 Tol: ( A: '0081:????????';       Min: 0;     Max: 0    ); ),
    (Nr: 350.40; T: '  Blindstrom auf 0A setzen [%s]';                                    R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:143:0000!';        R_off: '';                                 Tol: ( A: '????:CIP:0143:0000';  Min: 0;     Max: 0    ); ),
    (Nr: 350.42; T: '  Freigabe Aus [%s]';                                                R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0061:00000002';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 350.44; T: '  Zeitbegrenzung beenden';                                           R_on: '';                             Fkt: Timer_Stop;              M: '';        Par: '';                     R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 350.46; T: '  Offset-Spannung des U_LEM messen (bei 0A)';                        R_on: '';                             Fkt: U_Mess_DC;               M: 'V';       Par: '';                     R_off: '120';                              Tol: ( A: '';                    Min: 2.2;   Max: 2.6  ); ),
    (Nr: 350.48; T: '  Korrekturfaktor für Phase V abfragen [%s]';                        R_on: '';                             Fkt: COM;                     M: '';        Par: 'RIP:3F14';             R_off: '';                                 Tol: ( A: '????:CIP:3F14:????';  Min: 0;     Max: 0    ); ),
    (Nr: 350.50; T: '  Strom(Ph-U) aus U_LEM ermitteln [Arithmetik]';                     R_on: '';                             Fkt: Arithmetik;              M: 'A';       Par: '(@LastReal[7]-@LastReal[2])/0.025';     R_off: '';                Tol: ( A: '';                    Min: 27;    Max: 36   ); ),
    (Nr: 350.52; T: '  Korrekturfaktor ermitteln';                                        R_on: '';                             Fkt: Arithmetik;              M: '';        Par: '(@LastInt[2]*@Lastreal)/(@LastInt[7]/$10000)';      R_off: '';    Tol: ( A: '';                    Min: 23760; Max: 29040); ),
    (Nr: 350.54; T: '  Korrekturfaktor für Ph-V schreiben [SIP:3F14:I_KorrFaktor!]';      R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:3F14:@I_KorrFaktor!';  R_off: '211,212';                      Tol: ( A: '????:CIP:3F14:@I_KorrFaktor'; Min: 0; Max: 0); ),
    (Nr: 350.56; T: '  Testmodus aus [%s]';                                               R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:012:0000!';        R_off: '119,201';                          Tol: ( A: '????:CIP:0012:0000';  Min: 0;     Max: 0    ); ),
    (Nr: 350.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '119,120,201,202,203,210,211,212,213,230'; Tol: ( A: '';             Min: 0;     Max: 0    ); ),
  
    (Nr: 355.00; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_KU        PS_365';   R_off: '';                              Tol: ( A: '';                    Min: 0;     Max: 0    );),
    (Nr: 355.02; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_FBAFAG    PS_365';   R_off: '';                              Tol: ( A: '';                    Min: 0;     Max: 0    );),
    (Nr: 355.04; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_FBAFAG_PB PS_365';   R_off: '';                              Tol: ( A: '';                    Min: 0;     Max: 0    );),
    (Nr: 355.05; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_FBAFAG_EC PS_365';   R_off: '';                              Tol: ( A: '';              Min: 0;     Max: 0       );),
    (Nr: 355.06; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_FBFO_CAN  PS_365';   R_off: '';                              Tol: ( A: '';                    Min: 0;     Max: 0    );),

// 360. Test AMON0 mit Resolver   (Lenze und DIS2, bei DIS2 Resolverauswertung muss aktiv und Resolver zugeschaltet sein)
    (Nr: 360.00; T: 'Test AMON0 mit Resolver';                                            R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 360.02; T: '  AMON0 mit Resolver und UZK=48V - Initialisierung';                 R_on: '202,203,230';                  Fkt: OsziKonfig;              M: '';        Par: '26';                   R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 360.04; T: '  Fehler quittieren [%s]';                                           R_on: '201,211,212,213';              Fkt: COM;                     M: '60';      Par: 'OW:0061:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 360.06; T: '  Resolverauswertung auf AMON0 einstellen [%s]';                     R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:008A:000000A0';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 360.08; T: '  Die Skalierung definieren [%s]';                                   R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:008B:FFFF0000';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 360.10; T: '  Setzen auf Positionierung [%s]';                                   R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0030:00000010';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 360.12; T: '  Selektor Positionierung auf Pos 0 [%s]';                           R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0112:00000000';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 360.14; T: '  Ziel von Pos 0 auf -5000 Usetzen [%s]';                            R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0124:EC780000';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 360.16; T: '  Geschwindigkeit auf +1000U/min parametrieren [%s]';                R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0125:003E8000';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 360.18; T: '  Schleppfeher als Warnung parametrieren [%s]';                      R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0072:EDFBFFFF';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 360.20; T: '  Schleppfeherwarnung ignorieren [%s]';                              R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0074:EDFBFFFF';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 360.22; T: '  Freigebe erteilen [%s]';                                           R_on: '113,229';                      Fkt: COM;                     M: '';        Par: 'OW:0061:00000001';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 360.24; T: '  Positionierung starten [%s]';                                      R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0061:00000021';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 360.26; T: '  Warten';                                                           R_on: '';                             Fkt: Wait;                    M: '';        Par: '500';                  R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 360.28; T: '  Messung Analogmonitor - steigende Flanke(DSO)[Vergleich mit DSO-Aufnahme]';R_on: '';                     Fkt: OsziBild;                M: '';        Par: 'AMON0_R.bmp';          R_off: '113,229';                          Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 360.30; T: '  Freigabe wegnehmen [%s]';                                          R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0061:00000002';     R_off: '210,213';                          Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 360.32; T: '  Fehler quittieren [%s]';                                           R_on: '';                             Fkt: COM;                     M: '40';      Par: 'OW:0061:00000040';     R_off: '201';                              Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 360.34; T: '  Bereitschaft abfragen [%s]';                                       R_on: '';                             Fkt: COM;                     M: '10';      Par: 'RIP:054';              R_off: '202,203,211,212';                  Tol: ( A: '????:CIP:0054:2000';  Min: 0;     Max: 0    ); ),
    (Nr: 360.36; T: '  Oszilloskop deaktivieren';                                         R_on: '';                             Fkt: OsziKonfig;              M: '';        Par: '0';                    R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 360.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '113,201,202,210,211,212,213,229,230'; Tol: ( A: '';             Min: 0;     Max: 0    ); ),
    
    (Nr: 362.00; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_FB_ECAT   PS_370';   R_off: '';                        Tol: ( A: '';                    Min: 0;     Max: 0    );),
    (Nr: 362.02; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_FB_CAN    PS_370';   R_off: '';                        Tol: ( A: '';                    Min: 0;     Max: 0    );),
    (Nr: 362.04; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_FB_PB     PS_370';   R_off: '';                        Tol: ( A: '';                    Min: 0;     Max: 0    );),
    (Nr: 362.06; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_STO_FB_ECAT PS_370'; R_off: '';                        Tol: ( A: '';                    Min: 0;     Max: 0    );),
    (Nr: 362.08; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_STO_FB_CAN  PS_370'; R_off: '';                        Tol: ( A: '';                    Min: 0;     Max: 0    );),
    (Nr: 362.10; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_STO_FB_PB   PS_370'; R_off: '';                        Tol: ( A: '';                    Min: 0;     Max: 0    );),
    (Nr: 362.12; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'Lenze_931KPK42       PS_370';   R_off: '';                        Tol: ( A: '';                    Min: 0;     Max: 0    );),
    (Nr: 362.14; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'Lenze_931KEK42       PS_370';   R_off: '';                        Tol: ( A: '';                    Min: 0;     Max: 0    );),
    (Nr: 362.16; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'Lenze_931KCK42       PS_370';   R_off: '';                        Tol: ( A: '';                    Min: 0;     Max: 0    );),
    (Nr: 362.22; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10           PS_380';   R_off: '';                        Tol: ( A: '';                    Min: 0;     Max: 0    );),
     // Lenze-Varianten mit STO                                                           
    (Nr: 362.24; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'Lenze_931KCK44       PS_377';   R_off:'';                         Tol: ( A:'';                     Min: 0;     Max: 0    );),
    (Nr: 362.26; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'Lenze_931KPK44       PS_377';   R_off:'';                         Tol: ( A:'';                     Min: 0;     Max: 0    );),
    (Nr: 362.28; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'Lenze_931KEK44       PS_377';   R_off:'';                         Tol: ( A:'';                     Min: 0;     Max: 0    );),
    (Nr: 362.30; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'Lenze_931KCK46       PS_377';   R_off:'';      Tol: ( A:'';           Min: 0;    Max: 0 );),
                                                                                          
// 365. Für Variante Kuhnke und FBAFAG: Test AMON0 mit Resolver   (Lenze und DIS2, bei DIS2 Resolverauswertung muss aktiv und Resolver zugeschaltet sein)                                              
    (Nr: 365.00; T: 'Test AMON0 mit Resolver';                                            R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 365.02; T: '  AMON0 mit Resolver und UZK=48V - Initialisierung';                 R_on: '202,203,230';                  Fkt: OsziKonfig;              M: '';        Par: '26';                   R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 365.04; T: '  Fehler quittieren [%s]';                                           R_on: '201,210,211,212,213';          Fkt: COM;                     M: '40';      Par: 'OW:0061:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 365.06; T: '  Resolverauswertung auf AMON0 einstellen [%s]';                     R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:008A:000000A0';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 365.08; T: '  Die Skalierung definieren [%s]';                                   R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:008B:FFFF0000';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 365.10; T: '  Selektor Drehzahlregler für Drehzahlwert [%s]';                    R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:00EE:00005535';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 365.12; T: '  Setzen auf Drehzahlregelung [%s]';                                 R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0030:00000008';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 365.14; T: '  Auf Solldrehzahl +1000U/min parametrieren [%s]';                   R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:00E3:FFC18000';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 365.16; T: '  Freigebe erteilen [%s]';                                           R_on: '113,229';                      Fkt: COM;                     M: '';        Par: 'OW:0061:00000001';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 365.18; T: '  Warten(%s)';                                                       R_on: '';                             Fkt: Wait;                    M: '';        Par: '500';                  R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 365.20; T: '  Messung Analogmonitor - steigende Flanke(DSO)[Vergleich mit DSO-Aufnahme]';R_on: '';                     Fkt: OsziBild;                M: '';        Par: 'AMON0_R.bmp';          R_off: '113,229';                          Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 365.22; T: '  Freigabe wegnehmen [%s]';                                          R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0061:00000002';     R_off: '210,213';                          Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 365.24; T: '  Fehler quittieren [%s]';                                           R_on: '';                             Fkt: COM;                     M: '40';      Par: 'OW:0061:00000040';     R_off: '201';                              Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 365.26; T: '  Bereitschaft abfragen [%s]';                                       R_on: '';                             Fkt: COM;                     M: '0';       Par: 'RIP:054';              R_off: '202,203,211,212';                  Tol: ( A: '????:CIP:0054:2000';  Min: 0;     Max: 0    ); ),
    (Nr: 365.28; T: '  Oszilloskop deaktivieren';                                         R_on: '';                             Fkt: OsziKonfig;              M: '';        Par: '0';                    R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 365.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '113,201,202,210,211,212,213,229,230'; Tol: ( A: '';             Min: 0;     Max: 0    ); ),
   
    (Nr: 368.00; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_FBAFAG    PS_375';   R_off: '';                        Tol: ( A: '';                    Min: 0;     Max: 0    );),
    (Nr: 368.20; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_FBAFAG_PB PS_375';   R_off: '';                        Tol: ( A: '';                    Min: 0;     Max: 0    );),
    (Nr: 368.21; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_FBAFAG_EC PS_375';   R_off: '';                           Tol: ( A: '';              Min: 0;     Max: 0       );),
    (Nr: 368.22; T:'JUMP_PS_DEVICE(%s)';                                                  R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_KU        PS_380';   R_off: '';                        Tol: ( A: '';                    Min: 0;     Max: 0    );),
    
// 370. Für FB-Varainten [SIP:3F20:000A!] - Test Inkrementalgeber - Emulation Spur A und Spur B     (->  DIS2 - die AB signale werden auf DOUT1 und 2 ausgegeben, Inkrementalgeber aktivieren [OW:00A1:00000003] und zuschalten K232 an -> K230 aus-Resolver  und K231 aus - SinCos)
    (Nr: 370.00; T: 'Test Ink.Geber-Emulation Spur A und B (DOUT1 und DOUT2)';            R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 370.02; T: '  Versorgung einschalten und Initiarisierung';                       R_on: '202,203,228,230';              Fkt: OsziKonfig;              M: '';        Par: '31';                   R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 370.04; T: '  Fehler quittieren [%s]';                                           R_on: '201,211,212,210,213';          Fkt: COM;                     M: '50';      Par: 'OW:0061:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 370.06; T: '  Ink.Geberemulation einschalten [%s]';                              R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:00A2:00000082';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 370.08; T: '  Ink.Geber Strichzahl auf 64 setzen [%s]';                          R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:00A5:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 370.10; T: '  Servicemodus aktivieren [%s]';                                     R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:012:0001!';        R_off: '';                                 Tol: ( A: '????:CIP:0012:0001';  Min: 0;     Max: 0    ); ),
    (Nr: 370.12; T: '  FB-Kennung löschen [%s]';                                          R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:3F20:0002!';       R_off: '';                                 Tol: ( A: '????:CIP:3F20:0002';  Min: 0;     Max: 0    ); ),
    (Nr: 370.14; T: '  Servicemodus deaktivieren [%s]';                                   R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:012:0000!';        R_off: '';                                 Tol: ( A: '????:CIP:0012:0000';  Min: 0;     Max: 0    ); ),
    (Nr: 370.16; T: '  FB-Kennung-Neu auslesen [%s]';                                     R_on: '';                             Fkt: COM;                     M: '';        Par: 'RIP:3F20';             R_off: '';                                 Tol: ( A: '????:CIP:3F20:0002';  Min: 0;     Max: 0    ); ),
    (Nr: 370.18; T: '  Selektor Drehzahlregler für Drehzahlwert [%s]';                    R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:00EE:00005535';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 370.20; T: '  Setzen auf Drehzahlregelung [%s]';                                 R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0030:00000008';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 370.22; T: '  Auf Solldrehzahl von 500U/min parametrieren [%s]';                 R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:00E3:001F4000';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 370.24; T: '  Freigebe (über RS232) [%s]';                                       R_on: '101';                          Fkt: COM;                     M: '';        Par: 'OW:0061:00000001';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 370.26; T: '  Messung Spur AB auf DOUT1 und DOUT2(DSO)[Vergleich mit DSO-Aufnahme]';R_on: '';                          Fkt: OsziBild;                M: '';        Par: 'AB_DIS_2.bmp';         R_off: '101';                              Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 370.28; T: '  Freigabe aus [%s]';                                                R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0061:00000002';     R_off: '210,213';                          Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 370.30; T: '  Servicemodus aktivieren [%s]';                                     R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:012:0001!';        R_off: '';                                 Tol: ( A: '????:CIP:0012:0001';  Min: 0;     Max: 0    ); ),
    (Nr: 370.32; T: '  FB-Kennung setzen [%s]';                                           R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:3F20:000A!';       R_off: '';                                 Tol: ( A: '????:CIP:3F20:000A';  Min: 0;     Max: 0    ); ),
    (Nr: 370.34; T: '  Servicemodus deaktivieren [%s]';                                   R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:012:0000!';        R_off: '';                                 Tol: ( A: '????:CIP:0012:0000';  Min: 0;     Max: 0    ); ),
    (Nr: 370.36; T: '  FB-Kennung-Neu auslesen [%s]';                                     R_on: '';                             Fkt: COM;                     M: '';        Par: 'RIP:3F20';             R_off: '';                                 Tol: ( A: '????:CIP:3F20:000A';  Min: 0;     Max: 0    ); ),
    (Nr: 370.38; T: '  Fehler quittieren [%s]';                                           R_on: '';                             Fkt: COM;                     M: '30';      Par: 'OW:0061:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 370.42; T: '  Bereitschaft abfragen [%s]';                                       R_on: '';                             Fkt: COM;                     M: '30';      Par: 'RIP:054';              R_off: '';                                 Tol: ( A: '????:CIP:0054:2000';  Min: 0;     Max: 0    ); ),
    (Nr: 370.44; T: '  Oszilloskop deaktivieren';                                         R_on: '';                             Fkt: OsziKonfig;              M: '';        Par: '0';                    R_off: '230';                              Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 370.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '101,201,202,210,211,212,213,228,230'; Tol: ( A: '';             Min: 0;     Max: 0    ); ),
  
    (Nr: 372.00; T:'JUMP_PS(%s)';                                                         R_on: '';                             Fkt: jump_ps;                 M: '';        Par: 'PS_385';               R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
   
// 375. Für FBAFAG-Varainten [SIP:3F20:000E!] - Test Inkrementalgeber - Emulation Spur A und Spur B     (->  DIS2 - die AB signale werden auf DOUT1 und 2 ausgegeben, Inkrementalgeber aktivieren [OW:00A1:00000003] und zuschalten K232 an -> K230 aus-Resolver  und K231 aus - SinCos)
    (Nr: 375.00; T: 'Test Ink.Geber-Emulation Spur A und B (DOUT1 und DOUT2)';            R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 375.02; T: '  Versorgung einschalten und Initiarisierung';                       R_on: '202,203,228,230';              Fkt: OsziKonfig;              M: '';        Par: '31';                   R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 375.04; T: '  Fehler quittieren [%s]';                                           R_on: '201,211,212,210,213';          Fkt: COM;                     M: '50';      Par: 'OW:0061:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 375.06; T: '  Ink.Geberemulation einschalten [%s]';                              R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:00A2:00000082';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 375.08; T: '  Ink.Geber Strichzahl auf 64 setzen [%s]';                          R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:00A5:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 375.10; T: '  Servicemodus aktivieren [%s]';                                     R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:012:0001!';        R_off: '';                                 Tol: ( A: '????:CIP:0012:0001';  Min: 0;     Max: 0    ); ),
    (Nr: 375.12; T: '  FB-Kennung löschen [%s]';                                          R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:3F20:0002!';       R_off: '';                                 Tol: ( A: '????:CIP:3F20:0002';  Min: 0;     Max: 0    ); ),
    (Nr: 375.14; T: '  Servicemodus deaktivieren [%s]';                                   R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:012:0000!';        R_off: '';                                 Tol: ( A: '????:CIP:0012:0000';  Min: 0;     Max: 0    ); ),
    (Nr: 375.16; T: '  FB-Kennung-Neu auslesen [%s]';                                     R_on: '';                             Fkt: COM;                     M: '';        Par: 'RIP:3F20';             R_off: '';                                 Tol: ( A: '????:CIP:3F20:0002';  Min: 0;     Max: 0    ); ),
    (Nr: 375.18; T: '  Selektor Drehzahlregler für Drehzahlwert [%s]';                    R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:00EE:00005535';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 375.20; T: '  Setzen auf Drehzahlregelung [%s]';                                 R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0030:00000008';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 375.22; T: '  Auf Solldrehzahl von 500U/min parametrieren [%s]';                 R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:00E3:001F4000';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 375.24; T: '  Freigebe (über RS232) [%s]';                                       R_on: '101';                          Fkt: COM;                     M: '';        Par: 'OW:0061:00000001';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 375.26; T: '  Messung Spur AB auf DOUT1 und DOUT2(DSO)[Vergleich mit DSO-Aufnahme]';R_on: '';                          Fkt: OsziBild;                M: '';        Par: 'AB_DIS_2.bmp';         R_off: '101';                              Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 375.28; T: '  Freigabe aus [%s]';                                                R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0061:00000002';     R_off: '210,213';                          Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 375.30; T: '  Servicemodus aktivieren [%s]';                                     R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:012:0001!';        R_off: '';                                 Tol: ( A: '????:CIP:0012:0001';  Min: 0;     Max: 0    ); ),
    (Nr: 375.32; T: '  FB-Kennung setzen [%s]';                                           R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:3F20:000E!';       R_off: '';                                 Tol: ( A: '????:CIP:3F20:000E';  Min: 0;     Max: 0    ); ),
    (Nr: 375.34; T: '  Servicemodus deaktivieren [%s]';                                   R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:012:0000!';        R_off: '';                                 Tol: ( A: '????:CIP:0012:0000';  Min: 0;     Max: 0    ); ),
    (Nr: 375.36; T: '  FB-Kennung-Neu auslesen [%s]';                                     R_on: '';                             Fkt: COM;                     M: '';        Par: 'RIP:3F20';             R_off: '';                                 Tol: ( A: '????:CIP:3F20:000E';  Min: 0;     Max: 0    ); ),
    (Nr: 375.38; T: '  Fehler quittieren [%s]';                                           R_on: '';                             Fkt: COM;                     M: '30';      Par: 'OW:0061:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 375.42; T: '  Bereitschaft abfragen [%s]';                                       R_on: '';                             Fkt: COM;                     M: '30';      Par: 'RIP:054';              R_off: '';                                 Tol: ( A: '????:CIP:0054:2000';  Min: 0;     Max: 0    ); ),
    (Nr: 375.44; T: '  Oszilloskop deaktivieren';                                         R_on: '';                             Fkt: OsziKonfig;              M: '';        Par: '0';                    R_off: '230';                              Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 375.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '101,201,202,210,211,212,213,228,230'; Tol: ( A: '';             Min: 0;     Max: 0    ); ),
  
    (Nr: 376.00; T:'JUMP_PS(%s)';                                                         R_on: '';                             Fkt: jump_ps;                 M: '';        Par: 'PS_385';               R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
   
// 377. Für STO-Lenze-Varainten [SIP:3F20:002A!] - Test Inkrementalgeber - Emulation Spur A und Spur B     (->  DIS2 - die AB signale werden auf DOUT1 und 2 ausgegeben, Inkrementalgeber aktivieren [OW:00A1:00000003] und zuschalten K232 an -> K230 aus-Resolver  und K231 aus - SinCos)
    (Nr: 377.00; T: 'Test Ink.Geber-Emulation Spur A und B (DOUT1 und DOUT2)';            R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 377.02; T: '  Versorgung einschalten und Initiarisierung';                       R_on: '202,203,228,230';              Fkt: OsziKonfig;              M: '';        Par: '31';                   R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 377.04; T: '  Fehler quittieren [%s]';                                           R_on: '201,211,212,210,213';          Fkt: COM;                     M: '50';      Par: 'OW:0061:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 377.06; T: '  Ink.Geberemulation einschalten [%s]';                              R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:00A2:00000082';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 377.08; T: '  Ink.Geber Strichzahl auf 64 setzen [%s]';                          R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:00A5:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 377.10; T: '  Servicemodus aktivieren [%s]';                                     R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:012:0001!';        R_off: '';                                 Tol: ( A: '????:CIP:0012:0001';  Min: 0;     Max: 0    ); ),
    (Nr: 377.12; T: '  FB-Kennung löschen [%s]';                                          R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:3F20:0002!';       R_off: '';                                 Tol: ( A: '????:CIP:3F20:0002';  Min: 0;     Max: 0    ); ),
    (Nr: 377.14; T: '  Servicemodus deaktivieren [%s]';                                   R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:012:0000!';        R_off: '';                                 Tol: ( A: '????:CIP:0012:0000';  Min: 0;     Max: 0    ); ),
    (Nr: 377.16; T: '  FB-Kennung-Neu auslesen [%s]';                                     R_on: '';                             Fkt: COM;                     M: '';        Par: 'RIP:3F20';             R_off: '';                                 Tol: ( A: '????:CIP:3F20:0002';  Min: 0;     Max: 0    ); ),
    (Nr: 377.18; T: '  Selektor Drehzahlregler für Drehzahlwert [%s]';                    R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:00EE:00005535';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 377.20; T: '  Setzen auf Drehzahlregelung [%s]';                                 R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0030:00000008';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 377.22; T: '  Auf Solldrehzahl von 500U/min parametrieren [%s]';                 R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:00E3:001F4000';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 377.24; T: '  Freigebe (über RS232) [%s]';                                       R_on: '101';                          Fkt: COM;                     M: '';        Par: 'OW:0061:00000001';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 377.26; T: '  Messung Spur AB auf DOUT1 und DOUT2(DSO)[Vergleich mit DSO-Aufnahme]';R_on: '';                          Fkt: OsziBild;                M: '';        Par: 'AB_DIS_2.bmp';         R_off: '101';                              Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 377.28; T: '  Freigabe aus [%s]';                                                R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0061:00000002';     R_off: '210,213';                          Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 377.30; T: '  Servicemodus aktivieren [%s]';                                     R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:012:0001!';        R_off: '';                                 Tol: ( A: '????:CIP:0012:0001';  Min: 0;     Max: 0    ); ),
    (Nr: 377.32; T: '  FB-Kennung setzen [%s]';                                           R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:3F20:002A!';       R_off: '';                                 Tol: ( A: '????:CIP:3F20:002A';  Min: 0;     Max: 0    ); ),
    (Nr: 377.34; T: '  Servicemodus deaktivieren [%s]';                                   R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:012:0000!';        R_off: '';                                 Tol: ( A: '????:CIP:0012:0000';  Min: 0;     Max: 0    ); ),
    (Nr: 377.36; T: '  FB-Kennung-Neu auslesen [%s]';                                     R_on: '';                             Fkt: COM;                     M: '';        Par: 'RIP:3F20';             R_off: '';                                 Tol: ( A: '????:CIP:3F20:002A';  Min: 0;     Max: 0    ); ),
    (Nr: 377.38; T: '  Fehler quittieren [%s]';                                           R_on: '';                             Fkt: COM;                     M: '30';      Par: 'OW:0061:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 377.42; T: '  Bereitschaft abfragen [%s]';                                       R_on: '';                             Fkt: COM;                     M: '30';      Par: 'RIP:054';              R_off: '';                                 Tol: ( A: '????:CIP:0054:2000';  Min: 0;     Max: 0    ); ),
    (Nr: 377.44; T: '  Oszilloskop deaktivieren';                                         R_on: '';                             Fkt: OsziKonfig;              M: '';        Par: '0';                    R_off: '230';                              Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 377.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '101,201,202,210,211,212,213,228,230'; Tol: ( A: '';             Min: 0;     Max: 0    ); ),
   
    (Nr: 378.00; T:'JUMP_PS(%s)';                                                         R_on: '';                             Fkt: jump_ps;                 M: '';        Par: 'PS_385';               R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
   
// 380.Test Inkrementalgeber - Emulation Spur A und Spur B     (->  DIS2 - die AB signale werden auf DOUT1 und 2 ausgegeben, Inkrementalgeber aktivieren [OW:00A1:00000003] und zuschalten K232 an -> K230 aus-Resolver und K231 aus - SinCos)
    (Nr: 380.00; T: 'Test Ink.Geber-Emulation Spur A und B (DOUT1 und DOUT2)';            R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 380.02; T: '  Versorgung einschalten und Initiarisierung';                       R_on: '202,203,228,230';              Fkt: OsziKonfig;              M: '';        Par: '31';                   R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 380.04; T: '  Fehler quittieren [%s]';                                           R_on: '201,210,211,212,213';          Fkt: COM;                     M: '40';      Par: 'OW:0061:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 380.06; T: '  Ink.Geberemulation einschalten [%s]';                              R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:00A2:00000082';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 380.08; T: '  Ink.Geber Strichzahl auf 64 setzen [%s]';                          R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:00A5:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 380.10; T: '  Selektor Drehzahlregler für Drehzahlwert [%s]';                    R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:00EE:00005535';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 380.12; T: '  Setzen auf Drehzahlregelung [%s]';                                 R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0030:00000008';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 380.14; T: '  Auf Solldrehzahl von 500U/min parametrieren [%s]';                 R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:00E3:001F4000';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 380.16; T: '  Freigebe (über RS232) [%s]';                                       R_on: '101';                          Fkt: COM;                     M: '';        Par: 'OW:0061:00000001';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 380.18; T: '  Messung Spur AB auf DOUT1 und DOUT2(DSO)[Vergleich mit DSO-Aufnahme]';R_on: '';                          Fkt: OsziBild;                M: '';        Par: 'AB_DIS_2.bmp';         R_off: '101';                              Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 380.20; T: '  Freigabe aus [%s]';                                                R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0061:00000002';     R_off: '210,213';                          Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 380.22; T: '  Fehler quittieren [%s]';                                           R_on: '';                             Fkt: COM;                     M: '40';      Par: 'OW:0061:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 380.26; T: '  Bereitschaft abfragen [%s]';                                       R_on: '';                             Fkt: COM;                     M: '20';      Par: 'RIP:054';              R_off: '';                                 Tol: ( A: '????:CIP:0054:2000';  Min: 0;     Max: 0    ); ),
    (Nr: 380.28; T: '  Oszilloskop deaktivieren';                                         R_on: '';                             Fkt: OsziKonfig;              M: '';        Par: '0';                    R_off: '230';                              Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 380.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '101,202,210,211,212,213,228,230';  Tol: ( A: '';                 Min: 0;     Max: 0    ); ),
   
// 380.Hallgeber-Test 
    (Nr: 385.00; T: 'Hallgeber-Test';                                                     R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 385.02; T: '  versorgung einschalten';                                           R_on: '203,211,212,213,230';          Fkt: nil;                     M: '';        Par: '';                     R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 385.04; T: '  ZK-Untersp.Auswertung aus [%s]';                                   R_on: '210';                          Fkt: COM;                     M: '20';      Par: 'OW:0074:FFFFBFFF';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 385.06; T: '  ZK-Untersp.Auswertung aus [%s]';                                   R_on: '130';                          Fkt: COM;                     M: '10';      Par: 'OW:0072:FFFFBFFF';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 385.08; T: '  Hallgeber aktivieren [%s]';                                        R_on: '';                             Fkt: COM;                     M: '10';      Par: 'OW:00A1:00002003';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 385.10; T: '  Fehler quittieren [%s]';                                           R_on: '';                             Fkt: COM;                     M: '10';      Par: 'OW:0061:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 385.12; T: '  Bereitschaft abfragen [%s]';                                       R_on: '';                             Fkt: COM;                     M: '50';      Par: 'RIP:054';              R_off: '';                                 Tol: ( A: '????:CIP:0054:2000';  Min: 0;     Max: 0    ); ),
    (Nr: 385.14; T: '  Stellung 1 emulieren und abfragen [%s]';                           R_on: '';                             Fkt: COM;                     M: '';        Par: 'RIP:12C';              R_off: '';                                 Tol: ( A: '????:CIP:012C:0003';  Min: 0;     Max: 0    ); ),
    (Nr: 385.16; T: '  Stellung 3 emulieren und abfragen [%s]';                           R_on: '131';                          Fkt: COM;                     M: '';        Par: 'RIP:12C';              R_off: '130';                              Tol: ( A: '????:CIP:012C:0001';  Min: 0;     Max: 0    ); ),
    (Nr: 385.18; T: '  Stellung 2 emulieren und abfragen [%s]';                           R_on: '';                             Fkt: COM;                     M: '';        Par: 'RIP:12C';              R_off: '';                                 Tol: ( A: '????:CIP:012C:0000';  Min: 0;     Max: 0    ); ),
    (Nr: 385.20; T: '  Stellung 6 emulieren und abfragen [%s]';                           R_on: '132';                          Fkt: COM;                     M: '';        Par: 'RIP:12C';              R_off: '131';                              Tol: ( A: '????:CIP:012C:0004';  Min: 0;     Max: 0    ); ),
    (Nr: 385.22; T: '  Stellung 4 emulieren und abfragen [%s]';                           R_on: '';                             Fkt: COM;                     M: '';        Par: 'RIP:12C';              R_off: '';                                 Tol: ( A: '????:CIP:012C:0006';  Min: 0;     Max: 0    ); ),
    (Nr: 385.24; T: '  Stellung 5 emulieren und abfragen [%s]';                           R_on: '130';                          Fkt: COM;                     M: '';        Par: 'RIP:12C';              R_off: '130';                              Tol: ( A: '????:CIP:012C:0007';  Min: 0;     Max: 0    ); ),
{*
    (Nr: 385.14; T: '  Stellung 1 emulieren und abfragen [%s]';                           R_on: '';                             Fkt: COM;                     M: '';        Par: 'RIP:12C';              R_off: '';                                 Tol: ( A: '????:CIP:012C:0001';  Min: 0;     Max: 0    ); ),
    (Nr: 385.16; T: '  Stellung 3 emulieren und abfragen [%s]';                           R_on: '131';                          Fkt: COM;                     M: '';        Par: 'RIP:12C';              R_off: '130';                              Tol: ( A: '????:CIP:012C:0003';  Min: 0;     Max: 0    ); ),
    (Nr: 385.18; T: '  Stellung 2 emulieren und abfragen [%s]';                           R_on: '';                             Fkt: COM;                     M: '';        Par: 'RIP:12C';              R_off: '';                                 Tol: ( A: '????:CIP:012C:0002';  Min: 0;     Max: 0    ); ),
    (Nr: 385.20; T: '  Stellung 6 emulieren und abfragen [%s]';                           R_on: '132';                          Fkt: COM;                     M: '';        Par: 'RIP:12C';              R_off: '131';                              Tol: ( A: '????:CIP:012C:0006';  Min: 0;     Max: 0    ); ),
    (Nr: 385.22; T: '  Stellung 4 emulieren und abfragen [%s]';                           R_on: '';                             Fkt: COM;                     M: '';        Par: 'RIP:12C';              R_off: '';                                 Tol: ( A: '????:CIP:012C:0004';  Min: 0;     Max: 0    ); ),
    (Nr: 385.24; T: '  Stellung 5 emulieren und abfragen [%s]';                           R_on: '130';                          Fkt: COM;                     M: '';        Par: 'RIP:12C';              R_off: '130';                              Tol: ( A: '????:CIP:012C:0005';  Min: 0;     Max: 0    ); ),
*}
    (Nr: 385.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '130,131,132,203,210,211,212,213,230';  Tol: ( A: '';                 Min: 0;     Max: 0    ); ),

// 39. FB - Motorlauf mit Resolver  und hohem Strom   (30A 1s lang)
    (Nr: 390.00; T: 'Motorlauf mit Resolver und hohem Strom';                             R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '213,225';                          Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 390.02; T: '  Versorgung einschalten';                                           R_on: '202,203,210,222,223,230';      Fkt: nil;                     M: '';        Par: '';                     R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 390.04; T: '  Endschalter auf "Schließer" setzen [%s]';                          R_on: '201';                          Fkt: COM;                     M: '20';      Par: 'OW:0094:00000004';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 390.06; T: '  Selektor Drehzahlregler für Drehzahlwert [%s]';                    R_on: '210';                          Fkt: COM;                     M: '10';      Par: 'OW:00EE:00005535';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 390.08; T: '  Setzen auf Drehzahlregelung [%s]';                                 R_on: '';                             Fkt: COM;                     M: '10';      Par: 'OW:0030:00000008';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 390.10; T: '  Drehzahlregelung auf 500 U/min setzen [%s]';                       R_on: '';                             Fkt: COM;                     M: '10';      Par: 'OW:00E3:001F4000';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 390.12; T: '  Maximalstrom auf 32A setzen [%s]';                                 R_on: '';                             Fkt: COM;                     M: '10';      Par: 'OW:001D:002D3D9E';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 390.14; T: '  Nennstrom auf 10A setzen [%s]';                                    R_on: '';                             Fkt: COM;                     M: '10';      Par: 'OW:001C:000E2463';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 390.16; T: '  ZK-Untersp.Auswertung aus [%s]';                                   R_on: '';                             Fkt: COM;                     M: '10';      Par: 'OW:0072:FFFFBFFF';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 390.18; T: '  I2T bei 80%% aus [%s]';                                            R_on: '';                             Fkt: COM;                     M: '10';      Par: 'OW:0074:FFFFBFFF';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 390.20; T: '  I2T-Motor auf 2000ms einstellen [%s]';                             R_on: '';                             Fkt: COM;                     M: '10';      Par: 'OW:001E:01313CA0';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 390.22; T: '  DOUT2 auf "Endstufe Aktiv" parametrieren [%s]';                    R_on: '';                             Fkt: COM;                     M: '10';      Par: 'OW:0089:00000001';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 390.24; T: '  Auf "Freigebe durch DIN9" parametrieren [%s]';                     R_on: '';                             Fkt: COM;                     M: '10';      Par: 'OW:0036:00000000';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 390.26; T: '  Fehler quttieren [%s]';                                            R_on: '';                             Fkt: COM;                     M: '30';      Par: 'OW:0061:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 390.28; T: '  Bereitschaft abfragen [%s]';                                       R_on: '228';                          Fkt: COM;                     M: '10000 ms';Par: 'RIP:054';              R_off: '';                                 Tol: ( A: '????:CIP:0054:2000';  Min: 0;     Max: 0    ); ),
    (Nr: 390.30; T: '  DAUERTEST mit I-Max 30A, Zeit 1s - Prüfling und Bremser freigeben';R_on: '213,225';                      Fkt: Wait;                    M: '';        Par: '1000';                 R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 390.32; T: '  Strom abfragen [%s]';                                              R_on: '';                             Fkt: COM;                     M: '';        Par: 'OR:00C0';              R_off: '213,225,222,223';                  Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 390.34; T: '  Strom Toleranzuntersuchung';                                       R_on: '';                             Fkt: HexToDez;                M: 'A';       Par: '$10000';               R_off: '';                                 Tol: ( A: '';                    Min: 36;    Max: 46   ); ),
    (Nr: 390.36; T: '  Warten (%s)';                                                      R_on: '211,212';                      Fkt: Wait;                    M: '';        Par: '3000';                 R_off: '228';                              Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 390.38; T: '  Endschalter auf "Öffner" setzen [%s]';                             R_on: '';                             Fkt: COM;                     M: '10';      Par: 'OW:0094:00000000';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 390.40; T: '  Fehler quittieren [%s]';                                           R_on: '';                             Fkt: COM;                     M: '10';      Par: 'OW:0061:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 390.42; T: '  Bereitschaft abfragen [%s]';                                       R_on: '';                             Fkt: COM;                     M: '10';      Par: 'RIP:054';              R_off: '';                                 Tol: ( A: '????:CIP:0054:2000';  Min: 0;     Max: 0    ); ),
    (Nr: 390.44; T: '  Motorlauf mit 500U/min [Ja/Nein Abfrage]';                         R_on: '213';                          Fkt: Frage_JaNein;            M: 'x';       Par: 'Läuft der Motor gleichmäßig ?';R_off: '213,201,203,210,211,212';  Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 390.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par:  '';                    R_off: '201,202,203,210,211,212,213,222,223,225,228,230'; Tol: ( A: '';     Min: 0;     Max: 0    ); ),

    (Nr: 395.00; T: 'jump_ps_device(%s)';                                                 R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10         PS_405';    R_off: '';                         Tol: ( A: '';              Min: 0;     Max: 0       );),
    (Nr: 395.02; T: 'jump_ps_device(%s)';                                                 R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_FB_CAN  PS_405';    R_off: '';                         Tol: ( A: '';              Min: 0;     Max: 0       );),
    (Nr: 395.04; T: 'jump_ps_device(%s)';                                                 R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10         PS_405';    R_off: '';                         Tol: ( A: '';              Min: 0;     Max: 0       );),
    (Nr: 395.06; T: 'jump_ps_device(%s)';                                                 R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_STO_FB_CAN PS_405'; R_off: '';                         Tol: ( A: '';              Min: 0;     Max: 0       );),
    (Nr: 395.08; T: 'jump_ps_device(%s)';                                                 R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_STO_FB_PB  PS_405'; R_off: '';                         Tol: ( A: '';              Min: 0;     Max: 0       );),
    (Nr: 395.10; T: 'JUMP_PS_DEVICE(%s)';                                                 R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'Lenze_931KCK42     PS_405';    R_off: '';                         Tol: ( A: '';                   Min: 0;     Max: 0   );),
    (Nr: 395.12; T: 'JUMP_PS_DEVICE(%s)';                                                 R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'Lenze_931KPK42     PS_405';    R_off: '';                         Tol: ( A: '';                   Min: 0;     Max: 0   );),
    (Nr: 395.14; T: 'JUMP_PS_DEVICE(%s)';                                                 R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'Lenze_931KCK44     PS_405';    R_off: '';                         Tol: ( A: '';                   Min: 0;     Max: 0   );),
    (Nr: 395.15; T:' JUMP_PS_DEVICE(%s)';                                                 R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'Lenze_931KCK46     PS_405';   R_off:'';      Tol: ( A:'';           Min: 0;    Max: 0 );),
    (Nr: 395.16; T: 'JUMP_PS_DEVICE(%s)';                                                 R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'Lenze_931KPK44     PS_405';    R_off: '';                         Tol: ( A: '';                   Min: 0;     Max: 0   );),
    (Nr: 395.18; T: 'jump_ps_device(%s)';                                                 R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_FB_ECAT PS_410';    R_off: '';                         Tol: ( A: '';              Min: 0;     Max: 0       );),
    (Nr: 395.20; T: 'jump_ps_device(%s)';                                                 R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'DIS2_48/10_STO_FB_ECAT PS_410'; R_off: '';                         Tol: ( A: '';              Min: 0;     Max: 0       );),
    (Nr: 395.22; T: 'JUMP_PS_DEVICE(%s)';                                                 R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'Lenze_931KEK42     PS_410';    R_off: '';                         Tol: ( A: '';                   Min: 0;     Max: 0   );),
    (Nr: 395.24; T: 'JUMP_PS_DEVICE(%s)';                                                 R_on: '';                             Fkt: jump_ps_device;          M: '';        Par: 'Lenze_931KEK44     PS_410';    R_off: '';                         Tol: ( A: '';                   Min: 0;     Max: 0   );),

// 400. SinCos - Funktion und Fehlererkennung   (bei DIS2 K230 aus- Resolver abschalten, K231 an -SinCos zuschalten und mit Befehl [OW:00A1:00001003] aktivieren
//     nach dem Test K231 aus (SinCos), K230 an (Resolver) und Resolver mit Befehl [OW:00A1:00000003] aktivieren, dann Fehler Quttieren)
    (Nr: 400.00; T: 'Test mit SinCos - Motorlauf bei 48V_ZK';                             R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 400.02; T: '  Versorgung einschalten';                                           R_on: '202,203,210,211,212,213';      Fkt: COM;                     M: '50';      Par: 'BOOT?';                R_off: '230';                              Tol: ( A: 'APPLICATION';         Min: 0;     Max: 0    ); ),
    (Nr: 400.04; T: '  Setzen auf Reg.Freigabe durch DIN9 und RS232[%s]';                 R_on: '217,229,231';                  Fkt: COM;                     M: '30';      Par: 'OW:0036:00000001';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 400.06; T: '  Setzen auf Sollwertselektion durch RS232[%s]';                     R_on: '';                             Fkt: COM;                     M: '30';      Par: 'OW:00EE:00005535';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 400.08; T: '  SinCos aktivieren [%s]';                                           R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:00A1:00001003';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 400.10; T: '  Save ausführen [%s]';                                              R_on: '';                             Fkt: COM;                     M: '';        Par: 'SAVE!';                R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 400.12; T: '  Warten (%s)';                                                      R_on: '';                             Fkt: Wait;                    M: '';        Par: '6000';                 R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 400.14; T: '  Reset ausführen [%s]';                                             R_on: '';                             Fkt: COM;                     M: '';        Par: 'Reset!';               R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 400.16; T: '  Warten (%s)';                                                      R_on: '';                             Fkt: Wait;                    M: '';        Par: '1000';                 R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 400.18; T: '  MOT-ID mit SinCos Ausführen [%s]';                                 R_on: '';                             Fkt: COM;                     M: '50';      Par: 'OW:001A:00000001';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 400.20; T: '  Ergebnis für MOT-ID mit SinCos Abfragen [%s]';                     R_on: '';                             Fkt: COM;                     M: '8000 ms'; Par: 'OR:00A7';              R_off: '';                                 Tol: ( A: '00A7:00000000';       Min: 0;     Max: 0    ); ),
    (Nr: 400.22; T: '  DSO Parametrieren';                                                R_on: '';                             Fkt: OsziKonfig;              M: '';        Par: '26';                   R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 400.24; T: '  Auswertung auf AMON0 einstellen [%s]';                             R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:008A:000000A0';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 400.26; T: '  Die Skalierung definieren [%s]';                                   R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:008B:FFFF0000';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 400.28; T: '  Selektor Drehzahlregler für Drehzahlwert [%s]';                    R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:00EE:00005535';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 400.30; T: '  Setzen auf Drehzahlregelung [%s]';                                 R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0030:00000008';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 400.32; T: '  Auf Solldrehzahl +1000U/min parametrieren [%s]';                   R_on: '201,210,213';                  Fkt: COM;                     M: '';        Par: 'OW:00E3:FFC18000';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 400.34; T: '  Freigebe erteilen [%s]';                                           R_on: '113';                          Fkt: COM;                     M: '';        Par: 'OW:0061:00000001';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 400.36; T: '  Warten (%s)';                                                      R_on: '';                             Fkt: Wait;                    M: '';        Par: '500';                  R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 400.38; T: '  Messung Analogmonitor - steigende Flanke(DSO)[Vergleich mit DSO-Aufnahme]';R_on: '';                     Fkt: OsziBild;                M: '';        Par: 'AMON0_R.bmp';          R_off: '113,229';                          Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 400.40; T: '  Freigabe wegnehmen [%s]';                                          R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0061:00000002';     R_off: '210,213,217,231';                  Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 400.42; T: '  Oszilloskop deaktivieren';                                         R_on: '';                             Fkt: OsziKonfig;              M: '';        Par: '0';                    R_off: '201,202,203,211,212';              Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 400.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '201,202,210,211,212,213,217,229,230,231';  Tol: ( A: '';        Min: 0;     Max: 0    ); ),

    (Nr: 403.00; T: 'JUMP_PS (%s)';                                                       R_on: '';                             Fkt: jump_ps;                 M: '';        Par: 'PS_420';               R_off: '';                           Tol: ( A: '';              Min: 0;     Max: 0       );),
  
// 405.SinCos - Funktion und Fehlererkennung   (bei DIS2 K230 aus- Resolver abschalten, K231 an -SinCos zuschalten und mit Befehl [OW:00A1:00001003] aktivieren
// nach dem Test K231 aus (SinCos), K230 an (Resolver) und Resolver mit Befehl [OW:00A1:00000003] aktivieren, dann Fehler Quttieren)
    (Nr: 405.00; T: 'Test mit SinCos - Motorlauf bei 48V_ZK';                             R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 405.02; T: '  Versorgung einschalten und BOOT? abfragen';                        R_on: '202,203,210,211,212,213';      Fkt: COM;                     M: '50';      Par: 'BOOT?';                R_off: '230';                              Tol: ( A: 'APPLICATION';         Min: 0;     Max: 0    ); ),
    (Nr: 405.04; T: '  Setzen auf Reg.Freigabe durch DIN9 und RS232[%s]';                 R_on: '217,229,231';                  Fkt: COM;                     M: '80';      Par: 'OW:0036:00000001';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 405.06; T: '  Setzen auf Sollwertselektion durch RS232[%s]';                     R_on: '210';                          Fkt: COM;                     M: '30';      Par: 'OW:00EE:00005535';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 405.08; T: '  SinCos aktivieren [%s]';                                           R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:00A1:00001003';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 405.10; T: '  Save ausführen [%s]';                                              R_on: '';                             Fkt: COM;                     M: '';        Par: 'SAVE!';                R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 405.12; T: '  Warten (%s)';                                                      R_on: '';                             Fkt: Wait;                    M: '';        Par: '6000';                 R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 405.14; T: '  Reset ausführen [%s]';                                             R_on: '';                             Fkt: COM;                     M: '';        Par: 'Reset!';               R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 405.16; T: '  Warten (%s)';                                                      R_on: '';                             Fkt: Wait;                    M: '';        Par: '5000';                 R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 405.18; T: '  MOT-ID mit SinCos Ausführen [%s]';                                 R_on: '';                             Fkt: COM;                     M: '50';      Par: 'OW:001A:00000001';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 405.20; T: '  Ergebnis für MOT-ID mit SinCos Abfragen [%s]';                     R_on: '';                             Fkt: COM;                     M: '300';     Par: 'OR:00A7';              R_off: '';                                 Tol: ( A: '00A7:00000000';       Min: 0;     Max: 0    ); ),
    (Nr: 405.22; T: '  DSO Parametrieren';                                                R_on: '';                             Fkt: OsziKonfig;              M: '';        Par: '26';                   R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 405.24; T: '  Auswertung auf AMON0 einstellen [%s]';                             R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:008A:000000A0';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 405.26; T: '  Die Skalierung definieren [%s]';                                   R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:008B:FFFF0000';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 405.28; T: '  Setzen auf Positionierung [%s]';                                   R_on: '201';                          Fkt: COM;                     M: '';        Par: 'OW:0030:00000010';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 405.30; T: '  Selektor Positionierung auf Pos 0 [%s]';                           R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0112:00000000';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 405.32; T: '  Ziel von Pos 0 auf -5000 Usetzen [%s]';                            R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0124:EC780000';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 405.34; T: '  Geschwindigkeit auf +1000U/min parametrieren [%s]';                R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0125:003E8000';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 405.36; T: '  Schleppfeher als Warnung parametrieren [%s]';                      R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0072:EDFBFFFF';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 405.38; T: '  Schleppfeherwarnung ignorieren [%s]';                              R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0074:EDFBFFFF';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 405.40; T: '  Freigebe erteilen [%s]';                                           R_on: '113,229';                      Fkt: COM;                     M: '';        Par: 'OW:0061:00000001';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 405.42; T: '  Positionierung starten [%s]';                                      R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0061:00000021';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 405.44; T: '  Warten (%s)';                                                      R_on: '';                             Fkt: Wait;                    M: '';        Par: '500';                  R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 405.46; T: '  Messung Analogmonitor - steigende Flanke(DSO)[Vergleich mit DSO-Aufnahme]';R_on: '';                     Fkt: OsziBild;                M: '';        Par: 'AMON0_R.bmp';          R_off: '113,229';                          Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 405.48; T: '  Freigabe wegnehmen [%s]';                                          R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0061:00000002';     R_off: '210,213,217,231';                  Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 405.50; T: '  Oszilloskop deaktivieren';                                         R_on: '';                             Fkt: OsziKonfig;              M: '';        Par: '0';                    R_off: '201,202,203,211,212';              Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 405.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '113,201,202,210,211,212,213,217,229,230,231'; Tol: ( A: '';     Min: 0;     Max: 0    ); ),

    (Nr: 407.00; T: 'JUMP_PS (%s)';                                                       R_on: '';                             Fkt: jump_ps;                 M: '';        Par: 'PS_420';               R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    );),

// 410. FB_ECAT - --> SinCos - Funktion und Fehlererkennung   (bei DIS2 K230 aus- Resolver abschalten, K231 an -SinCos zuschalten und mit Befehl [OW:00A1:00001003] aktivieren
//     nach dem Test K231 aus (SinCos), K230 an (Resolver) und Resolver mit Befehl [OW:00A1:00000003] aktivieren, dann Fehler Quttieren)
    (Nr: 410.00; T: 'Test mit SinCos - Motorlauf bei 48V_ZK';                             R_on: '';                             Fkt: LabelFkt;                M: '';        Par: 'NIO-Loop:1';           R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 410.02; T: '  Versorgung einschalten und BOOT? abfragen';                        R_on: '203,202,211,212,210,213';      Fkt: COM;                     M: '50';      Par: 'BOOT?';                R_off: '230';                              Tol: ( A: 'APPLICATION';         Min: 0;     Max: 0    ); ),
    (Nr: 410.04; T: '  Setzen auf Reg.Freigabe durch DIN9 und RS232[%s]';                 R_on: '217,229,231';                  Fkt: COM;                     M: '50';      Par: 'OW:0036:00000001';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 410.06; T: '  Setzen auf Sollwertselektion durch RS232[%s]';                     R_on: '';                             Fkt: COM;                     M: '50';      Par: 'OW:00EE:00005535';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 410.08; T: '  SinCos aktivieren [%s]';                                           R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:00A1:00001003';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 410.10; T: '  Save ausführen [%s]';                                              R_on: '';                             Fkt: COM;                     M: '';        Par: 'SAVE!';                R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 410.12; T: '  Warten (%s)';                                                      R_on: '';                             Fkt: Wait;                    M: '';        Par: '6000';                 R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 410.14; T: '  Reset ausführen [%s]';                                             R_on: '';                             Fkt: COM;                     M: '';        Par: 'Reset!';               R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 410.16; T: '  Bootvorgang abwarten [%s]';                                        R_on: '';                             Fkt: COM;                     M: '50';      Par: 'BOOT?';                R_off: '';                                 Tol: ( A: 'APPLICATION';         Min: 0;     Max: 0    ); ),
    (Nr: 410.18; T: '  Warten (%s)';                                                      R_on: '';                             Fkt: Wait;                    M: '';        Par: '2000';                 R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 410.20; T: '  Status lesen [%s]';                                                R_on: '';                             Fkt: COM;                     M: '50';      Par: 'OR:0032';              R_off: '';                                 Tol: ( A: '0032:????????';       Min: 0;     Max: 0    ); ),
    (Nr: 410.22; T: '  Fehler quittieren [%s]';                                           R_on: '';                             Fkt: COM;                     M: '50';      Par: 'OW:0061:00000040';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 410.24; T: '  MOT-ID mit SinCos Ausführen [%s]';                                 R_on: '';                             Fkt: COM;                     M: '50';      Par: 'OW:001A:00000001';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 410.26; T: '  Ergebnis für MOT-ID mit SinCos Abfragen [%s]';                     R_on: '';                             Fkt: COM;                     M: '300';     Par: 'OR:00A7';              R_off: '';                                 Tol: ( A: '00A7:00000000';       Min: 0;     Max: 0    ); ),
    (Nr: 410.28; T: '  DSO Parametrieren';                                                R_on: '';                             Fkt: OsziKonfig;              M: '';        Par: '26';                   R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 410.30; T: '  Auswertung auf AMON0 einstellen [%s]';                             R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:008A:000000A0';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 410.32; T: '  Die Skalierung definieren [%s]';                                   R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:008B:FFFF0000';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 410.34; T: '  Setzen auf Positionierung [%s]';                                   R_on: '201';                          Fkt: COM;                     M: '';        Par: 'OW:0030:00000010';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 410.36; T: '  Selektor Positionierung auf Pos 0 [%s]';                           R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0112:00000000';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 410.38; T: '  Ziel von Pos 0 auf -5000 Usetzen [%s]';                            R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0124:EC780000';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 410.40; T: '  Geschwindigkeit auf +1000U/min parametrieren [%s]';                R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0125:003E8000';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 410.42; T: '  Schleppfeher als Warnung parametrieren [%s]';                      R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0072:EDFBFFFF';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 410.44; T: '  Schleppfeherwarnung ignorieren [%s]';                              R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0074:EDFBFFFF';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 410.46; T: '  Freigebe erteilen [%s]';                                           R_on: '113';                          Fkt: COM;                     M: '';        Par: 'OW:0061:00000001';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 410.48; T: '  Positionierung starten [%s]';                                      R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0061:00000021';     R_off: '';                                 Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 410.50; T: '  Warten (%s)';                                                      R_on: '';                             Fkt: Wait;                    M: '';        Par: '1000';                 R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 410.52; T: '  Messung Analogmonitor - steigende Flanke(DSO)[Vergleich mit DSO-Aufnahme]';R_on: '';                     Fkt: OsziBild;                M: '';        Par: 'AMON0_R.bmp';          R_off: '113,229';                          Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 410.54; T: '  Freigabe wegnehmen [%s]';                                          R_on: '';                             Fkt: COM;                     M: '';        Par: 'OW:0061:00000002';     R_off: '210,213,217,231';                  Tol: ( A: 'OK!';                 Min: 0;     Max: 0    ); ),
    (Nr: 410.56; T: '  Oszilloskop deaktivieren';                                         R_on: '';                             Fkt: OsziKonfig;              M: '';        Par: '0';                    R_off: '201,202,203,211,212';              Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 410.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '113,201,202,210,211,212,213,217,229,231'; Tol: ( A: '';         Min: 0;     Max: 0    ); ),

// 420.Default-Parametersatz laden                                                                                                                                  
    (Nr: 420.00; T: 'Default-Parametersatz laden';                                        R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 420.02; T: '  Versorgung einschalten und Boot? Abfrage';                         R_on: '203,230';                      Fkt: COM;                     M: '50';      Par: 'BOOT?';                R_off: '';                                 Tol: ( A: 'APPLICATION';         Min: 0;     Max: 0    ); ),
    (Nr: 420.04; T: '  Default-Parameter Laden [%s]';                                     R_on: '';                             Fkt: COM;                     M: '';        Par: 'INIT!';                R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 420.05; T: '  Nach INIT! auf den Restart warten [%s]ms';                         R_on: '';                             Fkt: WAIT;                    M: '';        Par: '500';                  R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 420.06; T: '  Bootvorgang abwarten [%s]';                                        R_on: '';                             Fkt: COM;                     M: '40';      Par: 'BOOT?';                R_off: '';                                 Tol: ( A: 'APPLICATION';         Min: 0;     Max: 0    ); ),
    (Nr: 420.08; T: '  Bereitschaft abfragen [%s]';                                       R_on: '';                             Fkt: COM;                     M: '50';      Par: 'RIP:054';              R_off: '';                                 Tol: ( A: '????:CIP:0054:8000';  Min: 0;     Max: 0    ); ),
    (Nr: 420.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '203,230';                          Tol: ( A: '';                    Min: 0;     Max: 0    ); ),

// 430. Abfrage der FW-Version und FW-Download -  (Keine Antwort bei Prüfling ohne SW)                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
    (Nr:  430.00; T:'Firmware-Download';                                                   R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '';                                 Tol: ( A: '';              Min:  0;    Max:  0      ); ),
    (Nr:  430.02; T:'  24V CT-Versorgung einschalten   (K101,102)';                        R_on: '203';                          Fkt: Wait;                    M: '';        Par: '2000';                 R_off: '';                                 Tol: ( A: '';              Min:  0;    Max:  0      ); ),
    (Nr:  430.04; T:'  FW-KA abfragen (%s)';                                               R_on: '';                             Fkt: COM;                     M: '8000 ms'; Par: 'OR:0018';              R_off: '';                                 Tol: ( A: '0018:????????'; Min:  0;    Max:  0      ); ),
    (Nr:  430.06; T:'  FW-Version abfragen (%s)';                                          R_on: '';                             Fkt: COM;                     M: '10';      Par: 'OR:0026';              R_off: '';                                 Tol: ( A: '0026:????????'; Min:  0;    Max:  0      ); ),
    (Nr:  430.08; T:'  FW-KM abfragen (%s)';                                               R_on: '';                             Fkt: COM;                     M: '10';      Par: 'OR:0017';              R_off: '';                                 Tol: ( A: '0017:????????'; Min:  0;    Max:  0      ); ),
    (Nr:  430.10; T:'  Version checken und aktualisieren';                                 R_on: '';                             Fkt: FW_Version;              M: 'x';       Par: 'FIRMWARE_0002';        R_off: '';                                 Tol: ( A: '';              Min:  0;    Max:  0      ); ),
    (Nr:  430.12; T:'  Reset ausführen - RESET!';                                          R_on: '';                             Fkt: COM;                     M: '';        Par: 'RESET!';               R_off: '';                                 Tol: ( A: '';              Min:  0;    Max:  0      ); ),  
    (Nr:  430.14; T:'  Delay';                                                             R_on: '';                             Fkt: Wait;                    M: '';        Par: '1000';                 R_off: '';                                 Tol: ( A: '';              Min:  0;    Max:  0      ); ),
    (Nr:  430.16; T:'  FW-KA abfragen (%s)';                                               R_on: '';                             Fkt: COM;                     M: '8000 ms'; Par: 'OR:0018';              R_off: '';                                 Tol: ( A: '0018:????????'; Min:  0;    Max:  0      ); ),
    (Nr:  430.18; T:'  FW-Version abfragen (%s)';                                          R_on: '';                             Fkt: COM;                     M: '10';      Par: 'OR:0026';              R_off: '';                                 Tol: ( A: '0026:????????'; Min:  0;    Max:  0      ); ),
    (Nr:  430.20; T:'  FW-KM abfragen (%s)';                                               R_on: '';                             Fkt: COM;                     M: '10';      Par: 'OR:0017';              R_off: '';                                 Tol: ( A: '0017:????????'; Min:  0;    Max:  0      ); ),
    (Nr:  430.22; T:'  Version checken und aktualisieren';                                 R_on: '';                             Fkt: FW_Version;              M: 'x';       Par: 'CHECK FIRMWARE_0002';  R_off: '';                                 Tol: ( A: '';              Min:  0;    Max:  0      ); ),
    (Nr:  430.99; T:'Fertig';                                                              R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '203';                              Tol: ( A: '';              Min:  0;    Max:  0      ); ),
                                                                                                                                                                               
// 435. Gerätekodierung-Test
    (Nr: 435.00; T: 'Test Gerätekodierung';                                               R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '203,230';                          Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 435.02; T:'  24V CT-Versorgung einschalten   (K101,102)';                        R_on: '203,230';                      Fkt: Wait;                    M: '';        Par: '1000';                 R_off: '';                                 Tol: ( A: '';                    Min:  0;    Max:  0      ); ),
    (Nr: 435.04; T: '  Gerätekodierung auslesen[%s]';                                     R_on: '';                             Fkt: COM;                     M: '1000 ms'; Par: 'OR:0010';              R_off: '';                                 Tol: ( A: '0010:0000????';       Min: 0;     Max: 0    ); ),
    (Nr: 435.06; T: '  Kodierung mit Vorgabe überprüfen';                                 R_on: '';                             Fkt: Code_Check;              M: '';        Par: '';                     R_off: '';                                 Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
    (Nr: 435.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                     R_off: '203,230';                          Tol: ( A: '';                    Min: 0;     Max: 0    ); ),
                                                                                                                             
// 440.Servicedaten laden                                                                                                                                             
    (Nr: 440.00; T: 'Servicedaten laden';                                                 R_on: '';                             Fkt: nil;                     M: '';        Par: '';                          R_off: '';                            Tol: ( A: '';                             Min: 0; Max: 0 ); ),
    (Nr: 440.02; T: '  Versorgung einschalten und Boot? Abfrage';                         R_on: '203';                          Fkt: COM;                     M: '50';      Par: 'BOOT?';                     R_off: '';                            Tol: ( A: 'APPLICATION';                  Min: 0; Max: 0 ); ),
    (Nr: 440.04; T: '  Testmodus ein [%s]';                                               R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:012:0001!';             R_off: '';                            Tol: ( A: '????:CIP:0012:0001';           Min: 0; Max: 0 ); ),
    (Nr: 440.06; T: '  SerienNummer  [%s]';                                               R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:3F1F:@SerNr!';          R_off: '';                            Tol: ( A: '????:CIP:3F1F:@SerNr';         Min: 0; Max: 0 ); ),
    (Nr: 440.08; T: '  HW_Vers_Haupt [%s]';                                               R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:3F08:@HWVersionHaupt!'; R_off: '';                            Tol: ( A: '????:CIP:3F08:@HWVersionHaupt';Min: 0; Max: 0 ); ),
    (Nr: 440.10; T: '  HW_Vers_Sub   [%s]';                                               R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:3F09:@HWVersionSub!';   R_off: '';                            Tol: ( A: '????:CIP:3F09:@HWVersionSub';  Min: 0; Max: 0 ); ),
    (Nr: 440.12; T: '  Year und KW   [%s]';                                               R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:3F0F:@PlatinenNr1!';    R_off: '';                            Tol: ( A: '????:CIP:3F0F:@PlatinenNr1';   Min: 0; Max: 0 ); ),
    (Nr: 440.14; T: '  Fremdfertiger [%s]';                                               R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:3F10:@PlatinenNr2!';    R_off: '';                            Tol: ( A: '????:CIP:3F10:@PlatinenNr2';   Min: 0; Max: 0 ); ),
    (Nr: 440.16; T: '  lfd. Nummer   [%s]';                                               R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:3F11:@PlatinenNr3!';    R_off: '';                            Tol: ( A: '????:CIP:3F11:@PlatinenNr3';   Min: 0; Max: 0 ); ),
    (Nr: 440.18; T: '  Prüfdatum     [%s]';                                               R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:3F12:@Datum!';          R_off: '';                            Tol: ( A: '????:CIP:3F12:@Datum';         Min: 0; Max: 0 ); ),
    (Nr: 440.20; T: '  Testmodus aus [%s]';                                               R_on: '';                             Fkt: COM;                     M: '';        Par: 'SIP:012:0000!';             R_off: '';                            Tol: ( A: '????:CIP:0012:0000';           Min: 0; Max: 0 ); ),
    (Nr: 440.99; T: 'Fertig';                                                             R_on: '';                             Fkt: nil;                     M: '';        Par: '';                          R_off: '203';                         Tol: ( A: '';                             Min: 0; Max: 0 ); ),

// 990.TESTENDE
    (Nr:990.00; T: 'TESTENDE';                                                            R_on: '';                             Fkt: nil;                     M: '';        Par: '';                          R_off: '';                            Tol: ( A:''; Min:  0; Max:  0 ); )
